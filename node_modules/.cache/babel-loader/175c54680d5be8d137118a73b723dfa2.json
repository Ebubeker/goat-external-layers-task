{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/changeStyle/StyleDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/changeStyle/StyleDialog.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport { Draggable } from \"draggable-vue-directive\";\nimport Legend from \"../../viewer/ol/controls/Legend\";\nimport FillVectorStyle from \"../changeStyle/FillVectorStyle\";\nimport LineVectorStyle from \"../changeStyle/LineVectorStyle\";\nimport IconVectorStyle from \"../changeStyle/IconVectorStyle\";\nimport { EventBus } from \"../../../EventBus\";\nimport { getNestedProperty } from \"../../../utils/Helpers\";\nexport default {\n  props: [\"item\", \"translate\", \"styleDialogStatus\"],\n  mixins: [Legend],\n  directives: {\n    Draggable: Draggable\n  },\n  data: function data() {\n    return {\n      isExpanded: true,\n      tab: null,\n      dialog: true,\n      kind: null,\n      ith: null,\n      handleId: \"handle-id\",\n      draggableValue: {\n        handle: undefined,\n        boundingElement: undefined,\n        resetInitialPos: undefined\n      }\n    };\n  },\n  components: {\n    FillVectorStyle: FillVectorStyle,\n    LineVectorStyle: LineVectorStyle,\n    IconVectorStyle: IconVectorStyle\n  },\n  computed: _objectSpread({}, mapGetters(\"app\", {\n    appColor: \"appColor\"\n  }), {}, mapFields(\"map\", {\n    vectorTileStyles: \"vectorTileStyles\",\n    vectorTileStylesCopy: \"vectorTileStylesCopy\"\n  }), {\n    getItem: function getItem() {\n      return this.item;\n    },\n    getItemAttributes: function getItemAttributes() {\n      var stylesObj = this.vectorTileStyles;\n      var currentLocale = this.$i18n.locale;\n      var layerName = this.item.get(\"name\");\n      return this.filterStylesOnActiveModeByLayerName(layerName).rules.map(function (rule, i) {\n        return {\n          text: getNestedProperty(stylesObj, \"\".concat(layerName, \".translation.\").concat(rule.name, \".\").concat(currentLocale)) ? getNestedProperty(stylesObj, \"\".concat(layerName, \".translation.\").concat(rule.name, \".\").concat(currentLocale)) : rule.name,\n          value: i\n        };\n      });\n    }\n  }),\n  methods: {\n    expand: function expand() {\n      this.isExpanded = !this.isExpanded;\n    },\n    close: function close() {\n      EventBus.$emit(\"updateStyleDialogStatusForLayerTree\", false);\n      EventBus.$emit(\"updateStyleDialogStatusForLayerOrder\", false); //Refresh the legend\n\n      this.item.set(\"layerTreeKey\", this.item.get(\"layerTreeKey\") + 1);\n    },\n    onItemAttribueChange: function onItemAttribueChange(ith) {\n      this.ith = ith;\n      this.kind = this.filterStylesOnActiveModeByLayerName(this.item.get(\"name\")).rules[ith].symbolizers[0].kind;\n    }\n  },\n  mounted: function mounted() {\n    var element = document.getElementById(\"ol-map-container\");\n    this.draggableValue.resetInitialPos = false;\n    this.draggableValue.boundingElement = element;\n    this.draggableValue.handle = this.$refs[this.handleId];\n  }\n};",{"version":3,"sources":["StyleDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-dialog\n    width=\"300\"\n    overlay-opacity=\"0\"\n    persistent\n    no-click-animation\n    hide-overlay\n    v-model=\"dialog\"\n    content-class=\"v-dialog\"\n  >\n    <v-card\n      :style=\"[isExpanded ? { height: 'auto' } : { height: '50px' }]\"\n      style=\"position:fixed;top:10px;left:360px;z-index:2;min-width:350px;max-width:450px;height:450px;overflow:hidden;\"\n      v-draggable=\"draggableValue\"\n      ondragstart=\"return false;\"\n    >\n      <v-layout justify-space-between column fill-height>\n        <v-app-bar\n          :color=\"appColor.primary\"\n          height=\"50\"\n          style=\"cursor:grab;\"\n          dark\n          :ref=\"handleId\"\n        >\n          <v-app-bar-nav-icon>\n            <v-icon style=\"color:#ffffff;\">\n              fas fa-cog\n            </v-icon>\n          </v-app-bar-nav-icon>\n          <v-toolbar-title>\n            <b>{{ translate(\"layerName\", item.get(\"name\")) }}</b>\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-icon @click=\"expand\" class=\"toolbar-icons mr-2\">\n            {{ isExpanded ? \"fas fa-chevron-up\" : \"fas fa-chevron-down\" }}\n          </v-icon>\n          <v-icon @click=\"close\" class=\"toolbar-icons ml-2\">\n            fas fa-times\n          </v-icon>\n        </v-app-bar>\n        <vue-scroll>\n          <v-select\n            :items=\"getItemAttributes\"\n            @change=\"onItemAttribueChange($event)\"\n            :label=\"$t('appBar.stylePanel.selectAttribute')\"\n            outlined\n            style=\"width:400px;margin:auto;padding-top:20px;margin-bottom:-20px\"\n          ></v-select>\n          <span v-if=\"kind === `Fill`\">\n            <FillVectorStyle\n              :item=\"item\"\n              :ruleIndex=\"ith\"\n              :key=\"ith\"\n            ></FillVectorStyle>\n          </span>\n          <span v-else-if=\"kind === `Line`\">\n            <LineVectorStyle\n              :item=\"item\"\n              :ruleIndex=\"ith\"\n              :key=\"ith\"\n            ></LineVectorStyle>\n          </span>\n          <span v-else-if=\"kind === `Icon`\">\n            <IconVectorStyle\n              :item=\"item\"\n              :ruleIndex=\"ith\"\n              :key=\"ith\"\n            ></IconVectorStyle>\n          </span>\n        </vue-scroll>\n      </v-layout>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport { Draggable } from \"draggable-vue-directive\";\nimport Legend from \"../../viewer/ol/controls/Legend\";\nimport FillVectorStyle from \"../changeStyle/FillVectorStyle\";\nimport LineVectorStyle from \"../changeStyle/LineVectorStyle\";\nimport IconVectorStyle from \"../changeStyle/IconVectorStyle\";\nimport { EventBus } from \"../../../EventBus\";\nimport { getNestedProperty } from \"../../../utils/Helpers\";\n\nexport default {\n  props: [\"item\", \"translate\", \"styleDialogStatus\"],\n  mixins: [Legend],\n  directives: {\n    Draggable\n  },\n  data: () => ({\n    isExpanded: true,\n    tab: null,\n    dialog: true,\n    kind: null,\n    ith: null,\n    handleId: \"handle-id\",\n    draggableValue: {\n      handle: undefined,\n      boundingElement: undefined,\n      resetInitialPos: undefined\n    }\n  }),\n  components: {\n    FillVectorStyle,\n    LineVectorStyle,\n    IconVectorStyle\n  },\n  computed: {\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    }),\n    ...mapFields(\"map\", {\n      vectorTileStyles: \"vectorTileStyles\",\n      vectorTileStylesCopy: \"vectorTileStylesCopy\"\n    }),\n    getItem() {\n      return this.item;\n    },\n    getItemAttributes() {\n      const stylesObj = this.vectorTileStyles;\n      const currentLocale = this.$i18n.locale;\n      const layerName = this.item.get(\"name\");\n      return this.filterStylesOnActiveModeByLayerName(layerName).rules.map(\n        (rule, i) => {\n          return {\n            text: getNestedProperty(\n              stylesObj,\n              `${layerName}.translation.${rule.name}.${currentLocale}`\n            )\n              ? getNestedProperty(\n                  stylesObj,\n                  `${layerName}.translation.${rule.name}.${currentLocale}`\n                )\n              : rule.name,\n            value: i\n          };\n        }\n      );\n    }\n  },\n  methods: {\n    expand() {\n      this.isExpanded = !this.isExpanded;\n    },\n    close() {\n      EventBus.$emit(\"updateStyleDialogStatusForLayerTree\", false);\n      EventBus.$emit(\"updateStyleDialogStatusForLayerOrder\", false);\n      //Refresh the legend\n      this.item.set(\"layerTreeKey\", this.item.get(\"layerTreeKey\") + 1);\n    },\n    onItemAttribueChange(ith) {\n      this.ith = ith;\n      this.kind = this.filterStylesOnActiveModeByLayerName(\n        this.item.get(\"name\")\n      ).rules[ith].symbolizers[0].kind;\n    }\n  },\n  mounted() {\n    const element = document.getElementById(\"ol-map-container\");\n    this.draggableValue.resetInitialPos = false;\n    this.draggableValue.boundingElement = element;\n    this.draggableValue.handle = this.$refs[this.handleId];\n  }\n};\n</script>\n<style>\n.v-dialog {\n  box-shadow: none;\n}\n</style>\n"],"sourceRoot":"src/components/layers/changeStyle"}]}