{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js??ref--13-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/utils/select.js","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/utils/select.js","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js","mtime":1657636581253}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _typeof from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n// Some util functions around select components preparation to reduce size of the Property component\nvar selectUtils = {};\nexport default selectUtils; // from raw data to items usable in select components\n\nselectUtils.getSelectItems = function (rawSelectItems, fullSchema) {\n  var selectItems = [];\n\n  if (!rawSelectItems) {// nothing to do\n  } else if (fullSchema.type === \"object\" && fullSchema.properties && Object.keys(fullSchema.properties).length || fullSchema.type === \"array\" && fullSchema.items && fullSchema.items.type === \"object\" && fullSchema.items.properties && Object.keys(fullSchema.items.properties).length) {\n    var keys = fullSchema.properties ? fullSchema.properties.map(function (p) {\n      return p.key;\n    }) : Object.keys(fullSchema.items.properties);\n    rawSelectItems.forEach(function (item) {\n      var filteredItem = {};\n      keys.forEach(function (key) {\n        if (item[key] !== undefined) filteredItem[key] = item[key];\n      });\n      selectItems.push(filteredItem);\n    });\n  } else {\n    rawSelectItems.forEach(function (item) {\n      return selectItems.push(item);\n    });\n  }\n\n  return selectItems;\n};\n\nvar matchItem = function matchItem(selectItem, item, itemKey) {\n  if ([null, undefined].includes(selectItem)) return false;\n  if ([null, undefined].includes(item)) return false;\n  var selectItemStr = JSON.stringify(_typeof(selectItem) === \"object\" ? selectItem[itemKey] : selectItem);\n  var itemStr = JSON.stringify(_typeof(item) === \"object\" ? item[itemKey] : item);\n  return selectItemStr === itemStr;\n};\n\nselectUtils.fillSelectItems = function (fullSchema, modelWrapper, modelKey, selectItems, itemKey) {\n  var model = modelWrapper[modelKey];\n  if (!model) return;\n\n  if (fullSchema.type === \"array\") {\n    model.map(function (item) {\n      return item;\n    }).reverse().forEach(function (item) {\n      if (!selectItems.find(function (selectItem) {\n        return matchItem(selectItem, item, itemKey);\n      })) {\n        selectItems.push(item);\n      }\n    });\n  } else if (!selectItems.find(function (selectItem) {\n    return matchItem(selectItem, model, itemKey);\n  })) {\n    selectItems.push(model);\n  }\n};\n\nselectUtils.fillList = function (fullSchema, modelWrapper, modelKey, selectItems, itemKey) {\n  var model = modelWrapper[modelKey];\n  if (!model || !selectItems.length) return; // Prefill the lists (not actual select component, but an array instead)\n\n  selectItems.forEach(function (selectItem) {\n    if (!model.find(function (modelItem) {\n      return matchItem(selectItem, modelItem, itemKey);\n    })) {\n      model.push(selectItem);\n    }\n  }); // also remove deprecated items\n\n  model.forEach(function (item, i) {\n    if (!selectItems.find(function (selectItem) {\n      return matchItem(selectItem, item, itemKey);\n    })) {\n      model[i] = null;\n    }\n  });\n  modelWrapper[modelKey] = modelWrapper[modelKey].filter(function (item) {\n    return !!item;\n  });\n};",{"version":3,"sources":["/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/utils/select.js"],"names":["selectUtils","getSelectItems","rawSelectItems","fullSchema","selectItems","type","properties","Object","keys","length","items","map","p","key","forEach","item","filteredItem","undefined","push","matchItem","selectItem","itemKey","includes","selectItemStr","JSON","stringify","itemStr","fillSelectItems","modelWrapper","modelKey","model","reverse","find","fillList","modelItem","i","filter"],"mappings":"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","sourcesContent":["// Some util functions around select components preparation to reduce size of the Property component\n\nconst selectUtils = {};\nexport default selectUtils;\n\n// from raw data to items usable in select components\nselectUtils.getSelectItems = (rawSelectItems, fullSchema) => {\n  const selectItems = [];\n\n  if (!rawSelectItems) {\n    // nothing to do\n  } else if (\n    (fullSchema.type === \"object\" &&\n      fullSchema.properties &&\n      Object.keys(fullSchema.properties).length) ||\n    (fullSchema.type === \"array\" &&\n      fullSchema.items &&\n      fullSchema.items.type === \"object\" &&\n      fullSchema.items.properties &&\n      Object.keys(fullSchema.items.properties).length)\n  ) {\n    const keys = fullSchema.properties\n      ? fullSchema.properties.map(p => p.key)\n      : Object.keys(fullSchema.items.properties);\n    rawSelectItems.forEach(item => {\n      const filteredItem = {};\n      keys.forEach(key => {\n        if (item[key] !== undefined) filteredItem[key] = item[key];\n      });\n      selectItems.push(filteredItem);\n    });\n  } else {\n    rawSelectItems.forEach(item => selectItems.push(item));\n  }\n  return selectItems;\n};\n\nconst matchItem = (selectItem, item, itemKey) => {\n  if ([null, undefined].includes(selectItem)) return false;\n  if ([null, undefined].includes(item)) return false;\n  const selectItemStr = JSON.stringify(\n    typeof selectItem === \"object\" ? selectItem[itemKey] : selectItem\n  );\n  const itemStr = JSON.stringify(\n    typeof item === \"object\" ? item[itemKey] : item\n  );\n  return selectItemStr === itemStr;\n};\n\nselectUtils.fillSelectItems = (\n  fullSchema,\n  modelWrapper,\n  modelKey,\n  selectItems,\n  itemKey\n) => {\n  const model = modelWrapper[modelKey];\n  if (!model) return;\n  if (fullSchema.type === \"array\") {\n    model\n      .map(item => item)\n      .reverse()\n      .forEach(item => {\n        if (\n          !selectItems.find(selectItem => matchItem(selectItem, item, itemKey))\n        ) {\n          selectItems.push(item);\n        }\n      });\n  } else if (\n    !selectItems.find(selectItem => matchItem(selectItem, model, itemKey))\n  ) {\n    selectItems.push(model);\n  }\n};\n\nselectUtils.fillList = (\n  fullSchema,\n  modelWrapper,\n  modelKey,\n  selectItems,\n  itemKey\n) => {\n  const model = modelWrapper[modelKey];\n  if (!model || !selectItems.length) return;\n  // Prefill the lists (not actual select component, but an array instead)\n  selectItems.forEach(selectItem => {\n    if (!model.find(modelItem => matchItem(selectItem, modelItem, itemKey))) {\n      model.push(selectItem);\n    }\n  });\n  // also remove deprecated items\n  model.forEach((item, i) => {\n    if (!selectItems.find(selectItem => matchItem(selectItem, item, itemKey))) {\n      model[i] = null;\n    }\n  });\n  modelWrapper[modelKey] = modelWrapper[modelKey].filter(item => !!item);\n};\n"]}]}