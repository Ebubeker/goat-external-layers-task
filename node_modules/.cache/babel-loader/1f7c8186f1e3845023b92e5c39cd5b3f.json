{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js??ref--13-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/factory/layer.js","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/factory/layer.js","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js","mtime":1657636581253}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _typeof from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport TileLayer from \"ol/layer/Tile\";\nimport TileWmsSource from \"ol/source/TileWMS\";\nimport OsmSource from \"ol/source/OSM\";\nimport BingMaps from \"ol/source/BingMaps\";\nimport VectorTileLayer from \"ol/layer/VectorTile\";\nimport VectorTileSource from \"ol/source/VectorTile\";\nimport MvtFormat from \"ol/format/MVT\";\nimport GeoJsonFormat from \"ol/format/GeoJSON\";\nimport TopoJsonFormat from \"ol/format/TopoJSON\";\nimport KmlFormat from \"ol/format/KML\";\nimport VectorSource from \"ol/source/Vector\";\nimport VectorImageLayer from \"ol/layer/VectorImage\";\nimport ImageWMS from \"ol/source/ImageWMS.js\";\nimport { Image as ImageLayer } from \"ol/layer.js\";\nimport XyzSource from \"ol/source/XYZ\";\nimport { OlStyleFactory } from \"../factory/OlStyle\";\nimport { all } from \"ol/loadingstrategy\";\nimport ApiService from \"../services/api.service\";\nimport { geobufToFeatures } from \"../utils/MapUtils\";\nimport appStore from \"../store/modules/app\";\nimport scenarioStore from \"../store/modules/scenarios\";\nimport poisAoisStore from \"../store/modules/poisaois\";\nimport mapStore from \"../store/modules/map\";\nimport axios from \"axios\";\n/**\n * Factory, which creates OpenLayers layer instances according to a given config\n * object.\n */\n\nexport var LayerFactory = {\n  /**\n   * Maps the format literal of the config to the corresponding OL module.\n   * @type {Object}\n   */\n  formatMapping: {\n    MVT: MvtFormat,\n    GeoJSON: GeoJsonFormat,\n    TopoJSON: TopoJsonFormat,\n    KML: KmlFormat\n  },\n  baseConf: function baseConf(lConf) {\n    if ([\"heatmap\", \"basemap\"].includes(lConf.group)) {\n      lConf.queryable = false;\n    }\n\n    lConf.queryable = lConf.queryable === undefined ? true : lConf.queryable;\n    var lOpts = {\n      group: lConf.group,\n      name: lConf.name,\n      type: lConf.type,\n      visible: lConf.visible || false,\n      opacity: lConf.opacity || 1,\n      showOptions: false,\n      attributeDisplayStatusKey: 0,\n      layerTreeKey: 0,\n      layerOrderKey: 1,\n      queryable: lConf.queryable,\n      displayInLayerList: lConf.display_in_layer_list || true,\n      legendGraphicUrls: lConf.legend_urls || null\n    };\n\n    if (lConf.min_resolution) {\n      lOpts.minResolution = lConf.min_resolution;\n    }\n\n    if (lConf.max_resolution) {\n      lOpts.maxResolution = lConf.max_resolution;\n    }\n\n    if (lConf.z_index) {\n      lOpts.zIndex = lConf.z_index;\n    }\n\n    var sOpts = {\n      url: lConf.url,\n      crossOrigin: \"Anonymous\"\n    };\n\n    if (lConf.map_attribution) {\n      sOpts.attributions = lConf.map_attribution;\n    }\n\n    return {\n      lOpts: lOpts,\n      sOpts: sOpts\n    };\n  },\n\n  /**\n   * Returns an OpenLayers layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Base} OL layer instance\n   */\n  getInstance: function getInstance(lConf) {\n    lConf.type = lConf.type.toUpperCase();\n\n    if (lConf.group.toLowerCase() === \"heatmap\") {\n      return this.createHeatmapLayer(lConf);\n    }\n\n    if (lConf.type === \"WMS\") {\n      return this.createWmsLayer(lConf);\n    } else if (lConf.type === \"WMSTILE\") {\n      return this.createWmsTileLayer(lConf);\n    } else if (lConf.type === \"XYZ\") {\n      return this.createXyzLayer(lConf);\n    } else if (lConf.type === \"OSM\") {\n      return this.createOsmLayer(lConf);\n    } else if (lConf.type === \"BING\") {\n      return this.createBingLayer(lConf);\n    } else if (lConf.type === \"VECTOR\") {\n      return this.createVectorLayer(lConf);\n    } else if (lConf.type === \"VECTORIMAGE\") {\n      return this.createVectorImageLayer(lConf);\n    } else if ([\"VECTORTILE\", \"MVT\"].includes(lConf.type)) {\n      return this.createVectorTileLayer(lConf);\n    } else if (lConf.type === \"GEOBUF\") {\n      return this.createGeoBufLayer(lConf);\n    } else {\n      return null;\n    }\n  },\n\n  /**\n   * Returns an OpenLayers WMS layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL WMS layer instance\n   */\n  createWmsLayer: function createWmsLayer(lConf) {\n    var layer = new ImageLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      source: new ImageWMS(_objectSpread({}, this.baseConf(lConf).sOpts))\n    }));\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers WMS Tile layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL WMS layer instance\n   */\n  createWmsTileLayer: function createWmsTileLayer(lConf) {\n    var layer = new TileLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      source: new TileWmsSource(_objectSpread({}, this.baseConf(lConf).sOpts))\n    }));\n    return layer;\n  },\n\n  /**\n   * Returns an XYZ based tile layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL XYZ layer instance\n   */\n  createXyzLayer: function createXyzLayer(lConf) {\n    var layer = new TileLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      maxZoom: lConf.max_zoom || 19,\n      source: new XyzSource(_objectSpread({}, this.baseConf(lConf).sOpts))\n    }));\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers OSM layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL OSM layer instance\n   */\n  createOsmLayer: function createOsmLayer(lConf) {\n    var layer = new TileLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      maxZoom: lConf.max_zoom || 19,\n      source: new OsmSource(_objectSpread({}, this.baseConf(lConf).sOpts))\n    }));\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers BING layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL BING layer instance\n   */\n  createBingLayer: function createBingLayer(lConf) {\n    var layer = new TileLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      maxZoom: lConf.max_zoom || 19,\n      source: new BingMaps(_objectSpread({}, this.baseConf(lConf).sOpts, {\n        key: lConf.access_token,\n        imagerySet: lConf.imagery_set\n      }))\n    }));\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers vector layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Vector} OL vector layer instance\n   */\n  createVectorLayer: function createVectorLayer(lConf) {\n    var layer = new VectorImageLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      source: new VectorSource(_objectSpread({}, this.baseConf(lConf).sOpts))\n    }));\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers vector layer instance due to given config that uses a geobuf endpoint.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Vector} OL vector layer instance\n   */\n  createGeoBufLayer: function createGeoBufLayer(lConf) {\n    var url = lConf.url || \"/layers/vector/static/\".concat(lConf.name, \"?return_type=db_geobuf\");\n    var layer = new VectorImageLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      source: new VectorSource(_objectSpread({}, this.baseConf(lConf).sOpts, {\n        // eslint-disable-next-line no-unused-vars\n        loader: function loader(extent, resolution, projection, success, failure) {\n          var proj = projection.getCode();\n          var source = this;\n          source.clear();\n          ApiService.get_(url, {\n            responseType: \"arraybuffer\",\n            headers: {\n              Accept: \"application/pdf\"\n            }\n          }).then(function (response) {\n            if (response.data) {\n              var olFeatures = geobufToFeatures(response.data, {\n                dataProjection: lConf.data_projection,\n                featureProjection: proj\n              });\n              source.addFeatures(olFeatures);\n            }\n          }).catch(function (_ref) {\n            var response = _ref.response;\n            console.log(response);\n          });\n        },\n        strategy: all\n      }))\n    }));\n    this.styleVectorLayer(layer, lConf);\n    return layer;\n  },\n\n  /**\n   * Return heatmap layers\n   * @param {Object} lConf\n   * @returns {ol.layer.VectorImage} OlVector layer instance\n   */\n  createHeatmapLayer: function createHeatmapLayer(lConf) {\n    var layer = new VectorImageLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      source: new VectorSource(_objectSpread({}, this.baseConf(lConf).sOpts, {\n        // eslint-disable-next-line no-unused-vars\n        loader: function loader(extent, resolution, projection, success, failure) {\n          var proj = projection.getCode();\n          var source = this;\n          source.clear();\n          var baseUrl_ = \"heatmap\";\n          var returnType = \"db_geobuf\";\n          var modus = appStore.state.calculationMode.active;\n          var activeScenario = scenarioStore.state.activeScenario;\n          var scenarioId = \"\".concat(activeScenario ? \"&scenario_id=\" + activeScenario : \"\");\n          var heatmapConfiguration = {};\n          poisAoisStore.state.selectedPoisAois.forEach(function (poiAoiObject) {\n            if (appStore.state.poiIcons[poiAoiObject.value]) {\n              heatmapConfiguration[poiAoiObject.value] = {\n                sensitivity: poiAoiObject.sensitivity,\n                weight: poiAoiObject.weight || 1\n              };\n            }\n          });\n          var heatmapParams = {\n            heatmap_connectivity: \"\".concat(baseUrl_, \"/connectivity?return_type=\").concat(returnType),\n            heatmap_population: \"\".concat(baseUrl_, \"/population?modus=\").concat(modus).concat(scenarioId, \"&return_type=\").concat(returnType),\n            heatmap_accessibility_population: \"\".concat(baseUrl_, \"/local-accessibility?heatmap_type=heatmap_accessibility_population&heatmap_configuration=\").concat(JSON.stringify(heatmapConfiguration), \"&modus=\").concat(modus).concat(scenarioId, \"&return_type=\").concat(returnType),\n            heatmap_local_accessibility: \"\".concat(baseUrl_, \"/local-accessibility?heatmap_type=heatmap_local_accessibility&heatmap_configuration=\").concat(JSON.stringify(heatmapConfiguration), \"&modus=\").concat(modus).concat(scenarioId, \"&return_type=\").concat(returnType)\n          };\n          var url = heatmapParams[lConf.name];\n          mapStore.state.isMapBusy = true;\n          var CancelToken = axios.CancelToken;\n          ApiService.get_(url, {\n            responseType: \"arraybuffer\",\n            headers: {\n              Accept: \"application/pdf\"\n            },\n            cancelToken: new CancelToken(function (c) {\n              // An executor function receives a cancel function as a parameter\n              mapStore.state.heatmapCancelToken = c;\n            })\n          }).then(function (response) {\n            if (response.data) {\n              var olFeatures = geobufToFeatures(response.data, {\n                dataProjection: lConf.data_projection,\n                featureProjection: proj\n              });\n              source.addFeatures(olFeatures);\n            }\n          }).catch(function (_ref2) {\n            var response = _ref2.response;\n            console.log(response);\n          }).finally(function () {\n            mapStore.state.isMapBusy = false;\n            mapStore.state.heatmapCancelToken = null;\n          });\n        },\n        strategy: all\n      }))\n    }));\n    this.styleVectorLayer(layer, lConf);\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers vector tile layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.VectorTile} OL vector tile layer instance\n   */\n  createVectorTileLayer: function createVectorTileLayer(lConf) {\n    var url = lConf.url;\n\n    if (!url) {\n      lConf.url = \"./layers/tiles/\".concat(lConf.name, \"/{z}/{x}/{y}.pbf\");\n    }\n\n    var layer = new VectorTileLayer(_objectSpread({}, this.baseConf(lConf).lOpts, {\n      source: new VectorTileSource(_objectSpread({}, this.baseConf(lConf).sOpts, {\n        format: new this.formatMapping[lConf.type || \"MVT\"](),\n        tileLoadFunction: function tileLoadFunction(tile, url) {\n          tile.setLoader(function (extent, resolution, projection) {\n            ApiService.get_(url, {\n              responseType: \"arraybuffer\",\n              headers: {\n                Accept: \"application/pdf\"\n              }\n            }).then(function (response) {\n              if (response.data) {\n                var format = tile.getFormat(); // ol/format/MVT configured as source format\n\n                var features = format.readFeatures(response.data, {\n                  extent: extent,\n                  featureProjection: projection\n                });\n                tile.setFeatures(features);\n              }\n            });\n          });\n        }\n      }))\n    }));\n    this.styleVectorLayer(layer, lConf);\n    return layer;\n  },\n\n  /**\n   * Styles the vector layer based on the layer config.\n   *\n   * @param  {ol.layer.Vector} layer Vector layer instance\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer} OL vector layer instance\n   */\n  styleVectorLayer: function styleVectorLayer(layer, lConf) {\n    // Style the vector tile layer\n    var styleObj;\n\n    if (_typeof(lConf.style) === \"object\") {\n      styleObj = {\n        format: \"geostyler\",\n        style: lConf.style\n      };\n    } else if (lConf.style === \"custom\") {\n      styleObj = {\n        format: \"custom\"\n      };\n    } else {\n      return layer;\n    }\n\n    var olStyle = OlStyleFactory.getOlStyle(styleObj, lConf.name);\n\n    if (olStyle) {\n      if (olStyle instanceof Promise) {\n        olStyle.then(function (style) {\n          layer.setStyle(style);\n        }).catch(function (error) {\n          console.log(error);\n          console.log(\"error\", lConf.name);\n        });\n      } else {\n        layer.setStyle(olStyle);\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/factory/layer.js"],"names":["TileLayer","TileWmsSource","OsmSource","BingMaps","VectorTileLayer","VectorTileSource","MvtFormat","GeoJsonFormat","TopoJsonFormat","KmlFormat","VectorSource","VectorImageLayer","ImageWMS","Image","ImageLayer","XyzSource","OlStyleFactory","all","ApiService","geobufToFeatures","appStore","scenarioStore","poisAoisStore","mapStore","axios","LayerFactory","formatMapping","MVT","GeoJSON","TopoJSON","KML","baseConf","lConf","includes","group","queryable","undefined","lOpts","name","type","visible","opacity","showOptions","attributeDisplayStatusKey","layerTreeKey","layerOrderKey","displayInLayerList","display_in_layer_list","legendGraphicUrls","legend_urls","min_resolution","minResolution","max_resolution","maxResolution","z_index","zIndex","sOpts","url","crossOrigin","map_attribution","attributions","getInstance","toUpperCase","toLowerCase","createHeatmapLayer","createWmsLayer","createWmsTileLayer","createXyzLayer","createOsmLayer","createBingLayer","createVectorLayer","createVectorImageLayer","createVectorTileLayer","createGeoBufLayer","layer","source","maxZoom","max_zoom","key","access_token","imagerySet","imagery_set","loader","extent","resolution","projection","success","failure","proj","getCode","clear","get_","responseType","headers","Accept","then","response","data","olFeatures","dataProjection","data_projection","featureProjection","addFeatures","catch","console","log","strategy","styleVectorLayer","baseUrl_","returnType","modus","state","calculationMode","active","activeScenario","scenarioId","heatmapConfiguration","selectedPoisAois","forEach","poiAoiObject","poiIcons","value","sensitivity","weight","heatmapParams","heatmap_connectivity","heatmap_population","heatmap_accessibility_population","JSON","stringify","heatmap_local_accessibility","isMapBusy","CancelToken","cancelToken","c","heatmapCancelToken","finally","format","tileLoadFunction","tile","setLoader","getFormat","features","readFeatures","setFeatures","styleObj","style","olStyle","getOlStyle","Promise","setStyle","error"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,eAAtB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,KAAK,IAAIC,UAAlB,QAAoC,aAApC;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,cAAT;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,UAAP;AACA,SAASC,gBAAT;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;AAIA,OAAO,IAAMC,YAAY,GAAG;AAC1B;;;;AAIAC,EAAAA,aAAa,EAAE;AACbC,IAAAA,GAAG,EAAErB,SADQ;AAEbsB,IAAAA,OAAO,EAAErB,aAFI;AAGbsB,IAAAA,QAAQ,EAAErB,cAHG;AAIbsB,IAAAA,GAAG,EAAErB;AAJQ,GALW;AAY1BsB,EAAAA,QAZ0B,oBAYjBC,KAZiB,EAYV;AACd,QAAI,CAAC,SAAD,EAAY,SAAZ,EAAuBC,QAAvB,CAAgCD,KAAK,CAACE,KAAtC,CAAJ,EAAkD;AAChDF,MAAAA,KAAK,CAACG,SAAN,GAAkB,KAAlB;AACD;;AACDH,IAAAA,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACG,SAAN,KAAoBC,SAApB,GAAgC,IAAhC,GAAuCJ,KAAK,CAACG,SAA/D;AAEA,QAAIE,KAAK,GAAG;AACVH,MAAAA,KAAK,EAAEF,KAAK,CAACE,KADH;AAEVI,MAAAA,IAAI,EAAEN,KAAK,CAACM,IAFF;AAGVC,MAAAA,IAAI,EAAEP,KAAK,CAACO,IAHF;AAIVC,MAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,IAAiB,KAJhB;AAKVC,MAAAA,OAAO,EAAET,KAAK,CAACS,OAAN,IAAiB,CALhB;AAMVC,MAAAA,WAAW,EAAE,KANH;AAOVC,MAAAA,yBAAyB,EAAE,CAPjB;AAQVC,MAAAA,YAAY,EAAE,CARJ;AASVC,MAAAA,aAAa,EAAE,CATL;AAUVV,MAAAA,SAAS,EAAEH,KAAK,CAACG,SAVP;AAWVW,MAAAA,kBAAkB,EAAEd,KAAK,CAACe,qBAAN,IAA+B,IAXzC;AAYVC,MAAAA,iBAAiB,EAAEhB,KAAK,CAACiB,WAAN,IAAqB;AAZ9B,KAAZ;;AAcA,QAAIjB,KAAK,CAACkB,cAAV,EAA0B;AACxBb,MAAAA,KAAK,CAACc,aAAN,GAAsBnB,KAAK,CAACkB,cAA5B;AACD;;AACD,QAAIlB,KAAK,CAACoB,cAAV,EAA0B;AACxBf,MAAAA,KAAK,CAACgB,aAAN,GAAsBrB,KAAK,CAACoB,cAA5B;AACD;;AAED,QAAIpB,KAAK,CAACsB,OAAV,EAAmB;AACjBjB,MAAAA,KAAK,CAACkB,MAAN,GAAevB,KAAK,CAACsB,OAArB;AACD;;AACD,QAAIE,KAAK,GAAG;AACVC,MAAAA,GAAG,EAAEzB,KAAK,CAACyB,GADD;AAEVC,MAAAA,WAAW,EAAE;AAFH,KAAZ;;AAIA,QAAI1B,KAAK,CAAC2B,eAAV,EAA2B;AACzBH,MAAAA,KAAK,CAACI,YAAN,GAAqB5B,KAAK,CAAC2B,eAA3B;AACD;;AACD,WAAO;AACLtB,MAAAA,KAAK,EAALA,KADK;AAELmB,MAAAA,KAAK,EAALA;AAFK,KAAP;AAID,GArDyB;;AAuD1B;;;;;;AAMAK,EAAAA,WA7D0B,uBA6Dd7B,KA7Dc,EA6DP;AACjBA,IAAAA,KAAK,CAACO,IAAN,GAAaP,KAAK,CAACO,IAAN,CAAWuB,WAAX,EAAb;;AACA,QAAI9B,KAAK,CAACE,KAAN,CAAY6B,WAAZ,OAA8B,SAAlC,EAA6C;AAC3C,aAAO,KAAKC,kBAAL,CAAwBhC,KAAxB,CAAP;AACD;;AACD,QAAIA,KAAK,CAACO,IAAN,KAAe,KAAnB,EAA0B;AACxB,aAAO,KAAK0B,cAAL,CAAoBjC,KAApB,CAAP;AACD,KAFD,MAEO,IAAIA,KAAK,CAACO,IAAN,KAAe,SAAnB,EAA8B;AACnC,aAAO,KAAK2B,kBAAL,CAAwBlC,KAAxB,CAAP;AACD,KAFM,MAEA,IAAIA,KAAK,CAACO,IAAN,KAAe,KAAnB,EAA0B;AAC/B,aAAO,KAAK4B,cAAL,CAAoBnC,KAApB,CAAP;AACD,KAFM,MAEA,IAAIA,KAAK,CAACO,IAAN,KAAe,KAAnB,EAA0B;AAC/B,aAAO,KAAK6B,cAAL,CAAoBpC,KAApB,CAAP;AACD,KAFM,MAEA,IAAIA,KAAK,CAACO,IAAN,KAAe,MAAnB,EAA2B;AAChC,aAAO,KAAK8B,eAAL,CAAqBrC,KAArB,CAAP;AACD,KAFM,MAEA,IAAIA,KAAK,CAACO,IAAN,KAAe,QAAnB,EAA6B;AAClC,aAAO,KAAK+B,iBAAL,CAAuBtC,KAAvB,CAAP;AACD,KAFM,MAEA,IAAIA,KAAK,CAACO,IAAN,KAAe,aAAnB,EAAkC;AACvC,aAAO,KAAKgC,sBAAL,CAA4BvC,KAA5B,CAAP;AACD,KAFM,MAEA,IAAI,CAAC,YAAD,EAAe,KAAf,EAAsBC,QAAtB,CAA+BD,KAAK,CAACO,IAArC,CAAJ,EAAgD;AACrD,aAAO,KAAKiC,qBAAL,CAA2BxC,KAA3B,CAAP;AACD,KAFM,MAEA,IAAIA,KAAK,CAACO,IAAN,KAAe,QAAnB,EAA6B;AAClC,aAAO,KAAKkC,iBAAL,CAAuBzC,KAAvB,CAAP;AACD,KAFM,MAEA;AACL,aAAO,IAAP;AACD;AACF,GAvFyB;;AAyF1B;;;;;;AAMAiC,EAAAA,cA/F0B,0BA+FXjC,KA/FW,EA+FJ;AACpB,QAAM0C,KAAK,GAAG,IAAI5D,UAAJ,mBACT,KAAKiB,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZsC,MAAAA,MAAM,EAAE,IAAI/D,QAAJ,mBACH,KAAKmB,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAFI,OAAd;AAMA,WAAOkB,KAAP;AACD,GAvGyB;;AAwG1B;;;;;;AAMAR,EAAAA,kBA9G0B,8BA8GPlC,KA9GO,EA8GA;AACxB,QAAM0C,KAAK,GAAG,IAAI1E,SAAJ,mBACT,KAAK+B,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZsC,MAAAA,MAAM,EAAE,IAAI1E,aAAJ,mBACH,KAAK8B,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAFI,OAAd;AAMA,WAAOkB,KAAP;AACD,GAtHyB;;AAwH1B;;;;;;AAMAP,EAAAA,cA9H0B,0BA8HXnC,KA9HW,EA8HJ;AACpB,QAAM0C,KAAK,GAAG,IAAI1E,SAAJ,mBACT,KAAK+B,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZuC,MAAAA,OAAO,EAAE5C,KAAK,CAAC6C,QAAN,IAAkB,EAFf;AAGZF,MAAAA,MAAM,EAAE,IAAI5D,SAAJ,mBACH,KAAKgB,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAHI,OAAd;AAOA,WAAOkB,KAAP;AACD,GAvIyB;;AAyI1B;;;;;;AAMAN,EAAAA,cA/I0B,0BA+IXpC,KA/IW,EA+IJ;AACpB,QAAM0C,KAAK,GAAG,IAAI1E,SAAJ,mBACT,KAAK+B,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZuC,MAAAA,OAAO,EAAE5C,KAAK,CAAC6C,QAAN,IAAkB,EAFf;AAGZF,MAAAA,MAAM,EAAE,IAAIzE,SAAJ,mBACH,KAAK6B,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAHI,OAAd;AAQA,WAAOkB,KAAP;AACD,GAzJyB;;AA2J1B;;;;;;AAMAL,EAAAA,eAjK0B,2BAiKVrC,KAjKU,EAiKH;AACrB,QAAM0C,KAAK,GAAG,IAAI1E,SAAJ,mBACT,KAAK+B,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZuC,MAAAA,OAAO,EAAE5C,KAAK,CAAC6C,QAAN,IAAkB,EAFf;AAGZF,MAAAA,MAAM,EAAE,IAAIxE,QAAJ,mBACH,KAAK4B,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAENsB,QAAAA,GAAG,EAAE9C,KAAK,CAAC+C,YAFL;AAGNC,QAAAA,UAAU,EAAEhD,KAAK,CAACiD;AAHZ;AAHI,OAAd;AAUA,WAAOP,KAAP;AACD,GA7KyB;;AA+K1B;;;;;;AAMAJ,EAAAA,iBArL0B,6BAqLRtC,KArLQ,EAqLD;AACvB,QAAM0C,KAAK,GAAG,IAAI/D,gBAAJ,mBACT,KAAKoB,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZsC,MAAAA,MAAM,EAAE,IAAIjE,YAAJ,mBACH,KAAKqB,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAFI,OAAd;AAOA,WAAOkB,KAAP;AACD,GA9LyB;;AAgM1B;;;;;;AAMAD,EAAAA,iBAtM0B,6BAsMRzC,KAtMQ,EAsMD;AACvB,QAAMyB,GAAG,GACPzB,KAAK,CAACyB,GAAN,oCAAsCzB,KAAK,CAACM,IAA5C,2BADF;AAEA,QAAMoC,KAAK,GAAG,IAAI/D,gBAAJ,mBACT,KAAKoB,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZsC,MAAAA,MAAM,EAAE,IAAIjE,YAAJ,mBACH,KAAKqB,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAEN;AACA0B,QAAAA,MAAM,EAAE,gBAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,OAAzC,EAAkDC,OAAlD,EAA2D;AACjE,cAAMC,IAAI,GAAGH,UAAU,CAACI,OAAX,EAAb;AACA,cAAMd,MAAM,GAAG,IAAf;AACAA,UAAAA,MAAM,CAACe,KAAP;AACAxE,UAAAA,UAAU,CAACyE,IAAX,CAAgBlC,GAAhB,EAAqB;AACnBmC,YAAAA,YAAY,EAAE,aADK;AAEnBC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE;AADD;AAFU,WAArB,EAMGC,IANH,CAMQ,UAAAC,QAAQ,EAAI;AAChB,gBAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,kBAAMC,UAAU,GAAG/E,gBAAgB,CAAC6E,QAAQ,CAACC,IAAV,EAAgB;AACjDE,gBAAAA,cAAc,EAAEnE,KAAK,CAACoE,eAD2B;AAEjDC,gBAAAA,iBAAiB,EAAEb;AAF8B,eAAhB,CAAnC;AAIAb,cAAAA,MAAM,CAAC2B,WAAP,CAAmBJ,UAAnB;AACD;AACF,WAdH,EAeGK,KAfH,CAeS,gBAAkB;AAAA,gBAAfP,QAAe,QAAfA,QAAe;AACvBQ,YAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACD,WAjBH;AAkBD,SAzBK;AA0BNU,QAAAA,QAAQ,EAAEzF;AA1BJ;AAFI,OAAd;AA+BA,SAAK0F,gBAAL,CAAsBjC,KAAtB,EAA6B1C,KAA7B;AACA,WAAO0C,KAAP;AACD,GA1OyB;;AA4O1B;;;;;AAMAV,EAAAA,kBAlP0B,8BAkPPhC,KAlPO,EAkPA;AACxB,QAAM0C,KAAK,GAAG,IAAI/D,gBAAJ,mBACT,KAAKoB,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZsC,MAAAA,MAAM,EAAE,IAAIjE,YAAJ,mBACH,KAAKqB,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAEN;AACA0B,QAAAA,MAAM,EAAE,gBAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,OAAzC,EAAkDC,OAAlD,EAA2D;AACjE,cAAMC,IAAI,GAAGH,UAAU,CAACI,OAAX,EAAb;AACA,cAAMd,MAAM,GAAG,IAAf;AACAA,UAAAA,MAAM,CAACe,KAAP;AACA,cAAMkB,QAAQ,YAAd;AACA,cAAMC,UAAU,GAAG,WAAnB;AACA,cAAMC,KAAK,GAAG1F,QAAQ,CAAC2F,KAAT,CAAeC,eAAf,CAA+BC,MAA7C;AACA,cAAMC,cAAc,GAAG7F,aAAa,CAAC0F,KAAd,CAAoBG,cAA3C;AACA,cAAMC,UAAU,aACdD,cAAc,GAAG,kBAAkBA,cAArB,GAAsC,EADtC,CAAhB;AAGA,cAAME,oBAAoB,GAAG,EAA7B;AACA9F,UAAAA,aAAa,CAACyF,KAAd,CAAoBM,gBAApB,CAAqCC,OAArC,CAA6C,UAAAC,YAAY,EAAI;AAC3D,gBAAInG,QAAQ,CAAC2F,KAAT,CAAeS,QAAf,CAAwBD,YAAY,CAACE,KAArC,CAAJ,EAAiD;AAC/CL,cAAAA,oBAAoB,CAACG,YAAY,CAACE,KAAd,CAApB,GAA2C;AACzCC,gBAAAA,WAAW,EAAEH,YAAY,CAACG,WADe;AAEzCC,gBAAAA,MAAM,EAAEJ,YAAY,CAACI,MAAb,IAAuB;AAFU,eAA3C;AAID;AACF,WAPD;AAQA,cAAMC,aAAa,GAAG;AACpBC,YAAAA,oBAAoB,YAAKjB,QAAL,uCAA0CC,UAA1C,CADA;AAEpBiB,YAAAA,kBAAkB,YAAKlB,QAAL,+BAAkCE,KAAlC,SAA0CK,UAA1C,0BAAoEN,UAApE,CAFE;AAGpBkB,YAAAA,gCAAgC,YAAKnB,QAAL,sGAAyGoB,IAAI,CAACC,SAAL,CACvIb,oBADuI,CAAzG,oBAErBN,KAFqB,SAEbK,UAFa,0BAEaN,UAFb,CAHZ;AAMpBqB,YAAAA,2BAA2B,YAAKtB,QAAL,iGAAoGoB,IAAI,CAACC,SAAL,CAC7Hb,oBAD6H,CAApG,oBAEhBN,KAFgB,SAERK,UAFQ,0BAEkBN,UAFlB;AANP,WAAtB;AAUA,cAAMpD,GAAG,GAAGmE,aAAa,CAAC5F,KAAK,CAACM,IAAP,CAAzB;AACAf,UAAAA,QAAQ,CAACwF,KAAT,CAAeoB,SAAf,GAA2B,IAA3B;AACA,cAAMC,WAAW,GAAG5G,KAAK,CAAC4G,WAA1B;AACAlH,UAAAA,UAAU,CAACyE,IAAX,CAAgBlC,GAAhB,EAAqB;AACnBmC,YAAAA,YAAY,EAAE,aADK;AAEnBC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE;AADD,aAFU;AAKnBuC,YAAAA,WAAW,EAAE,IAAID,WAAJ,CAAgB,UAAAE,CAAC,EAAI;AAChC;AACA/G,cAAAA,QAAQ,CAACwF,KAAT,CAAewB,kBAAf,GAAoCD,CAApC;AACD,aAHY;AALM,WAArB,EAUGvC,IAVH,CAUQ,UAAAC,QAAQ,EAAI;AAChB,gBAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,kBAAMC,UAAU,GAAG/E,gBAAgB,CAAC6E,QAAQ,CAACC,IAAV,EAAgB;AACjDE,gBAAAA,cAAc,EAAEnE,KAAK,CAACoE,eAD2B;AAEjDC,gBAAAA,iBAAiB,EAAEb;AAF8B,eAAhB,CAAnC;AAKAb,cAAAA,MAAM,CAAC2B,WAAP,CAAmBJ,UAAnB;AACD;AACF,WAnBH,EAoBGK,KApBH,CAoBS,iBAAkB;AAAA,gBAAfP,QAAe,SAAfA,QAAe;AACvBQ,YAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACD,WAtBH,EAuBGwC,OAvBH,CAuBW,YAAM;AACbjH,YAAAA,QAAQ,CAACwF,KAAT,CAAeoB,SAAf,GAA2B,KAA3B;AACA5G,YAAAA,QAAQ,CAACwF,KAAT,CAAewB,kBAAf,GAAoC,IAApC;AACD,WA1BH;AA2BD,SA/DK;AAgEN7B,QAAAA,QAAQ,EAAEzF;AAhEJ;AAFI,OAAd;AAqEA,SAAK0F,gBAAL,CAAsBjC,KAAtB,EAA6B1C,KAA7B;AACA,WAAO0C,KAAP;AACD,GA1TyB;;AA4T1B;;;;;;AAMAF,EAAAA,qBAlU0B,iCAkUJxC,KAlUI,EAkUG;AAC3B,QAAIyB,GAAG,GAAGzB,KAAK,CAACyB,GAAhB;;AACA,QAAI,CAACA,GAAL,EAAU;AACRzB,MAAAA,KAAK,CAACyB,GAAN,4BAA8BzB,KAAK,CAACM,IAApC;AACD;;AACD,QAAMoC,KAAK,GAAG,IAAItE,eAAJ,mBACT,KAAK2B,QAAL,CAAcC,KAAd,EAAqBK,KADZ;AAEZsC,MAAAA,MAAM,EAAE,IAAItE,gBAAJ,mBACH,KAAK0B,QAAL,CAAcC,KAAd,EAAqBwB,KADlB;AAENiF,QAAAA,MAAM,EAAE,IAAI,KAAK/G,aAAL,CAAmBM,KAAK,CAACO,IAAN,IAAc,KAAjC,CAAJ,EAFF;AAGNmG,QAAAA,gBAAgB,EAAE,0BAASC,IAAT,EAAelF,GAAf,EAAoB;AACpCkF,UAAAA,IAAI,CAACC,SAAL,CAAe,UAASzD,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyC;AACtDnE,YAAAA,UAAU,CAACyE,IAAX,CAAgBlC,GAAhB,EAAqB;AACnBmC,cAAAA,YAAY,EAAE,aADK;AAEnBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE;AADD;AAFU,aAArB,EAKGC,IALH,CAKQ,UAAAC,QAAQ,EAAI;AAClB,kBAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjB,oBAAMwC,MAAM,GAAGE,IAAI,CAACE,SAAL,EAAf,CADiB,CACgB;;AACjC,oBAAMC,QAAQ,GAAGL,MAAM,CAACM,YAAP,CAAoB/C,QAAQ,CAACC,IAA7B,EAAmC;AAClDd,kBAAAA,MAAM,EAAEA,MAD0C;AAElDkB,kBAAAA,iBAAiB,EAAEhB;AAF+B,iBAAnC,CAAjB;AAIAsD,gBAAAA,IAAI,CAACK,WAAL,CAAiBF,QAAjB;AACD;AACF,aAdD;AAeD,WAhBD;AAiBD;AArBK;AAFI,OAAd;AA0BA,SAAKnC,gBAAL,CAAsBjC,KAAtB,EAA6B1C,KAA7B;AACA,WAAO0C,KAAP;AACD,GAnWyB;;AAqW1B;;;;;;;AAOAiC,EAAAA,gBA5W0B,4BA4WTjC,KA5WS,EA4WF1C,KA5WE,EA4WK;AAC7B;AACA,QAAIiH,QAAJ;;AACA,QAAI,QAAOjH,KAAK,CAACkH,KAAb,MAAuB,QAA3B,EAAqC;AACnCD,MAAAA,QAAQ,GAAG;AACTR,QAAAA,MAAM,EAAE,WADC;AAETS,QAAAA,KAAK,EAAElH,KAAK,CAACkH;AAFJ,OAAX;AAID,KALD,MAKO,IAAIlH,KAAK,CAACkH,KAAN,KAAgB,QAApB,EAA8B;AACnCD,MAAAA,QAAQ,GAAG;AACTR,QAAAA,MAAM,EAAE;AADC,OAAX;AAGD,KAJM,MAIA;AACL,aAAO/D,KAAP;AACD;;AACD,QAAMyE,OAAO,GAAGnI,cAAc,CAACoI,UAAf,CAA0BH,QAA1B,EAAoCjH,KAAK,CAACM,IAA1C,CAAhB;;AACA,QAAI6G,OAAJ,EAAa;AACX,UAAIA,OAAO,YAAYE,OAAvB,EAAgC;AAC9BF,QAAAA,OAAO,CACJpD,IADH,CACQ,UAAAmD,KAAK,EAAI;AACbxE,UAAAA,KAAK,CAAC4E,QAAN,CAAeJ,KAAf;AACD,SAHH,EAIG3C,KAJH,CAIS,UAAAgD,KAAK,EAAI;AACd/C,UAAAA,OAAO,CAACC,GAAR,CAAY8C,KAAZ;AACA/C,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBzE,KAAK,CAACM,IAA3B;AACD,SAPH;AAQD,OATD,MASO;AACLoC,QAAAA,KAAK,CAAC4E,QAAN,CAAeH,OAAf;AACD;AACF;AACF;AA1YyB,CAArB","sourcesContent":["import TileLayer from \"ol/layer/Tile\";\nimport TileWmsSource from \"ol/source/TileWMS\";\nimport OsmSource from \"ol/source/OSM\";\nimport BingMaps from \"ol/source/BingMaps\";\nimport VectorTileLayer from \"ol/layer/VectorTile\";\nimport VectorTileSource from \"ol/source/VectorTile\";\nimport MvtFormat from \"ol/format/MVT\";\nimport GeoJsonFormat from \"ol/format/GeoJSON\";\nimport TopoJsonFormat from \"ol/format/TopoJSON\";\nimport KmlFormat from \"ol/format/KML\";\nimport VectorSource from \"ol/source/Vector\";\nimport VectorImageLayer from \"ol/layer/VectorImage\";\nimport ImageWMS from \"ol/source/ImageWMS.js\";\nimport { Image as ImageLayer } from \"ol/layer.js\";\nimport XyzSource from \"ol/source/XYZ\";\nimport { OlStyleFactory } from \"../factory/OlStyle\";\nimport { all } from \"ol/loadingstrategy\";\nimport ApiService from \"../services/api.service\";\nimport { geobufToFeatures } from \"../utils/MapUtils\";\nimport appStore from \"../store/modules/app\";\nimport scenarioStore from \"../store/modules/scenarios\";\nimport poisAoisStore from \"../store/modules/poisaois\";\nimport mapStore from \"../store/modules/map\";\nimport axios from \"axios\";\n\n/**\n * Factory, which creates OpenLayers layer instances according to a given config\n * object.\n */\nexport const LayerFactory = {\n  /**\n   * Maps the format literal of the config to the corresponding OL module.\n   * @type {Object}\n   */\n  formatMapping: {\n    MVT: MvtFormat,\n    GeoJSON: GeoJsonFormat,\n    TopoJSON: TopoJsonFormat,\n    KML: KmlFormat\n  },\n\n  baseConf(lConf) {\n    if ([\"heatmap\", \"basemap\"].includes(lConf.group)) {\n      lConf.queryable = false;\n    }\n    lConf.queryable = lConf.queryable === undefined ? true : lConf.queryable;\n\n    let lOpts = {\n      group: lConf.group,\n      name: lConf.name,\n      type: lConf.type,\n      visible: lConf.visible || false,\n      opacity: lConf.opacity || 1,\n      showOptions: false,\n      attributeDisplayStatusKey: 0,\n      layerTreeKey: 0,\n      layerOrderKey: 1,\n      queryable: lConf.queryable,\n      displayInLayerList: lConf.display_in_layer_list || true,\n      legendGraphicUrls: lConf.legend_urls || null\n    };\n    if (lConf.min_resolution) {\n      lOpts.minResolution = lConf.min_resolution;\n    }\n    if (lConf.max_resolution) {\n      lOpts.maxResolution = lConf.max_resolution;\n    }\n\n    if (lConf.z_index) {\n      lOpts.zIndex = lConf.z_index;\n    }\n    let sOpts = {\n      url: lConf.url,\n      crossOrigin: \"Anonymous\"\n    };\n    if (lConf.map_attribution) {\n      sOpts.attributions = lConf.map_attribution;\n    }\n    return {\n      lOpts,\n      sOpts\n    };\n  },\n\n  /**\n   * Returns an OpenLayers layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Base} OL layer instance\n   */\n  getInstance(lConf) {\n    lConf.type = lConf.type.toUpperCase();\n    if (lConf.group.toLowerCase() === \"heatmap\") {\n      return this.createHeatmapLayer(lConf);\n    }\n    if (lConf.type === \"WMS\") {\n      return this.createWmsLayer(lConf);\n    } else if (lConf.type === \"WMSTILE\") {\n      return this.createWmsTileLayer(lConf);\n    } else if (lConf.type === \"XYZ\") {\n      return this.createXyzLayer(lConf);\n    } else if (lConf.type === \"OSM\") {\n      return this.createOsmLayer(lConf);\n    } else if (lConf.type === \"BING\") {\n      return this.createBingLayer(lConf);\n    } else if (lConf.type === \"VECTOR\") {\n      return this.createVectorLayer(lConf);\n    } else if (lConf.type === \"VECTORIMAGE\") {\n      return this.createVectorImageLayer(lConf);\n    } else if ([\"VECTORTILE\", \"MVT\"].includes(lConf.type)) {\n      return this.createVectorTileLayer(lConf);\n    } else if (lConf.type === \"GEOBUF\") {\n      return this.createGeoBufLayer(lConf);\n    } else {\n      return null;\n    }\n  },\n\n  /**\n   * Returns an OpenLayers WMS layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL WMS layer instance\n   */\n  createWmsLayer(lConf) {\n    const layer = new ImageLayer({\n      ...this.baseConf(lConf).lOpts,\n      source: new ImageWMS({\n        ...this.baseConf(lConf).sOpts\n      })\n    });\n    return layer;\n  },\n  /**\n   * Returns an OpenLayers WMS Tile layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL WMS layer instance\n   */\n  createWmsTileLayer(lConf) {\n    const layer = new TileLayer({\n      ...this.baseConf(lConf).lOpts,\n      source: new TileWmsSource({\n        ...this.baseConf(lConf).sOpts\n      })\n    });\n    return layer;\n  },\n\n  /**\n   * Returns an XYZ based tile layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL XYZ layer instance\n   */\n  createXyzLayer(lConf) {\n    const layer = new TileLayer({\n      ...this.baseConf(lConf).lOpts,\n      maxZoom: lConf.max_zoom || 19,\n      source: new XyzSource({\n        ...this.baseConf(lConf).sOpts\n      })\n    });\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers OSM layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL OSM layer instance\n   */\n  createOsmLayer(lConf) {\n    const layer = new TileLayer({\n      ...this.baseConf(lConf).lOpts,\n      maxZoom: lConf.max_zoom || 19,\n      source: new OsmSource({\n        ...this.baseConf(lConf).sOpts\n      })\n    });\n\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers BING layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Tile} OL BING layer instance\n   */\n  createBingLayer(lConf) {\n    const layer = new TileLayer({\n      ...this.baseConf(lConf).lOpts,\n      maxZoom: lConf.max_zoom || 19,\n      source: new BingMaps({\n        ...this.baseConf(lConf).sOpts,\n        key: lConf.access_token,\n        imagerySet: lConf.imagery_set\n      })\n    });\n\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers vector layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Vector} OL vector layer instance\n   */\n  createVectorLayer(lConf) {\n    const layer = new VectorImageLayer({\n      ...this.baseConf(lConf).lOpts,\n      source: new VectorSource({\n        ...this.baseConf(lConf).sOpts\n      })\n    });\n\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers vector layer instance due to given config that uses a geobuf endpoint.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.Vector} OL vector layer instance\n   */\n  createGeoBufLayer(lConf) {\n    const url =\n      lConf.url || `/layers/vector/static/${lConf.name}?return_type=db_geobuf`;\n    const layer = new VectorImageLayer({\n      ...this.baseConf(lConf).lOpts,\n      source: new VectorSource({\n        ...this.baseConf(lConf).sOpts,\n        // eslint-disable-next-line no-unused-vars\n        loader: function(extent, resolution, projection, success, failure) {\n          const proj = projection.getCode();\n          const source = this;\n          source.clear();\n          ApiService.get_(url, {\n            responseType: \"arraybuffer\",\n            headers: {\n              Accept: \"application/pdf\"\n            }\n          })\n            .then(response => {\n              if (response.data) {\n                const olFeatures = geobufToFeatures(response.data, {\n                  dataProjection: lConf.data_projection,\n                  featureProjection: proj\n                });\n                source.addFeatures(olFeatures);\n              }\n            })\n            .catch(({ response }) => {\n              console.log(response);\n            });\n        },\n        strategy: all\n      })\n    });\n    this.styleVectorLayer(layer, lConf);\n    return layer;\n  },\n\n  /**\n   * Return heatmap layers\n   * @param {Object} lConf\n   * @returns {ol.layer.VectorImage} OlVector layer instance\n   */\n\n  createHeatmapLayer(lConf) {\n    const layer = new VectorImageLayer({\n      ...this.baseConf(lConf).lOpts,\n      source: new VectorSource({\n        ...this.baseConf(lConf).sOpts,\n        // eslint-disable-next-line no-unused-vars\n        loader: function(extent, resolution, projection, success, failure) {\n          const proj = projection.getCode();\n          const source = this;\n          source.clear();\n          const baseUrl_ = `heatmap`;\n          const returnType = \"db_geobuf\";\n          const modus = appStore.state.calculationMode.active;\n          const activeScenario = scenarioStore.state.activeScenario;\n          const scenarioId = `${\n            activeScenario ? \"&scenario_id=\" + activeScenario : \"\"\n          }`;\n          const heatmapConfiguration = {};\n          poisAoisStore.state.selectedPoisAois.forEach(poiAoiObject => {\n            if (appStore.state.poiIcons[poiAoiObject.value]) {\n              heatmapConfiguration[poiAoiObject.value] = {\n                sensitivity: poiAoiObject.sensitivity,\n                weight: poiAoiObject.weight || 1\n              };\n            }\n          });\n          const heatmapParams = {\n            heatmap_connectivity: `${baseUrl_}/connectivity?return_type=${returnType}`,\n            heatmap_population: `${baseUrl_}/population?modus=${modus}${scenarioId}&return_type=${returnType}`,\n            heatmap_accessibility_population: `${baseUrl_}/local-accessibility?heatmap_type=heatmap_accessibility_population&heatmap_configuration=${JSON.stringify(\n              heatmapConfiguration\n            )}&modus=${modus}${scenarioId}&return_type=${returnType}`,\n            heatmap_local_accessibility: `${baseUrl_}/local-accessibility?heatmap_type=heatmap_local_accessibility&heatmap_configuration=${JSON.stringify(\n              heatmapConfiguration\n            )}&modus=${modus}${scenarioId}&return_type=${returnType}`\n          };\n          const url = heatmapParams[lConf.name];\n          mapStore.state.isMapBusy = true;\n          const CancelToken = axios.CancelToken;\n          ApiService.get_(url, {\n            responseType: \"arraybuffer\",\n            headers: {\n              Accept: \"application/pdf\"\n            },\n            cancelToken: new CancelToken(c => {\n              // An executor function receives a cancel function as a parameter\n              mapStore.state.heatmapCancelToken = c;\n            })\n          })\n            .then(response => {\n              if (response.data) {\n                const olFeatures = geobufToFeatures(response.data, {\n                  dataProjection: lConf.data_projection,\n                  featureProjection: proj\n                });\n\n                source.addFeatures(olFeatures);\n              }\n            })\n            .catch(({ response }) => {\n              console.log(response);\n            })\n            .finally(() => {\n              mapStore.state.isMapBusy = false;\n              mapStore.state.heatmapCancelToken = null;\n            });\n        },\n        strategy: all\n      })\n    });\n    this.styleVectorLayer(layer, lConf);\n    return layer;\n  },\n\n  /**\n   * Returns an OpenLayers vector tile layer instance due to given config.\n   *\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer.VectorTile} OL vector tile layer instance\n   */\n  createVectorTileLayer(lConf) {\n    let url = lConf.url;\n    if (!url) {\n      lConf.url = `./layers/tiles/${lConf.name}/{z}/{x}/{y}.pbf`;\n    }\n    const layer = new VectorTileLayer({\n      ...this.baseConf(lConf).lOpts,\n      source: new VectorTileSource({\n        ...this.baseConf(lConf).sOpts,\n        format: new this.formatMapping[lConf.type || \"MVT\"](),\n        tileLoadFunction: function(tile, url) {\n          tile.setLoader(function(extent, resolution, projection) {\n            ApiService.get_(url, {\n              responseType: \"arraybuffer\",\n              headers: {\n                Accept: \"application/pdf\"\n              }\n            }).then(response => {\n              if (response.data) {\n                const format = tile.getFormat(); // ol/format/MVT configured as source format\n                const features = format.readFeatures(response.data, {\n                  extent: extent,\n                  featureProjection: projection\n                });\n                tile.setFeatures(features);\n              }\n            });\n          });\n        }\n      })\n    });\n    this.styleVectorLayer(layer, lConf);\n    return layer;\n  },\n\n  /**\n   * Styles the vector layer based on the layer config.\n   *\n   * @param  {ol.layer.Vector} layer Vector layer instance\n   * @param  {Object} lConf  Layer config object\n   * @return {ol.layer} OL vector layer instance\n   */\n  styleVectorLayer(layer, lConf) {\n    // Style the vector tile layer\n    let styleObj;\n    if (typeof lConf.style === \"object\") {\n      styleObj = {\n        format: \"geostyler\",\n        style: lConf.style\n      };\n    } else if (lConf.style === \"custom\") {\n      styleObj = {\n        format: \"custom\"\n      };\n    } else {\n      return layer;\n    }\n    const olStyle = OlStyleFactory.getOlStyle(styleObj, lConf.name);\n    if (olStyle) {\n      if (olStyle instanceof Promise) {\n        olStyle\n          .then(style => {\n            layer.setStyle(style);\n          })\n          .catch(error => {\n            console.log(error);\n            console.log(\"error\", lConf.name);\n          });\n      } else {\n        layer.setStyle(olStyle);\n      }\n    }\n  }\n};\n"]}]}