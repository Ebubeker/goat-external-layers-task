{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js??ref--13-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/utils/json-refs.js","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/utils/json-refs.js","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js","mtime":1657636581253}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _typeof from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\n\n// Inspired by this without the fs references :\n// https://github.com/coderofsalvation/json-ref-lite/blob/master/index.js\nvar expr = require(\"./property-expr.js\");\n\nvar jrefs = {};\njrefs.cache = {};\njrefs.extendtoken = \"$extend\";\njrefs.reftoken = \"$ref\";\njrefs.pathtoken = \"#\";\njrefs.debug = false;\n\njrefs.clone = function (obj) {\n  var key, temp;\n\n  if (obj === null || _typeof(obj) !== \"object\" || typeof obj === \"function\") {\n    return obj;\n  }\n\n  temp = obj.constructor();\n\n  for (key in obj) {\n    temp[key] = jrefs.clone(obj[key]);\n  }\n\n  return temp;\n};\n\njrefs.findIds = function (json, ids) {\n  var id, k, obj, v;\n  id = false;\n  obj = {};\n\n  for (k in json) {\n    v = json[k];\n\n    if (json.id != null) {\n      id = json.id;\n    }\n\n    if (id && k !== \"id\") {\n      obj[k] = v;\n    }\n\n    if (_typeof(v) === \"object\") {\n      jrefs.findIds(v, ids);\n    }\n  }\n\n  if (id) {\n    ids[id] = obj;\n    return obj;\n  }\n};\n\njrefs.get_json_pointer = function (ref, root) {\n  var evalstr, result;\n  evalstr = ref.replace(/\\\\\\//, \"#SLASH#\").replace(/\\//g, \".\").replace(/#SLASH#/, \"/\");\n  evalstr = evalstr.replace(new RegExp(\"^\" + jrefs.pathtoken), \"\");\n\n  if (evalstr[0] === \".\") {\n    evalstr = evalstr.substr(1, evalstr.length - 1);\n  }\n\n  try {\n    result = expr.getter(evalstr)(root);\n  } catch (error) {\n    console.error(error);\n    result = \"\";\n  }\n\n  return result;\n};\n\njrefs.replace = function (json, ids, root) {\n  var k, ref, ref1, ref2, results, v;\n  results = [];\n\n  for (k in json) {\n    v = json[k];\n\n    if (v != null && v[jrefs.reftoken] != null) {\n      ref = v[jrefs.reftoken];\n\n      if (Object.keys(v).length > 1) {\n        console.error(\"json-ref-lite error: object '\" + k + \"' contains reference as well as other properties..ignoring properties\");\n      }\n\n      if (Array.isArray(ref)) {\n        ref = jrefs.replace(ref, ids, root);\n      } else if (ids[ref] != null) {\n        json[k] = ids[ref];\n      } else if (String(ref).match(new RegExp(\"^\" + jrefs.pathtoken))) {\n        json[k] = jrefs.get_json_pointer(ref, root);\n      }\n\n      if (((ref1 = json[k]) != null ? ref1.length : void 0) != null && ((ref2 = json[k]) != null ? ref2.length : void 0) === 0 && jrefs.debug) {\n        results.push(console.log(ref + \" reference not found\"));\n      } else {\n        results.push(void 0);\n      }\n    } else {\n      if (_typeof(v) === \"object\") {\n        results.push(jrefs.replace(v, ids, root));\n      } else {\n        results.push(void 0);\n      }\n    }\n  }\n\n  return results;\n};\n\njrefs.extend = function (json) {\n  var k, ref, results, rk, rv, v;\n\n  if (_typeof(json) === \"object\") {\n    results = [];\n\n    for (k in json) {\n      v = json[k];\n\n      if (k === jrefs.extendtoken && v[jrefs.reftoken] != null) {\n        ref = jrefs.get_json_pointer(v[jrefs.reftoken], json);\n\n        for (rk in v) {\n          rv = v[rk];\n\n          if (rk !== jrefs.reftoken) {\n            ref[rk] = rv;\n          }\n        }\n\n        delete json[k];\n      }\n\n      if (_typeof(v) === \"object\") {\n        results.push(v = jrefs.extend(v));\n      } else {\n        results.push(void 0);\n      }\n    }\n\n    return results;\n  }\n};\n\njrefs.resolve = function (json) {\n  var ids;\n  ids = {};\n  jrefs.findIds(json, ids);\n\n  if (jrefs.debug && Object.keys(ids).length) {\n    console.dir(ids);\n  }\n\n  jrefs.replace(json, ids, json);\n  return json;\n};\n\njrefs.evaluate = function (json, data, cb) {\n  var k, ref1, v;\n\n  if (cb == null) {\n    cb = jrefs.evaluateStr;\n  }\n\n  ref1 = jrefs.clone(json);\n\n  for (k in ref1) {\n    v = ref1[k];\n\n    if (typeof v === \"string\") {\n      json[k] = cb(v, data);\n    }\n\n    if (_typeof(v) === \"object\") {\n      json[k] = jrefs.evaluate(v, data);\n    }\n  }\n\n  return json;\n};\n\njrefs.evaluateStr = function (k, data) {\n  var itemstr;\n\n  if (typeof k !== \"string\") {\n    return k;\n  }\n\n  if (k[0] === \"{\" && k[k.length - 1] === \"}\") {\n    try {\n      return expr.getter(k.replace(/^{/, \"\").replace(/}$/, \"\"))(data);\n    } catch (error) {\n      return null;\n    }\n  } else {\n    itemstr = k.replace(/(\\{)(.*?)(\\})/g, function ($0, $1, $2) {\n      var result;\n      result = \"\";\n\n      if (data == null || $2 == null) {\n        return result;\n      }\n\n      if (data[$2] != null && typeof data[$2] === \"function\") {\n        result = data[$2]();\n      } else {\n        if (data[$2] != null) {\n          result = data[$2];\n        } else {\n          try {\n            $2 = $2.replace(new RegExp(\"^\" + jrefs.pathtoken + \"/\"), \"\").replace(/\\//g, \".\");\n            result = expr.getter($2)(data);\n          } catch (error1) {\n            result = \"\";\n          }\n\n          if (result == null) {\n            result = \"\";\n          }\n        }\n      }\n\n      jrefs.evaluateStr(result, data);\n      return result;\n    });\n    return itemstr;\n  }\n};\n\nexport default jrefs;",{"version":3,"sources":["/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/utils/json-refs.js"],"names":["expr","require","jrefs","cache","extendtoken","reftoken","pathtoken","debug","clone","obj","key","temp","constructor","findIds","json","ids","id","k","v","get_json_pointer","ref","root","evalstr","result","replace","RegExp","substr","length","getter","error","console","ref1","ref2","results","Object","keys","Array","isArray","String","match","push","log","extend","rk","rv","resolve","dir","evaluate","data","cb","evaluateStr","itemstr","$0","$1","$2","error1"],"mappings":"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","sourcesContent":["// Inspired by this without the fs references :\n// https://github.com/coderofsalvation/json-ref-lite/blob/master/index.js\n\nvar expr = require(\"./property-expr.js\");\n\nconst jrefs = {};\njrefs.cache = {};\njrefs.extendtoken = \"$extend\";\njrefs.reftoken = \"$ref\";\njrefs.pathtoken = \"#\";\njrefs.debug = false;\njrefs.clone = function(obj) {\n  var key, temp;\n  if (obj === null || typeof obj !== \"object\" || typeof obj === \"function\") {\n    return obj;\n  }\n  temp = obj.constructor();\n  for (key in obj) {\n    temp[key] = jrefs.clone(obj[key]);\n  }\n  return temp;\n};\njrefs.findIds = function(json, ids) {\n  var id, k, obj, v;\n  id = false;\n  obj = {};\n  for (k in json) {\n    v = json[k];\n    if (json.id != null) {\n      id = json.id;\n    }\n    if (id && k !== \"id\") {\n      obj[k] = v;\n    }\n    if (typeof v === \"object\") {\n      jrefs.findIds(v, ids);\n    }\n  }\n  if (id) {\n    ids[id] = obj;\n    return obj;\n  }\n};\njrefs.get_json_pointer = function(ref, root) {\n  var evalstr, result;\n  evalstr = ref\n    .replace(/\\\\\\//, \"#SLASH#\")\n    .replace(/\\//g, \".\")\n    .replace(/#SLASH#/, \"/\");\n  evalstr = evalstr.replace(new RegExp(\"^\" + jrefs.pathtoken), \"\");\n  if (evalstr[0] === \".\") {\n    evalstr = evalstr.substr(1, evalstr.length - 1);\n  }\n  try {\n    result = expr.getter(evalstr)(root);\n  } catch (error) {\n    console.error(error);\n    result = \"\";\n  }\n  return result;\n};\njrefs.replace = function(json, ids, root) {\n  var k, ref, ref1, ref2, results, v;\n  results = [];\n  for (k in json) {\n    v = json[k];\n    if (v != null && v[jrefs.reftoken] != null) {\n      ref = v[jrefs.reftoken];\n      if (Object.keys(v).length > 1) {\n        console.error(\n          \"json-ref-lite error: object '\" +\n            k +\n            \"' contains reference as well as other properties..ignoring properties\"\n        );\n      }\n      if (Array.isArray(ref)) {\n        ref = jrefs.replace(ref, ids, root);\n      } else if (ids[ref] != null) {\n        json[k] = ids[ref];\n      } else if (String(ref).match(new RegExp(\"^\" + jrefs.pathtoken))) {\n        json[k] = jrefs.get_json_pointer(ref, root);\n      }\n      if (\n        ((ref1 = json[k]) != null ? ref1.length : void 0) != null &&\n        ((ref2 = json[k]) != null ? ref2.length : void 0) === 0 &&\n        jrefs.debug\n      ) {\n        results.push(console.log(ref + \" reference not found\"));\n      } else {\n        results.push(void 0);\n      }\n    } else {\n      if (typeof v === \"object\") {\n        results.push(jrefs.replace(v, ids, root));\n      } else {\n        results.push(void 0);\n      }\n    }\n  }\n  return results;\n};\njrefs.extend = function(json) {\n  var k, ref, results, rk, rv, v;\n  if (typeof json === \"object\") {\n    results = [];\n    for (k in json) {\n      v = json[k];\n      if (k === jrefs.extendtoken && v[jrefs.reftoken] != null) {\n        ref = jrefs.get_json_pointer(v[jrefs.reftoken], json);\n        for (rk in v) {\n          rv = v[rk];\n          if (rk !== jrefs.reftoken) {\n            ref[rk] = rv;\n          }\n        }\n        delete json[k];\n      }\n      if (typeof v === \"object\") {\n        results.push((v = jrefs.extend(v)));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  }\n};\njrefs.resolve = function(json) {\n  var ids;\n  ids = {};\n  jrefs.findIds(json, ids);\n  if (jrefs.debug && Object.keys(ids).length) {\n    console.dir(ids);\n  }\n  jrefs.replace(json, ids, json);\n  return json;\n};\njrefs.evaluate = function(json, data, cb) {\n  var k, ref1, v;\n  if (cb == null) {\n    cb = jrefs.evaluateStr;\n  }\n  ref1 = jrefs.clone(json);\n  for (k in ref1) {\n    v = ref1[k];\n    if (typeof v === \"string\") {\n      json[k] = cb(v, data);\n    }\n    if (typeof v === \"object\") {\n      json[k] = jrefs.evaluate(v, data);\n    }\n  }\n  return json;\n};\njrefs.evaluateStr = function(k, data) {\n  var itemstr;\n  if (typeof k !== \"string\") {\n    return k;\n  }\n  if (k[0] === \"{\" && k[k.length - 1] === \"}\") {\n    try {\n      return expr.getter(k.replace(/^{/, \"\").replace(/}$/, \"\"))(data);\n    } catch (error) {\n      return null;\n    }\n  } else {\n    itemstr = k.replace(/(\\{)(.*?)(\\})/g, function($0, $1, $2) {\n      var result;\n      result = \"\";\n      if (data == null || $2 == null) {\n        return result;\n      }\n      if (data[$2] != null && typeof data[$2] === \"function\") {\n        result = data[$2]();\n      } else {\n        if (data[$2] != null) {\n          result = data[$2];\n        } else {\n          try {\n            $2 = $2\n              .replace(new RegExp(\"^\" + jrefs.pathtoken + \"/\"), \"\")\n              .replace(/\\//g, \".\");\n            result = expr.getter($2)(data);\n          } catch (error1) {\n            result = \"\";\n          }\n          if (result == null) {\n            result = \"\";\n          }\n        }\n      }\n      jrefs.evaluateStr(result, data);\n      return result;\n    });\n    return itemstr;\n  }\n};\n\nexport default jrefs;\n"]}]}