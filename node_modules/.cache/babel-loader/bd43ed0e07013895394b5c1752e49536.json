{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/IndicatorsChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/IndicatorsChart.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-finite\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { HorizontalBar } from \"vue-chartjs\";\nimport { EventBus } from \"../../EventBus\";\nimport { LinearColorInterpolator, ColorObj, humanize } from \"../../utils/Helpers\"; // import { mapGetters } from \"vuex\";\n\nexport default {\n  extends: HorizontalBar,\n  props: {\n    feature: {\n      type: Object\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      exludedProps: [\"id\", \"geom\", \"geometry\", \"layerName\"],\n      attributes: {\n        sidewalk_quality: [\"sidewalk\", \"incline_percent\", \"surface\", \"highway\"],\n        traffic_protection: [\"lanes\", \"maxspeed\", \"crossings\", \"parking\", \"cnt_accidents\", \"noise_day\", \"noise_night\"],\n        security: [\"lit_classified\", \"covered\"],\n        green_blue_index: [\"vegetation\", \"water\"],\n        liveliness: [\"landuse\", \"pois\", \"population\"],\n        comfort: [\"cnt_benches\", \"cnt_waste_baskets\", \"cnt_toilets\", \"cnt_fountains\"],\n        data_quality: [],\n        walkability: []\n      },\n      colors: {\n        very_bad: {\n          lower: \"#c10707\",\n          upper: \"#be987f\"\n        },\n        bad: {\n          lower: \"#ed8137\",\n          upper: \"#ed8137\"\n        },\n        medium: {\n          lower: \"#fec107\",\n          upper: \"#9fbe36\"\n        },\n        good: {\n          lower: \"#a0bf3c\",\n          upper: \"#61953d\"\n        },\n        very_good: {\n          lower: \"#659843\",\n          upper: \"#385723\"\n        },\n        default: {\n          lower: \"#000000\",\n          upper: \"#000000\"\n        },\n        data_quality: {\n          lower: \"#808080\",\n          upper: \"#808080\"\n        }\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              callback: function callback(value) {\n                return _this.$t(\"charts.indicators.\".concat(value)) || humanize(value);\n              }\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              beginAtZero: true\n            },\n            scaleLabel: {\n              display: true\n            }\n          }]\n        },\n        tooltips: {\n          displayColors: false,\n          titleFontSize: 15,\n          bodyFontSize: 12,\n          titleFontStyle: \"bold\",\n          bodyFontStyle: \"bold\",\n          callbacks: {\n            title: function (tooltipItem) {\n              var attr = tooltipItem[0].label;\n              var label = this.$te(\"charts.indicators.\".concat(attr)) ? this.$t(\"charts.indicators.\".concat(attr)) : humanize(attr);\n              var value = tooltipItem[0].value;\n              return \"\".concat(label, \": \").concat(value ? value : \"--\");\n            }.bind(this),\n            label: function (tooltipItem) {\n              var _this2 = this;\n\n              var labels = [];\n              var attrLabel = tooltipItem.label; // const attrValue = tooltipItem.value;\n\n              var props = this.attributes[attrLabel];\n\n              if (Array.isArray(props)) {\n                props.forEach(function (prop) {\n                  var label = _this2.$te(\"charts.indicators.\".concat(prop)) ? _this2.$t(\"charts.indicators.\".concat(prop)) : humanize(prop);\n\n                  var value = _this2.feature.get(prop);\n\n                  if (label) {\n                    labels.push(\"\".concat(label, \": \").concat(value ? value : \"--\"));\n                  }\n                });\n              }\n\n              return labels;\n            }.bind(this)\n          }\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.init();\n    EventBus.$on(\"ol-interaction-activated\", function (interaction) {\n      if (interaction === \"languageChange\") {\n        _this3.init();\n      }\n    });\n  },\n  methods: {\n    init: function init() {\n      this.renderBarChart();\n    },\n    renderBarChart: function renderBarChart() {\n      this.renderChart({\n        labels: this.indicators.labels,\n        datasets: [{\n          backgroundColor: this.indicators.colorData,\n          data: this.indicators.data\n        }]\n      }, this.options);\n    }\n  },\n  watch: {\n    feature: {\n      handler: function handler() {\n        this.init();\n      },\n      deep: true\n    }\n  },\n  computed: {\n    indicators: function indicators() {\n      var _this4 = this;\n\n      var properties = Object.keys(this.attributes);\n      var labels = [];\n      var data = [];\n      var colorData = [];\n      properties.forEach(function (prop) {\n        if (!_this4.exludedProps.includes(prop)) {\n          var value = _this4.feature.get(prop);\n\n          labels.push(prop); // Data quality (edge case) multiple with 100 (REMOVE if value is between 0 and 100)\n\n          if (prop === \"data_quality\" && Number.isFinite(value)) {\n            value = value * 100;\n          }\n\n          if (Number.isFinite(value)) {\n            value = value.toFixed(0);\n          }\n\n          data.push(value); // Find the correct color based on value\n\n          var color;\n          var colorPercentage;\n\n          if (prop === \"data_quality\") {\n            color = _this4.colors[\"data_quality\"];\n            colorPercentage = 100;\n          } else if (value >= 0 && value <= 20) {\n            color = _this4.colors[\"very_bad\"];\n            colorPercentage = (value - 0) / 20 * 100;\n          } else if (value > 20 && value <= 40) {\n            color = _this4.colors[\"bad\"];\n            colorPercentage = (value - 20) / 20 * 100;\n          } else if (value > 40 && value <= 60) {\n            color = _this4.colors[\"medium\"];\n            colorPercentage = (value - 40) / 20 * 100;\n          } else if (value > 60 && value <= 80) {\n            color = _this4.colors[\"good\"];\n            colorPercentage = (value - 60) / 20 * 100;\n          } else if (value > 80 && value <= 100) {\n            color = _this4.colors[\"very_good\"];\n            colorPercentage = (value - 80) / 20 * 100;\n          } else {\n            // Fallback if there is not in range\n            color = _this4.colors[\"default\"];\n            colorPercentage = 100;\n          }\n\n          var lower = new ColorObj(color.lower);\n          var upper = new ColorObj(color.upper);\n          var backgroundColor = LinearColorInterpolator.findColorBetween(lower, upper, colorPercentage).asRgbCss();\n          colorData.push(backgroundColor);\n        }\n      });\n      return {\n        labels: labels,\n        data: data,\n        colorData: colorData\n      };\n    }\n  }\n};",{"version":3,"sources":["IndicatorsChart.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport { HorizontalBar } from \"vue-chartjs\";\nimport { EventBus } from \"../../EventBus\";\n\nimport {\n  LinearColorInterpolator,\n  ColorObj,\n  humanize\n} from \"../../utils/Helpers\";\n// import { mapGetters } from \"vuex\";\n\nexport default {\n  extends: HorizontalBar,\n  props: {\n    feature: { type: Object }\n  },\n  data() {\n    return {\n      exludedProps: [\"id\", \"geom\", \"geometry\", \"layerName\"],\n      attributes: {\n        sidewalk_quality: [\"sidewalk\", \"incline_percent\", \"surface\", \"highway\"],\n        traffic_protection: [\n          \"lanes\",\n          \"maxspeed\",\n          \"crossings\",\n          \"parking\",\n          \"cnt_accidents\",\n          \"noise_day\",\n          \"noise_night\"\n        ],\n        security: [\"lit_classified\", \"covered\"],\n        green_blue_index: [\"vegetation\", \"water\"],\n        liveliness: [\"landuse\", \"pois\", \"population\"],\n        comfort: [\n          \"cnt_benches\",\n          \"cnt_waste_baskets\",\n          \"cnt_toilets\",\n          \"cnt_fountains\"\n        ],\n        data_quality: [],\n        walkability: []\n      },\n      colors: {\n        very_bad: {\n          lower: \"#c10707\",\n          upper: \"#be987f\"\n        },\n        bad: {\n          lower: \"#ed8137\",\n          upper: \"#ed8137\"\n        },\n        medium: {\n          lower: \"#fec107\",\n          upper: \"#9fbe36\"\n        },\n        good: {\n          lower: \"#a0bf3c\",\n          upper: \"#61953d\"\n        },\n        very_good: {\n          lower: \"#659843\",\n          upper: \"#385723\"\n        },\n        default: {\n          lower: \"#000000\",\n          upper: \"#000000\"\n        },\n        data_quality: {\n          lower: \"#808080\",\n          upper: \"#808080\"\n        }\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                callback: value => {\n                  return (\n                    this.$t(`charts.indicators.${value}`) || humanize(value)\n                  );\n                }\n              }\n            }\n          ],\n          xAxes: [\n            {\n              ticks: {\n                beginAtZero: true\n              },\n              scaleLabel: {\n                display: true\n              }\n            }\n          ]\n        },\n        tooltips: {\n          displayColors: false,\n          titleFontSize: 15,\n          bodyFontSize: 12,\n          titleFontStyle: \"bold\",\n          bodyFontStyle: \"bold\",\n          callbacks: {\n            title: function(tooltipItem) {\n              const attr = tooltipItem[0].label;\n              const label = this.$te(`charts.indicators.${attr}`)\n                ? this.$t(`charts.indicators.${attr}`)\n                : humanize(attr);\n              const value = tooltipItem[0].value;\n              return `${label}: ${value ? value : \"--\"}`;\n            }.bind(this),\n            label: function(tooltipItem) {\n              const labels = [];\n              const attrLabel = tooltipItem.label;\n              // const attrValue = tooltipItem.value;\n              const props = this.attributes[attrLabel];\n              if (Array.isArray(props)) {\n                props.forEach(prop => {\n                  const label = this.$te(`charts.indicators.${prop}`)\n                    ? this.$t(`charts.indicators.${prop}`)\n                    : humanize(prop);\n                  const value = this.feature.get(prop);\n                  if (label) {\n                    labels.push(`${label}: ${value ? value : \"--\"}`);\n                  }\n                });\n              }\n              return labels;\n            }.bind(this)\n          }\n        }\n      }\n    };\n  },\n  mounted() {\n    this.init();\n    EventBus.$on(\"ol-interaction-activated\", interaction => {\n      if (interaction === \"languageChange\") {\n        this.init();\n      }\n    });\n  },\n  methods: {\n    init() {\n      this.renderBarChart();\n    },\n    renderBarChart: function() {\n      this.renderChart(\n        {\n          labels: this.indicators.labels,\n          datasets: [\n            {\n              backgroundColor: this.indicators.colorData,\n              data: this.indicators.data\n            }\n          ]\n        },\n        this.options\n      );\n    }\n  },\n  watch: {\n    feature: {\n      handler: function() {\n        this.init();\n      },\n      deep: true\n    }\n  },\n  computed: {\n    indicators() {\n      const properties = Object.keys(this.attributes);\n      const labels = [];\n      const data = [];\n      const colorData = [];\n      properties.forEach(prop => {\n        if (!this.exludedProps.includes(prop)) {\n          let value = this.feature.get(prop);\n\n          labels.push(prop);\n          // Data quality (edge case) multiple with 100 (REMOVE if value is between 0 and 100)\n          if (prop === \"data_quality\" && Number.isFinite(value)) {\n            value = value * 100;\n          }\n          if (Number.isFinite(value)) {\n            value = value.toFixed(0);\n          }\n          data.push(value);\n\n          // Find the correct color based on value\n          let color;\n          let colorPercentage;\n          if (prop === \"data_quality\") {\n            color = this.colors[\"data_quality\"];\n            colorPercentage = 100;\n          } else if (value >= 0 && value <= 20) {\n            color = this.colors[\"very_bad\"];\n            colorPercentage = ((value - 0) / 20) * 100;\n          } else if (value > 20 && value <= 40) {\n            color = this.colors[\"bad\"];\n            colorPercentage = ((value - 20) / 20) * 100;\n          } else if (value > 40 && value <= 60) {\n            color = this.colors[\"medium\"];\n            colorPercentage = ((value - 40) / 20) * 100;\n          } else if (value > 60 && value <= 80) {\n            color = this.colors[\"good\"];\n            colorPercentage = ((value - 60) / 20) * 100;\n          } else if (value > 80 && value <= 100) {\n            color = this.colors[\"very_good\"];\n            colorPercentage = ((value - 80) / 20) * 100;\n          } else {\n            // Fallback if there is not in range\n            color = this.colors[\"default\"];\n            colorPercentage = 100;\n          }\n          const lower = new ColorObj(color.lower);\n          const upper = new ColorObj(color.upper);\n          const backgroundColor = LinearColorInterpolator.findColorBetween(\n            lower,\n            upper,\n            colorPercentage\n          ).asRgbCss();\n          colorData.push(backgroundColor);\n        }\n      });\n      return {\n        labels,\n        data,\n        colorData\n      };\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/other"}]}