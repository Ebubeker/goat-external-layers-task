{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/print/PrintViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/print/PrintViewer.vue","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport { getCurrentDate, getCurrentTime } from \"../../../utils/Helpers\";\nimport PrintLegend from \"./PrintLegend\";\nimport { Mapable } from \"../../../mixins/Mapable\";\nexport default {\n  components: {\n    \"print-legend\": PrintLegend\n  },\n  mixins: [Mapable],\n  data: function data() {\n    return {\n      mapSideSheetSize: 65,\n      // in mm. The sheet area for legend, title and logos. (right or bottom)\n      logoGoat: \"img/goat_standard.svg\",\n      logoP4B: \"img/plan4better_standard.svg\",\n      rotationIcon: \"img/north_arrow.png\"\n    };\n  },\n  computed: _objectSpread({}, mapGetters(\"map\", {\n    print: \"print\"\n  }), {}, mapGetters(\"app\", {\n    appColor: \"appColor\"\n  }), {\n    /**\n     * Get formated date time as dd/mm/yyyy hh:mm:ss\n     */\n    formatedDateTime: function formatedDateTime() {\n      var m = new Date();\n      var dateString = m.getUTCFullYear() + \"/\" + (\"0\" + (m.getUTCMonth() + 1)).slice(-2) + \"/\" + (\"0\" + m.getUTCDate()).slice(-2) + \" \" + (\"0\" + m.getUTCHours()).slice(-2) + \":\" + (\"0\" + m.getUTCMinutes()).slice(-2) + \":\" + (\"0\" + m.getUTCSeconds()).slice(-2);\n      return dateString;\n    },\n\n    /**\n     * Map viewport width in mm\n     */\n    getMapWidth: function getMapWidth() {\n      var sheetWidth = this.print.layout.size[0];\n      var sheetPadding = this.print.layout.padding;\n      var viewPortWidth = sheetWidth - 2 * sheetPadding;\n\n      if (this.print.layout.orientation === \"landscape\" && this.print.legend) {\n        viewPortWidth = viewPortWidth - this.mapSideSheetSize;\n      }\n\n      return viewPortWidth;\n    },\n\n    /**\n     * Map viewport height in mm\n     */\n    getMapHeight: function getMapHeight() {\n      var sheetHeight = this.print.layout.size[1];\n      var sheetPadding = this.print.layout.padding;\n      var viewPortHeight = sheetHeight - 2 * sheetPadding;\n\n      if (this.print.layout.orientation === \"portrait\" && this.print.legend) {\n        viewPortHeight = viewPortHeight - this.mapSideSheetSize;\n      } // If legend is deactivated, create a small sheet padding in the bottom to position title and logos\n\n\n      if (!this.print.legend) {\n        viewPortHeight = viewPortHeight - 20;\n      }\n\n      return viewPortHeight;\n    },\n\n    /**\n     * Get title style based on layout size, orientation and legend visibility\n     */\n    getTitleStyle: function getTitleStyle() {\n      var left;\n      var top;\n      var sheetWidth = this.print.layout.size[0];\n      var sheetPadding = this.print.layout.padding;\n\n      if (this.print.legend && this.print.layout.orientation === \"landscape\") {\n        left = 5 + sheetPadding + this.getMapWidth;\n        top = sheetPadding;\n      } else {\n        left = sheetWidth / 2 - 30;\n        top = sheetPadding + this.getMapHeight;\n      }\n\n      var style = \"z-index: 1;width: 60mm;text-align: center;word-wrap: break-word;vertical-align: middle;position:absolute;left:\".concat(left, \"mm;top:\").concat(top, \"mm;\");\n      return style;\n    }\n  }),\n  watch: {\n    \"print.active\": function printActive(state) {\n      if (state === true) {\n        this.map.setTarget(\"ol-map-print\");\n      } else {\n        this.map.setTarget(\"ol-map-container\");\n      }\n    },\n    \"print.layout\": function printLayout() {\n      this.updateMap();\n    },\n    \"print.legend\": function printLegend() {\n      this.updateMap();\n    },\n    \"print.title\": function printTitle(newValue, oldValue) {\n      var _this = this;\n\n      // Rerender if user clear the text\n      if (!newValue || newValue.length - oldValue.length > 1) {\n        setTimeout(function () {\n          _this.$forceUpdate();\n        }, 50);\n      }\n    }\n  },\n  methods: {\n    getCurrentDate: getCurrentDate,\n    getCurrentTime: getCurrentTime,\n    updateMap: function updateMap() {\n      var _this2 = this;\n\n      // Workaround as we have for the map to be rendered.\n      setTimeout(function () {\n        _this2.map.updateSize();\n\n        _this2.map.render();\n      }, 50);\n    },\n\n    /**\n     * Legend style\n     */\n    getLegendStyle: function getLegendStyle() {\n      var left;\n      var top;\n      var padding = this.print.layout.padding;\n\n      if (this.print.layout.orientation === \"portrait\") {\n        left = padding;\n        top = padding + this.getMapHeight + 7; // 7 is added to avoid overlapping with crs label\n      } else {\n        left = 5 + padding + this.getMapWidth;\n        var title = this.$refs[\"print-title\"];\n\n        if (title && title.clientHeight) {\n          console.log(title.clientHeight);\n          var pixels = padding + title.clientHeight;\n          top = pixels * 25.4 / 72 + 7; // convert to mm\n        } else {\n          top = padding;\n        }\n      }\n\n      var style = \"z-index:1;position:absolute;top:\".concat(top, \"mm;left:\").concat(left, \"mm;overflow:hidden;\");\n      return style;\n    },\n\n    /**\n     * Legend Height\n     */\n    getLegendMaxHeight: function getLegendMaxHeight() {\n      var maxHeight;\n      var padding = this.print.layout.padding;\n\n      if (this.print.layout.orientation === \"landscape\") {\n        maxHeight = this.print.layout.size[1] - 2 * padding - 10;\n      } else {\n        maxHeight = this.print.layout.size[1] - 2 * padding - this.getMapHeight - 5;\n      }\n\n      return maxHeight;\n    }\n  }\n};",{"version":3,"sources":["PrintViewer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-row align=\"center\">\n      <div\n        id=\"map-print-wrapper\"\n        class=\"elevation-10 ml-4 ma-3\"\n        :style=\"\n          `position:relative;width:${print.layout.size[0]}mm;height:${print.layout.size[1]}mm;padding:${print.layout.padding}mm;`\n        \"\n      >\n        <!-- MAP -->\n        <div\n          :style=\"\n            `width:${getMapWidth}mm;height:${getMapHeight}mm;position:absolute;border: 1px solid #ccc;`\n          \"\n          id=\"ol-map-print\"\n        >\n          <img\n            crossorigin=\"anonymous\"\n            :src=\"rotationIcon\"\n            :style=\"\n              `transform:rotate(${print.rotation}deg);z-index:2;max-width:10mm;position:absolute;right:5mm;top:5mm;`\n            \"\n          />\n          <!-- TIME -->\n          <div\n            class=\"caption\"\n            :style=\"\n              `z-index:1;position:absolute;left:0mm;bottom:-5mm;font-size:0.55rem !important;`\n            \"\n          >\n            {{ `CRS: ${print.selectedCrs}` }}\n          </div>\n          <!-- CRS -->\n          <div\n            class=\"caption\"\n            :style=\"\n              `z-index:1;max-width:40mm;position:absolute;right:0mm;bottom:-5mm;font-size:0.55rem !important;`\n            \"\n          >\n            {{ formatedDateTime }}\n          </div>\n        </div>\n\n        <!-- TITLE -->\n        <div class=\"title\" ref=\"print-title\" :style=\"getTitleStyle\">\n          {{ print.title ? print.title.toUpperCase() : \"\" }}\n        </div>\n        <!-- LEGEND -->\n        <div\n          v-if=\"print.legend\"\n          :style=\"\n            getLegendStyle() + `max-height:${this.getLegendMaxHeight()}mm;`\n          \"\n        >\n          <div class=\".subtitle-1\">LEGEND</div>\n\n          <print-legend v-if=\"print.active === true\"></print-legend>\n        </div>\n        <!-- GOAT LOGO -->\n        <img\n          crossorigin=\"anonymous\"\n          :src=\"logoGoat\"\n          :style=\"\n            `z-index:1;max-width:30mm;position:absolute;right:39mm;bottom:5mm;padding-right:2mm;border-right: 1px solid #ccc;`\n          \"\n        />\n        <img\n          crossorigin=\"anonymous\"\n          :src=\"logoP4B\"\n          :style=\"\n            `z-index:1;max-width:35mm;position:absolute;right:2mm;bottom:5mm;`\n          \"\n        />\n      </div>\n    </v-row>\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport { getCurrentDate, getCurrentTime } from \"../../../utils/Helpers\";\nimport PrintLegend from \"./PrintLegend\";\nimport { Mapable } from \"../../../mixins/Mapable\";\nexport default {\n  components: {\n    \"print-legend\": PrintLegend\n  },\n  mixins: [Mapable],\n  data() {\n    return {\n      mapSideSheetSize: 65, // in mm. The sheet area for legend, title and logos. (right or bottom)\n      logoGoat: \"img/goat_standard.svg\",\n      logoP4B: \"img/plan4better_standard.svg\",\n      rotationIcon: \"img/north_arrow.png\"\n    };\n  },\n  computed: {\n    ...mapGetters(\"map\", {\n      print: \"print\"\n    }),\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    }),\n    /**\n     * Get formated date time as dd/mm/yyyy hh:mm:ss\n     */\n    formatedDateTime() {\n      const m = new Date();\n      const dateString =\n        m.getUTCFullYear() +\n        \"/\" +\n        (\"0\" + (m.getUTCMonth() + 1)).slice(-2) +\n        \"/\" +\n        (\"0\" + m.getUTCDate()).slice(-2) +\n        \" \" +\n        (\"0\" + m.getUTCHours()).slice(-2) +\n        \":\" +\n        (\"0\" + m.getUTCMinutes()).slice(-2) +\n        \":\" +\n        (\"0\" + m.getUTCSeconds()).slice(-2);\n      return dateString;\n    },\n    /**\n     * Map viewport width in mm\n     */\n    getMapWidth() {\n      const sheetWidth = this.print.layout.size[0];\n      const sheetPadding = this.print.layout.padding;\n      let viewPortWidth = sheetWidth - 2 * sheetPadding;\n      if (this.print.layout.orientation === \"landscape\" && this.print.legend) {\n        viewPortWidth = viewPortWidth - this.mapSideSheetSize;\n      }\n      return viewPortWidth;\n    },\n    /**\n     * Map viewport height in mm\n     */\n    getMapHeight() {\n      const sheetHeight = this.print.layout.size[1];\n      const sheetPadding = this.print.layout.padding;\n      let viewPortHeight = sheetHeight - 2 * sheetPadding;\n      if (this.print.layout.orientation === \"portrait\" && this.print.legend) {\n        viewPortHeight = viewPortHeight - this.mapSideSheetSize;\n      }\n      // If legend is deactivated, create a small sheet padding in the bottom to position title and logos\n      if (!this.print.legend) {\n        viewPortHeight = viewPortHeight - 20;\n      }\n      return viewPortHeight;\n    },\n    /**\n     * Get title style based on layout size, orientation and legend visibility\n     */\n    getTitleStyle() {\n      let left;\n      let top;\n      const sheetWidth = this.print.layout.size[0];\n      const sheetPadding = this.print.layout.padding;\n      if (this.print.legend && this.print.layout.orientation === \"landscape\") {\n        left = 5 + sheetPadding + this.getMapWidth;\n        top = sheetPadding;\n      } else {\n        left = sheetWidth / 2 - 30;\n        top = sheetPadding + this.getMapHeight;\n      }\n      const style = `z-index: 1;width: 60mm;text-align: center;word-wrap: break-word;vertical-align: middle;position:absolute;left:${left}mm;top:${top}mm;`;\n      return style;\n    }\n  },\n  watch: {\n    \"print.active\": function(state) {\n      if (state === true) {\n        this.map.setTarget(\"ol-map-print\");\n      } else {\n        this.map.setTarget(\"ol-map-container\");\n      }\n    },\n    \"print.layout\": function() {\n      this.updateMap();\n    },\n    \"print.legend\": function() {\n      this.updateMap();\n    },\n    \"print.title\": function(newValue, oldValue) {\n      // Rerender if user clear the text\n      if (!newValue || newValue.length - oldValue.length > 1) {\n        setTimeout(() => {\n          this.$forceUpdate();\n        }, 50);\n      }\n    }\n  },\n  methods: {\n    getCurrentDate,\n    getCurrentTime,\n    updateMap() {\n      // Workaround as we have for the map to be rendered.\n      setTimeout(() => {\n        this.map.updateSize();\n        this.map.render();\n      }, 50);\n    },\n    /**\n     * Legend style\n     */\n    getLegendStyle() {\n      let left;\n      let top;\n      const padding = this.print.layout.padding;\n      if (this.print.layout.orientation === \"portrait\") {\n        left = padding;\n        top = padding + this.getMapHeight + 7; // 7 is added to avoid overlapping with crs label\n      } else {\n        left = 5 + padding + this.getMapWidth;\n        const title = this.$refs[\"print-title\"];\n        if (title && title.clientHeight) {\n          console.log(title.clientHeight);\n          let pixels = padding + title.clientHeight;\n          top = (pixels * 25.4) / 72 + 7; // convert to mm\n        } else {\n          top = padding;\n        }\n      }\n      const style = `z-index:1;position:absolute;top:${top}mm;left:${left}mm;overflow:hidden;`;\n      return style;\n    },\n    /**\n     * Legend Height\n     */\n    getLegendMaxHeight() {\n      let maxHeight;\n      const padding = this.print.layout.padding;\n      if (this.print.layout.orientation === \"landscape\") {\n        maxHeight = this.print.layout.size[1] - 2 * padding - 10;\n      } else {\n        maxHeight =\n          this.print.layout.size[1] - 2 * padding - this.getMapHeight - 5;\n      }\n      return maxHeight;\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/viewer/print"}]}