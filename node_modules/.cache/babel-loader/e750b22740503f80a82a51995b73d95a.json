{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Settings.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport i18n from \"@/plugins/i18n\";\nimport { EventBus } from \"../../EventBus\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  props: [\"visible\"],\n  data: function data() {\n    return {\n      selectedLanguage: 0,\n      units: \"kilometers\",\n      languages: [{\n        flag: \"gb\",\n        language: \"en\",\n        title: \"English\"\n      }, {\n        flag: \"de\",\n        language: \"de\",\n        title: \"Deutsch\"\n      }],\n      interactionType: \"languageChange\"\n    };\n  },\n  methods: {\n    changeLocale: function changeLocale(locale) {\n      i18n.locale = locale; //Close other interactions.\n\n      EventBus.$emit(\"ol-interaction-activated\", this.interactionType);\n      EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n    }\n  },\n  computed: _objectSpread({\n    show: {\n      get: function get() {\n        return this.visible;\n      },\n      set: function set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n          EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n        }\n      }\n    }\n  }, mapGetters(\"app\", {\n    appColor: \"appColor\"\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    var currentLang = this.$i18n.locale;\n    this.languages.forEach(function (l, index) {\n      if (l.language === currentLang) {\n        _this.selectedLanguage = index;\n      }\n    });\n  }\n};",{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,IAAA,MAAA,gBAAA;AACA,SAAA,QAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,SAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,CADA;AAEA,MAAA,KAAA,EAAA,YAFA;AAGA,MAAA,SAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,CAHA;AAOA,MAAA,eAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,MADA,EACA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,MAAA,CADA,CAEA;;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,0BAAA,EAAA,KAAA,eAAA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,KAAA,eAAA;AACA;AANA,GAbA;AAqBA,EAAA,QAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,OAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,YAAA,CAAA,KAAA,EAAA;AACA,eAAA,KAAA,CAAA,OAAA;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,uBAAA,EAAA,KAAA,eAAA;AACA;AACA;AATA;AADA,KAYA,UAAA,CAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAAA,CAZA,CArBA;AAqCA,EAAA,OArCA,qBAqCA;AAAA;;AACA,QAAA,WAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AAEA,SAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,KAAA,EAAA;AACA,UAAA,CAAA,CAAA,QAAA,KAAA,WAAA,EAAA;AACA,QAAA,KAAA,CAAA,gBAAA,GAAA,KAAA;AACA;AACA,KAJA;AAKA;AA7CA,CAAA","sourcesContent":["<template>\n  <v-dialog v-model=\"show\" scrollable max-width=\"500px\">\n    <v-card flat>\n      <v-app-bar :color=\"appColor.primary\" dark>\n        <v-app-bar-nav-icon><v-icon>fas fa-flag</v-icon></v-app-bar-nav-icon>\n        <v-toolbar-title>{{ $t(\"appBar.settings.title\") }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-app-bar-nav-icon @click.stop=\"show = false\"\n          ><v-icon>close</v-icon></v-app-bar-nav-icon\n        >\n      </v-app-bar>\n      <vue-scroll>\n        <!-- App Language Settings -->\n        <v-subheader\n          ><h3>{{ $t(\"appBar.settings.language\") }}</h3></v-subheader\n        >\n        <v-card-text class=\"pr-16 pl-16 pt-0 pb-0 mb-2\">\n          <v-divider></v-divider>\n        </v-card-text>\n        <v-card-text>\n          <div class=\"\">\n            <span>\n              <v-btn-toggle v-model=\"selectedLanguage\" mandatory>\n                <v-flex class=\"mx-2\">\n                  <v-btn\n                    text\n                    v-for=\"entry in languages\"\n                    :key=\"entry.title\"\n                    @click=\"changeLocale(entry.language)\"\n                  >\n                    <!-- <flag :iso=\"entry.flag\" v-bind:squared=\"false\" /> -->\n                    <span class=\"pl-2\">{{ entry.title }}</span>\n                  </v-btn>\n                </v-flex>\n              </v-btn-toggle>\n            </span>\n          </div>\n        </v-card-text>\n      </vue-scroll>\n    </v-card>\n  </v-dialog>\n</template>\n<script>\nimport i18n from \"@/plugins/i18n\";\nimport { EventBus } from \"../../EventBus\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  props: [\"visible\"],\n  data() {\n    return {\n      selectedLanguage: 0,\n      units: \"kilometers\",\n      languages: [\n        { flag: \"gb\", language: \"en\", title: \"English\" },\n        { flag: \"de\", language: \"de\", title: \"Deutsch\" }\n      ],\n      interactionType: \"languageChange\"\n    };\n  },\n  methods: {\n    changeLocale(locale) {\n      i18n.locale = locale;\n      //Close other interactions.\n      EventBus.$emit(\"ol-interaction-activated\", this.interactionType);\n      EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n    }\n  },\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n          EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n        }\n      }\n    },\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    })\n  },\n  mounted() {\n    const currentLang = this.$i18n.locale;\n\n    this.languages.forEach((l, index) => {\n      if (l.language === currentLang) {\n        this.selectedLanguage = index;\n      }\n    });\n  }\n};\n</script>\n"],"sourceRoot":"src/components/core"}]}