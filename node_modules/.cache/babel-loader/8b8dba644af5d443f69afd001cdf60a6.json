{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js??ref--13-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/utils/ScreenFull.js","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/utils/ScreenFull.js","mtime":1657636289867},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js","mtime":1657636581253}],"contextDependencies":[],"result":["/*!\n * screenfull\n * v5.0.1 - 2020-01-19\n * (c) Sindre Sorhus; MIT License\n */\n(function () {\n  \"use strict\";\n\n  var document = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" ? window.document : {};\n  var isCommonjs = typeof module !== \"undefined\" && module.exports;\n\n  var fn = function () {\n    var val;\n    var fnMap = [[\"requestFullscreen\", \"exitFullscreen\", \"fullscreenElement\", \"fullscreenEnabled\", \"fullscreenchange\", \"fullscreenerror\"], // New WebKit\n    [\"webkitRequestFullscreen\", \"webkitExitFullscreen\", \"webkitFullscreenElement\", \"webkitFullscreenEnabled\", \"webkitfullscreenchange\", \"webkitfullscreenerror\"], // Old WebKit\n    [\"webkitRequestFullScreen\", \"webkitCancelFullScreen\", \"webkitCurrentFullScreenElement\", \"webkitCancelFullScreen\", \"webkitfullscreenchange\", \"webkitfullscreenerror\"], [\"mozRequestFullScreen\", \"mozCancelFullScreen\", \"mozFullScreenElement\", \"mozFullScreenEnabled\", \"mozfullscreenchange\", \"mozfullscreenerror\"], [\"msRequestFullscreen\", \"msExitFullscreen\", \"msFullscreenElement\", \"msFullscreenEnabled\", \"MSFullscreenChange\", \"MSFullscreenError\"]];\n    var i = 0;\n    var l = fnMap.length;\n    var ret = {};\n\n    for (; i < l; i++) {\n      val = fnMap[i];\n\n      if (val && val[1] in document) {\n        for (i = 0; i < val.length; i++) {\n          ret[fnMap[0][i]] = val[i];\n        }\n\n        return ret;\n      }\n    }\n\n    return false;\n  }();\n\n  var eventNameMap = {\n    change: fn.fullscreenchange,\n    error: fn.fullscreenerror\n  };\n  var screenfull = {\n    request: function request(element) {\n      return new Promise(function (resolve, reject) {\n        var onFullScreenEntered = function () {\n          this.off(\"change\", onFullScreenEntered);\n          resolve();\n        }.bind(this);\n\n        this.on(\"change\", onFullScreenEntered);\n        element = element || document.documentElement;\n        Promise.resolve(element[fn.requestFullscreen]()).catch(reject);\n      }.bind(this));\n    },\n    exit: function exit() {\n      return new Promise(function (resolve, reject) {\n        if (!this.isFullscreen) {\n          resolve();\n          return;\n        }\n\n        var onFullScreenExit = function () {\n          this.off(\"change\", onFullScreenExit);\n          resolve();\n        }.bind(this);\n\n        this.on(\"change\", onFullScreenExit);\n        Promise.resolve(document[fn.exitFullscreen]()).catch(reject);\n      }.bind(this));\n    },\n    toggle: function toggle(element) {\n      return this.isFullscreen ? this.exit() : this.request(element);\n    },\n    onchange: function onchange(callback) {\n      this.on(\"change\", callback);\n    },\n    onerror: function onerror(callback) {\n      this.on(\"error\", callback);\n    },\n    on: function on(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.addEventListener(eventName, callback, false);\n      }\n    },\n    off: function off(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.removeEventListener(eventName, callback, false);\n      }\n    },\n    raw: fn\n  };\n\n  if (!fn) {\n    if (isCommonjs) {\n      module.exports = {\n        isEnabled: false\n      };\n    } else {\n      window.screenfull = {\n        isEnabled: false\n      };\n    }\n\n    return;\n  }\n\n  Object.defineProperties(screenfull, {\n    isFullscreen: {\n      get: function get() {\n        return Boolean(document[fn.fullscreenElement]);\n      }\n    },\n    element: {\n      enumerable: true,\n      get: function get() {\n        return document[fn.fullscreenElement];\n      }\n    },\n    isEnabled: {\n      enumerable: true,\n      get: function get() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[fn.fullscreenEnabled]);\n      }\n    }\n  });\n\n  if (isCommonjs) {\n    module.exports = screenfull;\n  } else {\n    window.screenfull = screenfull;\n  }\n})();",{"version":3,"sources":["/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/utils/ScreenFull.js"],"names":["document","window","isCommonjs","module","exports","fn","val","fnMap","i","l","length","ret","eventNameMap","change","fullscreenchange","error","fullscreenerror","screenfull","request","element","Promise","resolve","reject","onFullScreenEntered","off","bind","on","documentElement","requestFullscreen","catch","exit","isFullscreen","onFullScreenExit","exitFullscreen","toggle","onchange","callback","onerror","event","eventName","addEventListener","removeEventListener","raw","isEnabled","Object","defineProperties","get","Boolean","fullscreenElement","enumerable","fullscreenEnabled"],"mappings":"AAAA;;;;;AAKA,CAAC,YAAW;AACV;;AAEA,MAAIA,QAAQ,GACV,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACD,QAAd,KAA2B,WAA5D,GACIC,MAAM,CAACD,QADX,GAEI,EAHN;AAIA,MAAIE,UAAU,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAAzD;;AAEA,MAAIC,EAAE,GAAI,YAAW;AACnB,QAAIC,GAAJ;AAEA,QAAIC,KAAK,GAAG,CACV,CACE,mBADF,EAEE,gBAFF,EAGE,mBAHF,EAIE,mBAJF,EAKE,kBALF,EAME,iBANF,CADU,EASV;AACA,KACE,yBADF,EAEE,sBAFF,EAGE,yBAHF,EAIE,yBAJF,EAKE,wBALF,EAME,uBANF,CAVU,EAkBV;AACA,KACE,yBADF,EAEE,wBAFF,EAGE,gCAHF,EAIE,wBAJF,EAKE,wBALF,EAME,uBANF,CAnBU,EA2BV,CACE,sBADF,EAEE,qBAFF,EAGE,sBAHF,EAIE,sBAJF,EAKE,qBALF,EAME,oBANF,CA3BU,EAmCV,CACE,qBADF,EAEE,kBAFF,EAGE,qBAHF,EAIE,qBAJF,EAKE,oBALF,EAME,mBANF,CAnCU,CAAZ;AA6CA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,CAAC,GAAGF,KAAK,CAACG,MAAd;AACA,QAAIC,GAAG,GAAG,EAAV;;AAEA,WAAOH,CAAC,GAAGC,CAAX,EAAcD,CAAC,EAAf,EAAmB;AACjBF,MAAAA,GAAG,GAAGC,KAAK,CAACC,CAAD,CAAX;;AACA,UAAIF,GAAG,IAAIA,GAAG,CAAC,CAAD,CAAH,IAAUN,QAArB,EAA+B;AAC7B,aAAKQ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,GAAG,CAACI,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC/BG,UAAAA,GAAG,CAACJ,KAAK,CAAC,CAAD,CAAL,CAASC,CAAT,CAAD,CAAH,GAAmBF,GAAG,CAACE,CAAD,CAAtB;AACD;;AACD,eAAOG,GAAP;AACD;AACF;;AAED,WAAO,KAAP;AACD,GA/DQ,EAAT;;AAiEA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAER,EAAE,CAACS,gBADM;AAEjBC,IAAAA,KAAK,EAAEV,EAAE,CAACW;AAFO,GAAnB;AAKA,MAAIC,UAAU,GAAG;AACfC,IAAAA,OAAO,EAAE,iBAASC,OAAT,EAAkB;AACzB,aAAO,IAAIC,OAAJ,CACL,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACxB,YAAIC,mBAAmB,GAAG,YAAW;AACnC,eAAKC,GAAL,CAAS,QAAT,EAAmBD,mBAAnB;AACAF,UAAAA,OAAO;AACR,SAHyB,CAGxBI,IAHwB,CAGnB,IAHmB,CAA1B;;AAKA,aAAKC,EAAL,CAAQ,QAAR,EAAkBH,mBAAlB;AAEAJ,QAAAA,OAAO,GAAGA,OAAO,IAAInB,QAAQ,CAAC2B,eAA9B;AAEAP,QAAAA,OAAO,CAACC,OAAR,CAAgBF,OAAO,CAACd,EAAE,CAACuB,iBAAJ,CAAP,EAAhB,EAAiDC,KAAjD,CAAuDP,MAAvD;AACD,OAXD,CAWEG,IAXF,CAWO,IAXP,CADK,CAAP;AAcD,KAhBc;AAiBfK,IAAAA,IAAI,EAAE,gBAAW;AACf,aAAO,IAAIV,OAAJ,CACL,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACxB,YAAI,CAAC,KAAKS,YAAV,EAAwB;AACtBV,UAAAA,OAAO;AACP;AACD;;AAED,YAAIW,gBAAgB,GAAG,YAAW;AAChC,eAAKR,GAAL,CAAS,QAAT,EAAmBQ,gBAAnB;AACAX,UAAAA,OAAO;AACR,SAHsB,CAGrBI,IAHqB,CAGhB,IAHgB,CAAvB;;AAKA,aAAKC,EAAL,CAAQ,QAAR,EAAkBM,gBAAlB;AAEAZ,QAAAA,OAAO,CAACC,OAAR,CAAgBrB,QAAQ,CAACK,EAAE,CAAC4B,cAAJ,CAAR,EAAhB,EAA+CJ,KAA/C,CAAqDP,MAArD;AACD,OAdD,CAcEG,IAdF,CAcO,IAdP,CADK,CAAP;AAiBD,KAnCc;AAoCfS,IAAAA,MAAM,EAAE,gBAASf,OAAT,EAAkB;AACxB,aAAO,KAAKY,YAAL,GAAoB,KAAKD,IAAL,EAApB,GAAkC,KAAKZ,OAAL,CAAaC,OAAb,CAAzC;AACD,KAtCc;AAuCfgB,IAAAA,QAAQ,EAAE,kBAASC,QAAT,EAAmB;AAC3B,WAAKV,EAAL,CAAQ,QAAR,EAAkBU,QAAlB;AACD,KAzCc;AA0CfC,IAAAA,OAAO,EAAE,iBAASD,QAAT,EAAmB;AAC1B,WAAKV,EAAL,CAAQ,OAAR,EAAiBU,QAAjB;AACD,KA5Cc;AA6CfV,IAAAA,EAAE,EAAE,YAASY,KAAT,EAAgBF,QAAhB,EAA0B;AAC5B,UAAIG,SAAS,GAAG3B,YAAY,CAAC0B,KAAD,CAA5B;;AACA,UAAIC,SAAJ,EAAe;AACbvC,QAAAA,QAAQ,CAACwC,gBAAT,CAA0BD,SAA1B,EAAqCH,QAArC,EAA+C,KAA/C;AACD;AACF,KAlDc;AAmDfZ,IAAAA,GAAG,EAAE,aAASc,KAAT,EAAgBF,QAAhB,EAA0B;AAC7B,UAAIG,SAAS,GAAG3B,YAAY,CAAC0B,KAAD,CAA5B;;AACA,UAAIC,SAAJ,EAAe;AACbvC,QAAAA,QAAQ,CAACyC,mBAAT,CAA6BF,SAA7B,EAAwCH,QAAxC,EAAkD,KAAlD;AACD;AACF,KAxDc;AAyDfM,IAAAA,GAAG,EAAErC;AAzDU,GAAjB;;AA4DA,MAAI,CAACA,EAAL,EAAS;AACP,QAAIH,UAAJ,EAAgB;AACdC,MAAAA,MAAM,CAACC,OAAP,GAAiB;AAAEuC,QAAAA,SAAS,EAAE;AAAb,OAAjB;AACD,KAFD,MAEO;AACL1C,MAAAA,MAAM,CAACgB,UAAP,GAAoB;AAAE0B,QAAAA,SAAS,EAAE;AAAb,OAApB;AACD;;AAED;AACD;;AAEDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB5B,UAAxB,EAAoC;AAClCc,IAAAA,YAAY,EAAE;AACZe,MAAAA,GAAG,EAAE,eAAW;AACd,eAAOC,OAAO,CAAC/C,QAAQ,CAACK,EAAE,CAAC2C,iBAAJ,CAAT,CAAd;AACD;AAHW,KADoB;AAMlC7B,IAAAA,OAAO,EAAE;AACP8B,MAAAA,UAAU,EAAE,IADL;AAEPH,MAAAA,GAAG,EAAE,eAAW;AACd,eAAO9C,QAAQ,CAACK,EAAE,CAAC2C,iBAAJ,CAAf;AACD;AAJM,KANyB;AAYlCL,IAAAA,SAAS,EAAE;AACTM,MAAAA,UAAU,EAAE,IADH;AAETH,MAAAA,GAAG,EAAE,eAAW;AACd;AACA,eAAOC,OAAO,CAAC/C,QAAQ,CAACK,EAAE,CAAC6C,iBAAJ,CAAT,CAAd;AACD;AALQ;AAZuB,GAApC;;AAqBA,MAAIhD,UAAJ,EAAgB;AACdC,IAAAA,MAAM,CAACC,OAAP,GAAiBa,UAAjB;AACD,GAFD,MAEO;AACLhB,IAAAA,MAAM,CAACgB,UAAP,GAAoBA,UAApB;AACD;AACF,CA/KD","sourcesContent":["/*!\n * screenfull\n * v5.0.1 - 2020-01-19\n * (c) Sindre Sorhus; MIT License\n */\n(function() {\n  \"use strict\";\n\n  var document =\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\"\n      ? window.document\n      : {};\n  var isCommonjs = typeof module !== \"undefined\" && module.exports;\n\n  var fn = (function() {\n    var val;\n\n    var fnMap = [\n      [\n        \"requestFullscreen\",\n        \"exitFullscreen\",\n        \"fullscreenElement\",\n        \"fullscreenEnabled\",\n        \"fullscreenchange\",\n        \"fullscreenerror\"\n      ],\n      // New WebKit\n      [\n        \"webkitRequestFullscreen\",\n        \"webkitExitFullscreen\",\n        \"webkitFullscreenElement\",\n        \"webkitFullscreenEnabled\",\n        \"webkitfullscreenchange\",\n        \"webkitfullscreenerror\"\n      ],\n      // Old WebKit\n      [\n        \"webkitRequestFullScreen\",\n        \"webkitCancelFullScreen\",\n        \"webkitCurrentFullScreenElement\",\n        \"webkitCancelFullScreen\",\n        \"webkitfullscreenchange\",\n        \"webkitfullscreenerror\"\n      ],\n      [\n        \"mozRequestFullScreen\",\n        \"mozCancelFullScreen\",\n        \"mozFullScreenElement\",\n        \"mozFullScreenEnabled\",\n        \"mozfullscreenchange\",\n        \"mozfullscreenerror\"\n      ],\n      [\n        \"msRequestFullscreen\",\n        \"msExitFullscreen\",\n        \"msFullscreenElement\",\n        \"msFullscreenEnabled\",\n        \"MSFullscreenChange\",\n        \"MSFullscreenError\"\n      ]\n    ];\n\n    var i = 0;\n    var l = fnMap.length;\n    var ret = {};\n\n    for (; i < l; i++) {\n      val = fnMap[i];\n      if (val && val[1] in document) {\n        for (i = 0; i < val.length; i++) {\n          ret[fnMap[0][i]] = val[i];\n        }\n        return ret;\n      }\n    }\n\n    return false;\n  })();\n\n  var eventNameMap = {\n    change: fn.fullscreenchange,\n    error: fn.fullscreenerror\n  };\n\n  var screenfull = {\n    request: function(element) {\n      return new Promise(\n        function(resolve, reject) {\n          var onFullScreenEntered = function() {\n            this.off(\"change\", onFullScreenEntered);\n            resolve();\n          }.bind(this);\n\n          this.on(\"change\", onFullScreenEntered);\n\n          element = element || document.documentElement;\n\n          Promise.resolve(element[fn.requestFullscreen]()).catch(reject);\n        }.bind(this)\n      );\n    },\n    exit: function() {\n      return new Promise(\n        function(resolve, reject) {\n          if (!this.isFullscreen) {\n            resolve();\n            return;\n          }\n\n          var onFullScreenExit = function() {\n            this.off(\"change\", onFullScreenExit);\n            resolve();\n          }.bind(this);\n\n          this.on(\"change\", onFullScreenExit);\n\n          Promise.resolve(document[fn.exitFullscreen]()).catch(reject);\n        }.bind(this)\n      );\n    },\n    toggle: function(element) {\n      return this.isFullscreen ? this.exit() : this.request(element);\n    },\n    onchange: function(callback) {\n      this.on(\"change\", callback);\n    },\n    onerror: function(callback) {\n      this.on(\"error\", callback);\n    },\n    on: function(event, callback) {\n      var eventName = eventNameMap[event];\n      if (eventName) {\n        document.addEventListener(eventName, callback, false);\n      }\n    },\n    off: function(event, callback) {\n      var eventName = eventNameMap[event];\n      if (eventName) {\n        document.removeEventListener(eventName, callback, false);\n      }\n    },\n    raw: fn\n  };\n\n  if (!fn) {\n    if (isCommonjs) {\n      module.exports = { isEnabled: false };\n    } else {\n      window.screenfull = { isEnabled: false };\n    }\n\n    return;\n  }\n\n  Object.defineProperties(screenfull, {\n    isFullscreen: {\n      get: function() {\n        return Boolean(document[fn.fullscreenElement]);\n      }\n    },\n    element: {\n      enumerable: true,\n      get: function() {\n        return document[fn.fullscreenElement];\n      }\n    },\n    isEnabled: {\n      enumerable: true,\n      get: function() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[fn.fullscreenEnabled]);\n      }\n    }\n  });\n\n  if (isCommonjs) {\n    module.exports = screenfull;\n  } else {\n    window.screenfull = screenfull;\n  }\n})();\n"]}]}