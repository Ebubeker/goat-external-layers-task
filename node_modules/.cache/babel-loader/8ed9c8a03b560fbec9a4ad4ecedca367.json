{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js??ref--13-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/store/modules/isochrones.js","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/store/modules/isochrones.js","mtime":1657636289863},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js","mtime":1657636581253}],"contextDependencies":[],"result":["import { getField, updateField } from \"vuex-map-fields\";\nvar state = {\n  type: \"single\",\n  time: 10,\n  speed: 5,\n  steps: 2,\n  routing: \"walking_standard\",\n  // Style\n  defaultIsochroneColor: \"b\",\n  scenarioIsochroneColor: \"f\",\n  colors: {\n    a: {\n      \"1\": \"rgb(254, 202, 232)\",\n      \"2\": \"rgb(254, 144, 207)\",\n      \"3\": \"rgb(239, 002, 140)\",\n      \"4\": \"rgb(179, 001, 103)\",\n      \"5\": \"rgb(125, 001, 072)\"\n    },\n    b: {\n      \"1\": \"rgb(251, 188, 175)\",\n      \"2\": \"rgb(247, 122, 099)\",\n      \"3\": \"rgb(234, 049, 012)\",\n      \"4\": \"rgb(186, 039, 010)\",\n      \"5\": \"rgb(116, 024, 006)\"\n    },\n    c: {\n      \"1\": \"rgb(255, 200, 142)\",\n      \"2\": \"rgb(255, 171, 079)\",\n      \"3\": \"rgb(238, 125, 000)\",\n      \"4\": \"rgb(192, 101, 000)\",\n      \"5\": \"rgb(126, 066, 000)\"\n    },\n    d: {\n      \"1\": \"rgb(254, 229, 168)\",\n      \"2\": \"rgb(253, 216, 123)\",\n      \"3\": \"rgb(252, 193, 044)\",\n      \"4\": \"rgb(231, 166, 003)\",\n      \"5\": \"rgb(193, 139, 003)\"\n    },\n    e: {\n      \"1\": \"rgb(232, 240, 182)\",\n      \"2\": \"rgb(202, 220, 094)\",\n      \"3\": \"rgb(182, 206, 044)\",\n      \"4\": \"rgb(143, 161, 035)\",\n      \"5\": \"rgb(104, 117, 025)\"\n    },\n    f: {\n      \"1\": \"rgb(220, 241, 211)\",\n      \"2\": \"rgb(173, 223, 153)\",\n      \"3\": \"rgb(097, 190, 060)\",\n      \"4\": \"rgb(071, 140, 044)\",\n      \"5\": \"rgb(054, 105, 033)\"\n    },\n    g: {\n      \"1\": \"rgb(201, 237, 236)\",\n      \"2\": \"rgb(144, 216, 214)\",\n      \"3\": \"rgb(066, 190, 187)\",\n      \"4\": \"rgb(052, 152, 150)\",\n      \"5\": \"rgb(039, 111, 109)\"\n    },\n    h: {\n      \"1\": \"rgb(197, 218, 237)\",\n      \"2\": \"rgb(126, 172, 214)\",\n      \"3\": \"rgb(066, 133, 194)\",\n      \"4\": \"rgb(042, 105, 162)\",\n      \"5\": \"rgb(032, 081, 126)\"\n    },\n    i: {\n      \"1\": \"rgb(255, 255, 255)\",\n      \"2\": \"rgb(207, 207, 207)\",\n      \"3\": \"rgb(159, 159, 159)\",\n      \"4\": \"rgb(090, 090, 090)\",\n      \"5\": \"rgb(000, 000, 000)\"\n    }\n  },\n  isochroneLayer: null,\n  isochroneRoadNetworkLayer: null,\n  multiIsochroneMethod: null,\n  multiIsochroneSelectionLayer: null,\n  calculations: [],\n  isochroneOverlayLayer: null,\n  selectedThematicData: null,\n  // Cancel Request\n  cancelReq: undefined\n};\nvar getters = {\n  colors: function colors(state) {\n    return state.colors;\n  },\n  type: function type(state) {\n    return state.type;\n  },\n  isochroneLayer: function isochroneLayer(state) {\n    return state.isochroneLayer;\n  },\n  selectedThematicData: function selectedThematicData(state) {\n    return state.selectedThematicData;\n  },\n  calculations: function calculations(state) {\n    return state.calculations;\n  },\n  getField: getField\n};\nvar actions = {};\nvar mutations = {\n  updateField: updateField\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/store/modules/isochrones.js"],"names":["getField","updateField","state","type","time","speed","steps","routing","defaultIsochroneColor","scenarioIsochroneColor","colors","a","b","c","d","e","f","g","h","i","isochroneLayer","isochroneRoadNetworkLayer","multiIsochroneMethod","multiIsochroneSelectionLayer","calculations","isochroneOverlayLayer","selectedThematicData","cancelReq","undefined","getters","actions","mutations","namespaced"],"mappings":"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","sourcesContent":["import { getField, updateField } from \"vuex-map-fields\";\n\nconst state = {\n  type: \"single\",\n  time: 10,\n  speed: 5,\n  steps: 2,\n  routing: \"walking_standard\",\n  // Style\n  defaultIsochroneColor: \"b\",\n  scenarioIsochroneColor: \"f\",\n  colors: {\n    a: {\n      \"1\": \"rgb(254, 202, 232)\",\n      \"2\": \"rgb(254, 144, 207)\",\n      \"3\": \"rgb(239, 002, 140)\",\n      \"4\": \"rgb(179, 001, 103)\",\n      \"5\": \"rgb(125, 001, 072)\"\n    },\n    b: {\n      \"1\": \"rgb(251, 188, 175)\",\n      \"2\": \"rgb(247, 122, 099)\",\n      \"3\": \"rgb(234, 049, 012)\",\n      \"4\": \"rgb(186, 039, 010)\",\n      \"5\": \"rgb(116, 024, 006)\"\n    },\n    c: {\n      \"1\": \"rgb(255, 200, 142)\",\n      \"2\": \"rgb(255, 171, 079)\",\n      \"3\": \"rgb(238, 125, 000)\",\n      \"4\": \"rgb(192, 101, 000)\",\n      \"5\": \"rgb(126, 066, 000)\"\n    },\n    d: {\n      \"1\": \"rgb(254, 229, 168)\",\n      \"2\": \"rgb(253, 216, 123)\",\n      \"3\": \"rgb(252, 193, 044)\",\n      \"4\": \"rgb(231, 166, 003)\",\n      \"5\": \"rgb(193, 139, 003)\"\n    },\n    e: {\n      \"1\": \"rgb(232, 240, 182)\",\n      \"2\": \"rgb(202, 220, 094)\",\n      \"3\": \"rgb(182, 206, 044)\",\n      \"4\": \"rgb(143, 161, 035)\",\n      \"5\": \"rgb(104, 117, 025)\"\n    },\n    f: {\n      \"1\": \"rgb(220, 241, 211)\",\n      \"2\": \"rgb(173, 223, 153)\",\n      \"3\": \"rgb(097, 190, 060)\",\n      \"4\": \"rgb(071, 140, 044)\",\n      \"5\": \"rgb(054, 105, 033)\"\n    },\n    g: {\n      \"1\": \"rgb(201, 237, 236)\",\n      \"2\": \"rgb(144, 216, 214)\",\n      \"3\": \"rgb(066, 190, 187)\",\n      \"4\": \"rgb(052, 152, 150)\",\n      \"5\": \"rgb(039, 111, 109)\"\n    },\n    h: {\n      \"1\": \"rgb(197, 218, 237)\",\n      \"2\": \"rgb(126, 172, 214)\",\n      \"3\": \"rgb(066, 133, 194)\",\n      \"4\": \"rgb(042, 105, 162)\",\n      \"5\": \"rgb(032, 081, 126)\"\n    },\n    i: {\n      \"1\": \"rgb(255, 255, 255)\",\n      \"2\": \"rgb(207, 207, 207)\",\n      \"3\": \"rgb(159, 159, 159)\",\n      \"4\": \"rgb(090, 090, 090)\",\n      \"5\": \"rgb(000, 000, 000)\"\n    }\n  },\n  isochroneLayer: null,\n  isochroneRoadNetworkLayer: null,\n  multiIsochroneMethod: null,\n  multiIsochroneSelectionLayer: null,\n  calculations: [],\n  isochroneOverlayLayer: null,\n  selectedThematicData: null,\n  // Cancel Request\n  cancelReq: undefined\n};\n\nconst getters = {\n  colors: state => state.colors,\n  type: state => state.type,\n  isochroneLayer: state => state.isochroneLayer,\n  selectedThematicData: state => state.selectedThematicData,\n  calculations: state => state.calculations,\n  getField\n};\n\nconst actions = {};\n\nconst mutations = {\n  updateField\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}