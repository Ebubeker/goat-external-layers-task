{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/ScenarioDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/ScenarioDialog.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapFields } from \"vuex-map-fields\";\nimport { mapGetters } from \"vuex\";\nimport ApiService from \"../../services/api.service\";\nimport { GET_SCENARIOS } from \"../../store/actions.type\";\nexport default {\n  props: [\"visible\", \"scenarioId\"],\n  data: function data() {\n    return {\n      valid: false,\n      scenarioName: \"\",\n      rules: {\n        required: function required(value) {\n          return !!value || \"Required.\";\n        },\n        counter: function counter(value) {\n          return value.length < 50 || \"Max 50 characters\";\n        }\n      }\n    };\n  },\n  computed: _objectSpread({\n    show: {\n      get: function get() {\n        return this.visible;\n      },\n      set: function set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n        }\n      }\n    }\n  }, mapFields(\"scenarios\", {\n    scenarios: \"scenarios\",\n    activeScenario: \"activeScenario\"\n  }), {}, mapGetters(\"app\", {\n    appColor: \"appColor\"\n  })),\n  methods: {\n    updateInsertScenario: function updateInsertScenario() {\n      var _this = this;\n\n      var scenarioName = this.scenarioName;\n      var activeScenarioId = this.scenarioId;\n      var payload = {\n        scenario_name: scenarioName\n      };\n      var promise;\n\n      if (activeScenarioId) {\n        promise = ApiService.put(\"/scenarios/\".concat(activeScenarioId), payload);\n      } else {\n        promise = ApiService.post(\"/scenarios\", payload);\n      }\n\n      promise.then(function (response) {\n        if (response.status === 200) {\n          _this.$store.dispatch(\"scenarios/\".concat(GET_SCENARIOS));\n\n          var scenarioId = activeScenarioId || response.data.id;\n          scenarioId = parseInt(scenarioId);\n          _this.activeScenario = scenarioId;\n        }\n      }).catch(function (error) {\n        throw new Error(error);\n      });\n    }\n  },\n  watch: {\n    show: function show() {\n      var _this2 = this;\n\n      if (this.show === true) {\n        if (this.scenarioId) {\n          this.scenarios.forEach(function (scenario) {\n            if (scenario.id === _this2.scenarioId) {\n              _this2.scenarioName = scenario.scenario_name;\n            }\n          });\n        } else {\n          var id = this.scenarios.length;\n\n          if (id > 0) {\n            id += 1;\n            this.scenarioName = this.$t(\"appBar.edit.scenario\") + \" \" + id;\n          } else {\n            this.scenarioName = this.$t(\"appBar.edit.scenario\") + \" 1\";\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["ScenarioDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"show\"\n    max-width=\"400\"\n    @keydown.esc=\"scenarioDialog = false\"\n  >\n    <v-card>\n      <v-app-bar flat :color=\"appColor.primary\" dark height=\"50\">\n        <v-icon class=\"mr-3\">fas fa-bullseye</v-icon>\n        <v-toolbar-title>{{\n          scenarioId\n            ? $t(\"appBar.edit.editScenarioName\")\n            : $t(\"appBar.edit.createScenario\")\n        }}</v-toolbar-title>\n      </v-app-bar>\n      <v-card-text class=\"mt-5\">\n        <v-form\n          v-model=\"valid\"\n          @keyup.native.enter=\"\n            updateInsertScenario();\n            show = false;\n          \"\n          @submit.prevent=\"show = false\"\n          lazy-validation\n        >\n          <v-text-field\n            :rules=\"[rules.required, rules.counter]\"\n            v-model=\"scenarioName\"\n            :label=\"$t('appBar.edit.ScenarioName')\"\n            maxlength=\"50\"\n            lazy-validation\n          ></v-text-field>\n        </v-form>\n      </v-card-text>\n\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          color=\"primary darken-1\"\n          text\n          :disabled=\"!valid\"\n          @click.native=\"\n            updateInsertScenario();\n            show = false;\n          \"\n          >Ok</v-btn\n        >\n        <v-btn color=\"#dc143c\" text @click.native=\"show = false\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapFields } from \"vuex-map-fields\";\nimport { mapGetters } from \"vuex\";\nimport ApiService from \"../../services/api.service\";\nimport { GET_SCENARIOS } from \"../../store/actions.type\";\n\nexport default {\n  props: [\"visible\", \"scenarioId\"],\n  data: () => ({\n    valid: false,\n    scenarioName: \"\",\n    rules: {\n      required: value => !!value || \"Required.\",\n      counter: value => value.length < 50 || \"Max 50 characters\"\n    }\n  }),\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n        }\n      }\n    },\n    ...mapFields(\"scenarios\", {\n      scenarios: \"scenarios\",\n      activeScenario: \"activeScenario\"\n    }),\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    })\n  },\n  methods: {\n    updateInsertScenario() {\n      const scenarioName = this.scenarioName;\n      const activeScenarioId = this.scenarioId;\n      const payload = {\n        scenario_name: scenarioName\n      };\n      let promise;\n      if (activeScenarioId) {\n        promise = ApiService.put(`/scenarios/${activeScenarioId}`, payload);\n      } else {\n        promise = ApiService.post(\"/scenarios\", payload);\n      }\n\n      promise\n        .then(response => {\n          if (response.status === 200) {\n            this.$store.dispatch(`scenarios/${GET_SCENARIOS}`);\n            let scenarioId = activeScenarioId || response.data.id;\n            scenarioId = parseInt(scenarioId);\n            this.activeScenario = scenarioId;\n          }\n        })\n        .catch(function(error) {\n          throw new Error(error);\n        });\n    }\n  },\n  watch: {\n    show() {\n      if (this.show === true) {\n        if (this.scenarioId) {\n          this.scenarios.forEach(scenario => {\n            if (scenario.id === this.scenarioId) {\n              this.scenarioName = scenario.scenario_name;\n            }\n          });\n        } else {\n          let id = this.scenarios.length;\n          if (id > 0) {\n            id += 1;\n            this.scenarioName = this.$t(\"appBar.edit.scenario\") + \" \" + id;\n          } else {\n            this.scenarioName = this.$t(\"appBar.edit.scenario\") + \" 1\";\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.v-card__text,\n.v-card__title {\n  word-break: normal !important;\n}\n</style>\n"],"sourceRoot":"src/components/core"}]}