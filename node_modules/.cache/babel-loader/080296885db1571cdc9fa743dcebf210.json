{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js??ref--13-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/controllers/OlEditController.js","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/controllers/OlEditController.js","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js","mtime":1657636581253}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport OlBaseController from \"./OlBaseController\";\nimport { Modify, Draw, Snap, Translate } from \"ol/interaction\";\nimport SnapGuides from \"ol-ext/interaction/SnapGuides\";\nimport DrawHole from \"ol-ext/interaction/DrawHole\";\nimport VectorImageLayer from \"ol/layer/VectorImage\";\nimport Overlay from \"ol/Overlay.js\";\nimport { unByKey } from \"ol/Observable\";\nimport i18n from \"../../src/plugins/i18n\";\n/**\n * Class holding the OpenLayers related logic for the edit tool.\n */\n\nvar OlEditController =\n/*#__PURE__*/\nfunction (_OlBaseController) {\n  _inherits(OlEditController, _OlBaseController);\n\n  function OlEditController(map) {\n    var _this;\n\n    _classCallCheck(this, OlEditController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OlEditController).call(this, map));\n\n    _defineProperty(_assertThisInitialized(_this), \"isSnapGuideActive\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isInteractionOnProgress\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"selectedLayer\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"originIdName\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"highlightSource\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"bldEntranceLayer\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"popup\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"editType\", null);\n\n    return _this;\n  }\n  /**\n   * Creates the edit interaction and adds it to the map.\n   */\n\n\n  _createClass(OlEditController, [{\n    key: \"addInteraction\",\n    value: function addInteraction(editType, startCb, endCb) {\n      var me = this; // cleanup possible old edit interaction\n\n      me.removeInteraction();\n      me.createHelpTooltip();\n      me.pointerMoveKey = me.map.on(\"pointermove\", me.onPointerMove.bind(me));\n      me.createPopupOverlay();\n\n      switch (editType) {\n        case \"add\":\n          {\n            var geometryType = this.selectedLayer[\"editGeometry\"];\n            me.edit = new Draw({\n              type: geometryType[0]\n            });\n            me.edit.on(\"drawstart\", startCb);\n            me.edit.on(\"drawend\", endCb);\n\n            if (this.selectedLayer[\"name\"] !== \"poi\") {\n              me.snap = new Snap({\n                source: me.source\n              });\n            }\n\n            me.currentInteraction = \"draw\";\n            me.helpMessage = i18n.t([\"Point\"].some(function (r) {\n              return geometryType.includes(r);\n            }) ? \"map.tooltips.clickToPlacePoint\" : \"map.tooltips.clickToStartDrawing\");\n\n            if (![\"Point\", \"LineString\"].some(function (r) {\n              return geometryType.includes(r);\n            })) {\n              me.isSnapGuideActive = 1;\n            } else {\n              me.isSnapGuideActive = 0;\n            }\n\n            break;\n          }\n\n        case \"modify\":\n          {\n            me.edit = new Modify({\n              source: me.source\n            });\n            me.edit.on(\"modifystart\", startCb);\n            me.edit.on(\"modifyend\", endCb);\n            me.snap = new Snap({\n              source: me.source\n            });\n            me.currentInteraction = \"modify\";\n            me.helpMessage = i18n.t(\"map.tooltips.clickAndDragToModify\");\n            break;\n          }\n\n        case \"addBldEntrance\":\n          {\n            me.edit = new Draw({\n              type: \"Point\",\n              condition: function condition(evt) {\n                // when the point's button is 1(leftclick), allows drawing\n                if (evt.originalEvent.buttons === 1) {\n                  return true;\n                } else {\n                  return false;\n                }\n              }\n            });\n            me.edit.on(\"drawend\", endCb);\n            me.modify = new Modify({\n              source: me.bldEntranceLayer.getSource()\n            });\n            me.modify.on(\"modifyend\", endCb);\n            me.snap = new Snap({\n              source: me.source,\n              pixelTolerance: 4\n            });\n            me.helpMessage = i18n.t(\"map.tooltips.clickToBldEntrance\");\n            me.currentInteraction = \"addBldEntrance\";\n            break;\n          }\n\n        case \"modifyAttributes\":\n          {\n            me.currentInteraction = \"modifyAttributes\";\n            me.modifyAttributeLister = me.map.on(\"click\", startCb);\n            me.helpMessage = i18n.t(\"map.tooltips.clickToModifyAttributes\");\n            break;\n          }\n\n        case \"delete\":\n          {\n            me.currentInteraction = \"delete\";\n            me.deleteFeatureListener = me.map.on(\"click\", endCb);\n            me.helpMessage = i18n.t(\"map.tooltips.clickOnFeatureToDelete\");\n            break;\n          }\n\n        case \"move\":\n          {\n            me.currentInteraction = \"move\";\n            me.edit = new Translate({\n              layers: [me.layer]\n            });\n            me.edit.on(\"translatestart\", startCb);\n            me.edit.on(\"translateend\", endCb);\n            me.helpMessage = i18n.t(\"map.tooltips.clickOnFeatureToMove\");\n            break;\n          }\n\n        case \"drawHole\":\n          {\n            me.currentInteraction = \"drawHole\";\n            me.edit = new DrawHole({\n              layers: [me.layer]\n            });\n            me.edit.on(\"modifystart\", startCb);\n            me.edit.on(\"modifyend\", endCb);\n            me.helpMessage = i18n.t(\"map.tooltips.drawHoleOnPolygon\");\n            me.isSnapGuideActive = 1;\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      if (me.edit) {\n        me.map.addInteraction(me.edit);\n\n        if (this.isSnapGuideActive) {\n          me.addSnapGuideInteraction();\n        }\n      }\n\n      if (me.snap) {\n        me.map.addInteraction(me.snap);\n      }\n\n      if (me.modify) {\n        me.map.addInteraction(me.modify);\n      }\n    }\n    /**\n     * Event for updating the edit help tooltip\n     */\n\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(evt) {\n      var me = this; //Hide helptooltip if mouse is over popoverlay\n\n      if (me.popupOverlay.getPosition() !== undefined) {\n        me.helpTooltip.setPosition(undefined);\n        return;\n      }\n\n      if (me.contextmenu && me.contextmenu.isOpen()) {\n        me.helpTooltip.setPosition(undefined);\n        return;\n      }\n\n      var coordinate = evt.coordinate;\n      me.helpTooltipElement.innerHTML = me.helpMessage;\n      me.helpTooltip.setPosition(coordinate);\n\n      if ([\"addBldEntrance\", \"move\", \"modify\", \"drawHole\"].includes(this.currentInteraction)) {\n        if (this.selectedLayer[\"name\"] === \"poi\") {\n          var featureAtCoord = this.source.getClosestFeatureToCoordinate(evt.coordinate);\n\n          if (featureAtCoord && featureAtCoord.get(\"edit_type\") === \"d\" && me.isInteractionOnProgress === false) {\n            me.edit.setActive(false);\n          } else {\n            me.edit.setActive(true);\n          }\n\n          return;\n        }\n\n        if (this.selectedLayer[\"name\"] === \"building\") {\n          var buildingFeaturesAtCoord = this.source.getFeaturesAtCoordinate(evt.coordinate);\n\n          if (buildingFeaturesAtCoord.length === 0 || buildingFeaturesAtCoord.length > 0 && buildingFeaturesAtCoord[0].getProperties().edit_type !== \"n\") {\n            me.map.getTarget().style.cursor = \"not-allowed\";\n\n            if (me.isInteractionOnProgress === false) {\n              me.edit.setActive(false);\n            } else {\n              return;\n            }\n\n            if (this.currentInteraction === \"addBldEntrance\") {\n              me.helpMessage = i18n.t(\"map.tooltips.clickToBldEntranceNotAllowed\");\n            }\n\n            if (this.currentInteraction === \"move\") {\n              me.helpMessage = i18n.t(\"map.tooltips.moveExistingBuildingNotAllowed\");\n            }\n\n            if (this.currentInteraction === \"modify\") {\n              me.helpMessage = i18n.t(\"map.tooltips.modifyExistingBuildingNotAllowed\");\n            }\n\n            if (this.currentInteraction === \"drawHole\") {\n              me.helpMessage = i18n.t(\"map.tooltips.drawHoleOnPolygonNotAllowed\");\n            }\n          } else {\n            if (this.currentInteraction === \"addBldEntrance\") {\n              me.helpMessage = i18n.t(\"map.tooltips.clickToBldEntrance\");\n            }\n\n            if (this.currentInteraction === \"move\") {\n              me.helpMessage = i18n.t(\"map.tooltips.clickOnFeatureToMove\");\n            }\n\n            if (this.currentInteraction === \"modify\") {\n              me.helpMessage = i18n.t(\"map.tooltips.clickAndDragToModify\");\n            }\n\n            if (this.currentInteraction === \"drawHole\") {\n              me.helpMessage = i18n.t(\"map.tooltips.drawHoleOnPolygon\");\n            }\n\n            me.map.getTarget().style.cursor = \"pointer\";\n            me.edit.setActive(true);\n          }\n        }\n      }\n    }\n    /**\n     * Show popup when user deletes or draws a feature.\n     */\n\n  }, {\n    key: \"createPopupOverlay\",\n    value: function createPopupOverlay() {\n      var me = this;\n      me.popupOverlay = new Overlay({\n        element: me.popup.el.$el,\n        autoPan: true,\n        autoPanMargin: 40,\n        positioning: \"bottom-left\",\n        autoPanAnimation: {\n          duration: 250\n        }\n      });\n      me.map.addOverlay(me.popupOverlay);\n      me.overlayersGarbageCollector.push(me.popupOverlay);\n    }\n    /**\n     * Removes the current edit interaction.\n     */\n\n  }, {\n    key: \"removeInteraction\",\n    value: function removeInteraction() {\n      var me = this;\n      me.currentInteraction = \"\";\n      me.removeSnapGuideInteraction();\n\n      if (me.edit) {\n        me.map.removeInteraction(me.edit);\n        me.edit = null;\n      }\n\n      if (me.snap) {\n        me.map.removeInteraction(me.snap);\n        me.snap = null;\n      }\n\n      if (me.modify) {\n        me.map.removeInteraction(me.modify);\n        me.modify = null;\n      }\n\n      if (me.deleteFeatureListener) {\n        unByKey(me.deleteFeatureListener);\n      }\n\n      if (me.modifyAttributeLister) {\n        unByKey(me.modifyAttributeLister);\n      }\n\n      if (me.selectedFeature) {\n        me.selectedFeature = null;\n      }\n\n      if (me.pointerMoveKey) {\n        unByKey(me.pointerMoveKey);\n      }\n\n      if (me.clearOverlays) {\n        me.clearOverlays();\n      }\n    }\n    /**\n     * Add snap interaction (aka guide lines) used for building\n     */\n\n  }, {\n    key: \"addSnapGuideInteraction\",\n    value: function addSnapGuideInteraction() {\n      var _this2 = this;\n\n      // Only for draw and edit\n      this.removeSnapGuideInteraction();\n\n      if (this.edit && (this.edit instanceof Draw || this.edit instanceof Modify)) {\n        var snapi = new SnapGuides({\n          vectorClass: VectorImageLayer\n        });\n\n        if (this.edit instanceof Draw) {\n          snapi.setDrawInteraction(this.edit);\n        } else {\n          if ([\"Polygon\"].some(function (r) {\n            return _this2.selectedLayer[\"editGeometry\"].includes(r);\n          })) {\n            snapi.setModifyInteraction(this.edit);\n          }\n        }\n\n        this.map.addInteraction(snapi);\n        this.snapGuideInteraction = snapi;\n      }\n    }\n    /**\n     * Remove snap interaction (aka guide lines) used for building\n     */\n\n  }, {\n    key: \"removeSnapGuideInteraction\",\n    value: function removeSnapGuideInteraction() {\n      if (this.snapGuideInteraction) {\n        this.map.removeInteraction(this.snapGuideInteraction);\n      }\n    }\n  }]);\n\n  return OlEditController;\n}(OlBaseController);\n\nexport { OlEditController as default };",{"version":3,"sources":["/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/controllers/OlEditController.js"],"names":["OlBaseController","Modify","Draw","Snap","Translate","SnapGuides","DrawHole","VectorImageLayer","Overlay","unByKey","i18n","OlEditController","map","editType","startCb","endCb","me","removeInteraction","createHelpTooltip","pointerMoveKey","on","onPointerMove","bind","createPopupOverlay","geometryType","selectedLayer","edit","type","snap","source","currentInteraction","helpMessage","t","some","r","includes","isSnapGuideActive","condition","evt","originalEvent","buttons","modify","bldEntranceLayer","getSource","pixelTolerance","modifyAttributeLister","deleteFeatureListener","layers","layer","addInteraction","addSnapGuideInteraction","popupOverlay","getPosition","undefined","helpTooltip","setPosition","contextmenu","isOpen","coordinate","helpTooltipElement","innerHTML","featureAtCoord","getClosestFeatureToCoordinate","get","isInteractionOnProgress","setActive","buildingFeaturesAtCoord","getFeaturesAtCoordinate","length","getProperties","edit_type","getTarget","style","cursor","element","popup","el","$el","autoPan","autoPanMargin","positioning","autoPanAnimation","duration","addOverlay","overlayersGarbageCollector","push","removeSnapGuideInteraction","selectedFeature","clearOverlays","snapi","vectorClass","setDrawInteraction","setModifyInteraction","snapGuideInteraction"],"mappings":"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","sourcesContent":["import OlBaseController from \"./OlBaseController\";\nimport { Modify, Draw, Snap, Translate } from \"ol/interaction\";\nimport SnapGuides from \"ol-ext/interaction/SnapGuides\";\nimport DrawHole from \"ol-ext/interaction/DrawHole\";\nimport VectorImageLayer from \"ol/layer/VectorImage\";\nimport Overlay from \"ol/Overlay.js\";\nimport { unByKey } from \"ol/Observable\";\nimport i18n from \"../../src/plugins/i18n\";\n\n/**\n * Class holding the OpenLayers related logic for the edit tool.\n */\nexport default class OlEditController extends OlBaseController {\n  isSnapGuideActive = 0;\n  isInteractionOnProgress = false;\n  selectedLayer = null;\n  originIdName = null;\n  highlightSource = null;\n  bldEntranceLayer = null;\n  popup = null;\n  editType = null;\n  constructor(map) {\n    super(map);\n  }\n\n  /**\n   * Creates the edit interaction and adds it to the map.\n   */\n  addInteraction(editType, startCb, endCb) {\n    const me = this;\n    // cleanup possible old edit interaction\n    me.removeInteraction();\n    me.createHelpTooltip();\n    me.pointerMoveKey = me.map.on(\"pointermove\", me.onPointerMove.bind(me));\n    me.createPopupOverlay();\n    switch (editType) {\n      case \"add\": {\n        let geometryType = this.selectedLayer[\"editGeometry\"];\n        me.edit = new Draw({\n          type: geometryType[0]\n        });\n        me.edit.on(\"drawstart\", startCb);\n        me.edit.on(\"drawend\", endCb);\n        if (this.selectedLayer[\"name\"] !== \"poi\") {\n          me.snap = new Snap({ source: me.source });\n        }\n        me.currentInteraction = \"draw\";\n\n        me.helpMessage = i18n.t(\n          [\"Point\"].some(r => geometryType.includes(r))\n            ? \"map.tooltips.clickToPlacePoint\"\n            : \"map.tooltips.clickToStartDrawing\"\n        );\n\n        if (![\"Point\", \"LineString\"].some(r => geometryType.includes(r))) {\n          me.isSnapGuideActive = 1;\n        } else {\n          me.isSnapGuideActive = 0;\n        }\n        break;\n      }\n      case \"modify\": {\n        me.edit = new Modify({ source: me.source });\n        me.edit.on(\"modifystart\", startCb);\n        me.edit.on(\"modifyend\", endCb);\n        me.snap = new Snap({ source: me.source });\n        me.currentInteraction = \"modify\";\n        me.helpMessage = i18n.t(\"map.tooltips.clickAndDragToModify\");\n        break;\n      }\n      case \"addBldEntrance\": {\n        me.edit = new Draw({\n          type: \"Point\",\n          condition: function(evt) {\n            // when the point's button is 1(leftclick), allows drawing\n            if (evt.originalEvent.buttons === 1) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        });\n        me.edit.on(\"drawend\", endCb);\n        me.modify = new Modify({\n          source: me.bldEntranceLayer.getSource()\n        });\n        me.modify.on(\"modifyend\", endCb);\n        me.snap = new Snap({\n          source: me.source,\n          pixelTolerance: 4\n        });\n        me.helpMessage = i18n.t(\"map.tooltips.clickToBldEntrance\");\n        me.currentInteraction = \"addBldEntrance\";\n        break;\n      }\n      case \"modifyAttributes\": {\n        me.currentInteraction = \"modifyAttributes\";\n        me.modifyAttributeLister = me.map.on(\"click\", startCb);\n        me.helpMessage = i18n.t(\"map.tooltips.clickToModifyAttributes\");\n        break;\n      }\n      case \"delete\": {\n        me.currentInteraction = \"delete\";\n        me.deleteFeatureListener = me.map.on(\"click\", endCb);\n        me.helpMessage = i18n.t(\"map.tooltips.clickOnFeatureToDelete\");\n        break;\n      }\n      case \"move\": {\n        me.currentInteraction = \"move\";\n        me.edit = new Translate({ layers: [me.layer] });\n        me.edit.on(\"translatestart\", startCb);\n        me.edit.on(\"translateend\", endCb);\n        me.helpMessage = i18n.t(\"map.tooltips.clickOnFeatureToMove\");\n        break;\n      }\n      case \"drawHole\": {\n        me.currentInteraction = \"drawHole\";\n        me.edit = new DrawHole({ layers: [me.layer] });\n        me.edit.on(\"modifystart\", startCb);\n        me.edit.on(\"modifyend\", endCb);\n        me.helpMessage = i18n.t(\"map.tooltips.drawHoleOnPolygon\");\n        me.isSnapGuideActive = 1;\n        break;\n      }\n      default:\n        break;\n    }\n    if (me.edit) {\n      me.map.addInteraction(me.edit);\n      if (this.isSnapGuideActive) {\n        me.addSnapGuideInteraction();\n      }\n    }\n    if (me.snap) {\n      me.map.addInteraction(me.snap);\n    }\n    if (me.modify) {\n      me.map.addInteraction(me.modify);\n    }\n  }\n\n  /**\n   * Event for updating the edit help tooltip\n   */\n  onPointerMove(evt) {\n    const me = this;\n    //Hide helptooltip if mouse is over popoverlay\n    if (me.popupOverlay.getPosition() !== undefined) {\n      me.helpTooltip.setPosition(undefined);\n      return;\n    }\n    if (me.contextmenu && me.contextmenu.isOpen()) {\n      me.helpTooltip.setPosition(undefined);\n      return;\n    }\n\n    const coordinate = evt.coordinate;\n    me.helpTooltipElement.innerHTML = me.helpMessage;\n    me.helpTooltip.setPosition(coordinate);\n    if (\n      [\"addBldEntrance\", \"move\", \"modify\", \"drawHole\"].includes(\n        this.currentInteraction\n      )\n    ) {\n      if (this.selectedLayer[\"name\"] === \"poi\") {\n        const featureAtCoord = this.source.getClosestFeatureToCoordinate(\n          evt.coordinate\n        );\n        if (\n          featureAtCoord &&\n          featureAtCoord.get(\"edit_type\") === \"d\" &&\n          me.isInteractionOnProgress === false\n        ) {\n          me.edit.setActive(false);\n        } else {\n          me.edit.setActive(true);\n        }\n        return;\n      }\n\n      if (this.selectedLayer[\"name\"] === \"building\") {\n        const buildingFeaturesAtCoord = this.source.getFeaturesAtCoordinate(\n          evt.coordinate\n        );\n        if (\n          buildingFeaturesAtCoord.length === 0 ||\n          (buildingFeaturesAtCoord.length > 0 &&\n            buildingFeaturesAtCoord[0].getProperties().edit_type !== \"n\")\n        ) {\n          me.map.getTarget().style.cursor = \"not-allowed\";\n          if (me.isInteractionOnProgress === false) {\n            me.edit.setActive(false);\n          } else {\n            return;\n          }\n          if (this.currentInteraction === \"addBldEntrance\") {\n            me.helpMessage = i18n.t(\n              \"map.tooltips.clickToBldEntranceNotAllowed\"\n            );\n          }\n          if (this.currentInteraction === \"move\") {\n            me.helpMessage = i18n.t(\n              \"map.tooltips.moveExistingBuildingNotAllowed\"\n            );\n          }\n          if (this.currentInteraction === \"modify\") {\n            me.helpMessage = i18n.t(\n              \"map.tooltips.modifyExistingBuildingNotAllowed\"\n            );\n          }\n          if (this.currentInteraction === \"drawHole\") {\n            me.helpMessage = i18n.t(\"map.tooltips.drawHoleOnPolygonNotAllowed\");\n          }\n        } else {\n          if (this.currentInteraction === \"addBldEntrance\") {\n            me.helpMessage = i18n.t(\"map.tooltips.clickToBldEntrance\");\n          }\n          if (this.currentInteraction === \"move\") {\n            me.helpMessage = i18n.t(\"map.tooltips.clickOnFeatureToMove\");\n          }\n          if (this.currentInteraction === \"modify\") {\n            me.helpMessage = i18n.t(\"map.tooltips.clickAndDragToModify\");\n          }\n          if (this.currentInteraction === \"drawHole\") {\n            me.helpMessage = i18n.t(\"map.tooltips.drawHoleOnPolygon\");\n          }\n          me.map.getTarget().style.cursor = \"pointer\";\n          me.edit.setActive(true);\n        }\n      }\n    }\n  }\n\n  /**\n   * Show popup when user deletes or draws a feature.\n   */\n  createPopupOverlay() {\n    const me = this;\n    me.popupOverlay = new Overlay({\n      element: me.popup.el.$el,\n      autoPan: true,\n      autoPanMargin: 40,\n      positioning: \"bottom-left\",\n      autoPanAnimation: {\n        duration: 250\n      }\n    });\n    me.map.addOverlay(me.popupOverlay);\n    me.overlayersGarbageCollector.push(me.popupOverlay);\n  }\n\n  /**\n   * Removes the current edit interaction.\n   */\n  removeInteraction() {\n    const me = this;\n    me.currentInteraction = \"\";\n    me.removeSnapGuideInteraction();\n    if (me.edit) {\n      me.map.removeInteraction(me.edit);\n      me.edit = null;\n    }\n    if (me.snap) {\n      me.map.removeInteraction(me.snap);\n      me.snap = null;\n    }\n    if (me.modify) {\n      me.map.removeInteraction(me.modify);\n      me.modify = null;\n    }\n    if (me.deleteFeatureListener) {\n      unByKey(me.deleteFeatureListener);\n    }\n    if (me.modifyAttributeLister) {\n      unByKey(me.modifyAttributeLister);\n    }\n    if (me.selectedFeature) {\n      me.selectedFeature = null;\n    }\n    if (me.pointerMoveKey) {\n      unByKey(me.pointerMoveKey);\n    }\n    if (me.clearOverlays) {\n      me.clearOverlays();\n    }\n  }\n\n  /**\n   * Add snap interaction (aka guide lines) used for building\n   */\n  addSnapGuideInteraction() {\n    // Only for draw and edit\n    this.removeSnapGuideInteraction();\n    if (\n      this.edit &&\n      (this.edit instanceof Draw || this.edit instanceof Modify)\n    ) {\n      const snapi = new SnapGuides({\n        vectorClass: VectorImageLayer\n      });\n\n      if (this.edit instanceof Draw) {\n        snapi.setDrawInteraction(this.edit);\n      } else {\n        if (\n          [\"Polygon\"].some(r => this.selectedLayer[\"editGeometry\"].includes(r))\n        ) {\n          snapi.setModifyInteraction(this.edit);\n        }\n      }\n      this.map.addInteraction(snapi);\n      this.snapGuideInteraction = snapi;\n    }\n  }\n\n  /**\n   * Remove snap interaction (aka guide lines) used for building\n   */\n  removeSnapGuideInteraction() {\n    if (this.snapGuideInteraction) {\n      this.map.removeInteraction(this.snapGuideInteraction);\n    }\n  }\n}\n"]}]}