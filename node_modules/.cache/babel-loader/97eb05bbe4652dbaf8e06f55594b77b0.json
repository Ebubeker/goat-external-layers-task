{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/changeStyle/IconVectorStyle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/changeStyle/IconVectorStyle.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport { debounce } from \"../../../utils/Helpers\";\nimport Legend from \"../../viewer/ol/controls/Legend\";\nexport default {\n  props: [\"item\", \"ruleIndex\"],\n  mixins: [Legend],\n  data: function data() {\n    return {\n      isExpanded: true,\n      tab: null,\n      dialogue: false,\n      iconSize: null,\n      urlIcon: null,\n      localIcon: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters(\"app\", {\n    appColor: \"appColor\"\n  }), {}, mapFields(\"map\", {\n    vectorTileStyles: \"vectorTileStyles\",\n    vectorTileStylesCopy: \"vectorTileStylesCopy\"\n  }), {\n    style: function style() {\n      return this.filterStylesOnActiveModeByLayerName(this.item.get(\"name\")).rules[this.ruleIndex];\n    }\n  }),\n  created: function created() {\n    this.dialogue = !this.dialogue;\n    this.iconSize = this.style.symbolizers[0].size;\n  },\n  methods: {\n    expand: function expand() {\n      this.isExpanded = !this.isExpanded;\n    },\n    close: function close() {\n      this.dialogue = false; //Refresh the legend\n\n      this.item.set(\"layerTreeKey\", this.item.get(\"layerTreeKey\") + 1);\n    },\n    updateLegendRow: debounce(function () {\n      this.item.set(\"attributeDisplayStatusKey\", this.item.get(\"attributeDisplayStatusKey\") + 1);\n    }, 60),\n    resetStyle: function resetStyle() {\n      /*\n        Function to reset the style of layer at attribute level\n      */\n      this.urlIcon = null;\n      this.localIcon = null; //Get original style for layer attribute\n\n      var sourceStyle = this.vectorTileStylesCopy[this.item.get(\"name\")].style.rules[this.ruleIndex]; //Get present stylefor layer attribute\n\n      var targetStyle = this.vectorTileStyles[this.item.get(\"name\")].style.rules[this.ruleIndex]; //Assign original style to present style to reset\n\n      targetStyle.symbolizers[0].size = sourceStyle.symbolizers[0].size;\n      targetStyle.symbolizers[0].image = sourceStyle.symbolizers[0].image;\n      this.iconSize = sourceStyle.symbolizers[0].size;\n      this.item.getSource().changed();\n      this.updateLegendRow();\n    },\n    onIconSizeChange: function onIconSizeChange() {\n      //Change icon size on input change event\n      if (this.iconSize == 0) {\n        this.style.symbolizers[0].size = 0.001;\n      } else {\n        this.style.symbolizers[0].size = Number(this.iconSize);\n      }\n\n      this.item.getSource().changed();\n      this.updateLegendRow();\n    },\n    localUpload: function localUpload(value) {\n      var _this = this;\n\n      //Upload new icon from local\n      this.urlIcon = null;\n\n      if (value) {\n        var reader = new FileReader();\n        reader.readAsDataURL(value);\n\n        reader.onload = function (e) {\n          var icon = e.target.result;\n          _this.style.symbolizers[0].image = icon;\n\n          _this.item.getSource().changed();\n\n          _this.updateLegendRow();\n        };\n      }\n    },\n    urlUpload: function urlUpload(value) {\n      //Upload new icon from URL\n      if (value) {\n        this.style.symbolizers[0].image = value;\n        this.item.getSource().changed();\n        this.updateLegendRow();\n      }\n    }\n  }\n};",{"version":3,"sources":["IconVectorStyle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <vue-scroll>\n    <v-tabs grow v-model=\"tab\" style=\"width: 400px; margin:auto;\">\n      <v-tab :key=\"1\">\n        <v-badge>\n          <b>Change Icon Size</b>\n        </v-badge>\n      </v-tab>\n      <v-tab :key=\"2\">\n        <v-badge>\n          <b>Change Icon</b>\n        </v-badge>\n      </v-tab>\n    </v-tabs>\n    <v-tabs-items v-model=\"tab\">\n      <v-tab-item :key=\"1\">\n        <span\n          class=\"d-flex mb-6\"\n          style=\"width:400px;margin:10px auto 0px auto;\"\n        >\n          <v-text-field\n            type=\"number\"\n            :min=\"0\"\n            :step=\"0.1\"\n            outlined\n            tile\n            v-model=\"iconSize\"\n            label=\"Icon Size\"\n            style=\"height:50px;\"\n            @input=\"onIconSizeChange()\"\n          ></v-text-field>\n        </span>\n      </v-tab-item>\n      <v-tab-item :key=\"2\" style=\"padding-top:10px;\">\n        <v-file-input\n          append-outer-icon\n          outlined\n          tile\n          v-model=\"localIcon\"\n          label=\"Local Upload\"\n          @change=\"localUpload($event)\"\n          style=\"width:300px;margin-left:50px;\"\n        ></v-file-input>\n        <span class=\"d-flex mb-6\" style=\"width:350px;\">\n          <v-icon style=\"padding-left:53px;padding-bottom:30px;font-size:20px;\">\n            fas fa-link\n          </v-icon>\n          <v-text-field\n            outlined\n            tile\n            v-model=\"urlIcon\"\n            label=\"Url Upload\"\n            style=\"padding-left: 12px;\"\n            @input=\"urlUpload($event)\"\n          ></v-text-field>\n        </span>\n      </v-tab-item>\n    </v-tabs-items>\n    <v-btn\n      color=\"warning\"\n      dark\n      @click=\"resetStyle\"\n      style=\"width:100%;background-color: #2bb381 !important;\"\n    >\n      Reset Style\n    </v-btn>\n  </vue-scroll>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport { debounce } from \"../../../utils/Helpers\";\nimport Legend from \"../../viewer/ol/controls/Legend\";\n\nexport default {\n  props: [\"item\", \"ruleIndex\"],\n  mixins: [Legend],\n  data: () => ({\n    isExpanded: true,\n    tab: null,\n    dialogue: false,\n    iconSize: null,\n    urlIcon: null,\n    localIcon: null\n  }),\n  computed: {\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    }),\n    ...mapFields(\"map\", {\n      vectorTileStyles: \"vectorTileStyles\",\n      vectorTileStylesCopy: \"vectorTileStylesCopy\"\n    }),\n    style() {\n      return this.filterStylesOnActiveModeByLayerName(this.item.get(\"name\"))\n        .rules[this.ruleIndex];\n    }\n  },\n  created() {\n    this.dialogue = !this.dialogue;\n    this.iconSize = this.style.symbolizers[0].size;\n  },\n  methods: {\n    expand() {\n      this.isExpanded = !this.isExpanded;\n    },\n    close() {\n      this.dialogue = false;\n      //Refresh the legend\n      this.item.set(\"layerTreeKey\", this.item.get(\"layerTreeKey\") + 1);\n    },\n    updateLegendRow: debounce(function() {\n      this.item.set(\n        \"attributeDisplayStatusKey\",\n        this.item.get(\"attributeDisplayStatusKey\") + 1\n      );\n    }, 60),\n    resetStyle() {\n      /*\n        Function to reset the style of layer at attribute level\n      */\n\n      this.urlIcon = null;\n      this.localIcon = null;\n\n      //Get original style for layer attribute\n      let sourceStyle = this.vectorTileStylesCopy[this.item.get(\"name\")].style\n        .rules[this.ruleIndex];\n\n      //Get present stylefor layer attribute\n      let targetStyle = this.vectorTileStyles[this.item.get(\"name\")].style\n        .rules[this.ruleIndex];\n\n      //Assign original style to present style to reset\n      targetStyle.symbolizers[0].size = sourceStyle.symbolizers[0].size;\n      targetStyle.symbolizers[0].image = sourceStyle.symbolizers[0].image;\n      this.iconSize = sourceStyle.symbolizers[0].size;\n      this.item.getSource().changed();\n      this.updateLegendRow();\n    },\n    onIconSizeChange() {\n      //Change icon size on input change event\n      if (this.iconSize == 0) {\n        this.style.symbolizers[0].size = 0.001;\n      } else {\n        this.style.symbolizers[0].size = Number(this.iconSize);\n      }\n      this.item.getSource().changed();\n      this.updateLegendRow();\n    },\n    localUpload(value) {\n      //Upload new icon from local\n      this.urlIcon = null;\n      if (value) {\n        const reader = new FileReader();\n        reader.readAsDataURL(value);\n        reader.onload = e => {\n          let icon = e.target.result;\n          this.style.symbolizers[0].image = icon;\n          this.item.getSource().changed();\n          this.updateLegendRow();\n        };\n      }\n    },\n    urlUpload(value) {\n      //Upload new icon from URL\n      if (value) {\n        this.style.symbolizers[0].image = value;\n        this.item.getSource().changed();\n        this.updateLegendRow();\n      }\n    }\n  }\n};\n</script>\n<style>\n.v-dialog {\n  box-shadow: none;\n}\n</style>\n"],"sourceRoot":"src/components/layers/changeStyle"}]}