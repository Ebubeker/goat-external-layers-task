{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js??ref--13-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/style/OlStyleDefs.js","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/style/OlStyleDefs.js","mtime":1657636289863},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/eslint-loader/index.js","mtime":1657636581253}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport OlStyle from \"ol/style/Style\";\nimport OlStroke from \"ol/style/Stroke\";\nimport OlFill from \"ol/style/Fill\";\nimport OlCircle from \"ol/style/Circle\";\nimport OlIcon from \"ol/style/Icon\";\nimport OlText from \"ol/style/Text\";\nimport OlFontSymbol from \"../utils/FontSymbol\";\nimport OlShadow from \"../utils/Shadow\";\nimport poisAoisStore from \"../store/modules/poisaois\";\nimport mapStore from \"../store/modules/map\";\nimport appStore from \"../store/modules/app\";\nimport { FA_DEFINITIONS } from \"../utils/FontAwesomev6ProDefs\";\nimport { getIconUnicode } from \"../utils/Helpers\";\nimport Point from \"ol/geom/Point\";\nimport { getArea } from \"ol/sphere.js\";\nimport i18n from \"../../src/plugins/i18n\";\nOlFontSymbol.addDefs({\n  font: process.env.VUE_APP_FONTAWESOME_NPM_AUTH_TOKEN ? \"'Font Awesome 6 Pro'\" : \"'Font Awesome 5 Free'\",\n  name: \"FontAwesome\",\n  prefix: \"\"\n}, FA_DEFINITIONS);\nvar CUSTOM_FA_DEFS = {};\n\nif (window.FontAwesomeKitConfig && window.FontAwesomeKitConfig.iconUploads) {\n  var iconNames = Object.keys(window.FontAwesomeKitConfig.iconUploads);\n  iconNames.forEach(function (iconName) {\n    var unicode = window.FontAwesomeKitConfig.iconUploads[iconName].u;\n\n    if (unicode) {\n      CUSTOM_FA_DEFS[\"fak fa-\".concat(iconName)] = getIconUnicode(\"fak fa-\".concat(iconName));\n    }\n  });\n}\n\nOlFontSymbol.addDefs({\n  font: \"Font Awesome Kit\",\n  name: \"Font Awesome Kit\",\n  prefix: \"\"\n}, CUSTOM_FA_DEFS);\nexport function getMeasureStyle(measureConf) {\n  return new OlStyle({\n    fill: new OlFill({\n      color: measureConf.fillColor || \"rgba(255, 255, 255, 0.2)\"\n    }),\n    stroke: new OlStroke({\n      color: measureConf.strokeColor || \"rgba(0, 0, 0, 0.5)\",\n      width: 4\n    })\n  });\n}\nexport function getMeasureInteractionStyle(measureConf) {\n  return new OlStyle({\n    fill: new OlFill({\n      color: measureConf.sketchFillColor || \"rgba(255, 255, 255, 0.2)\"\n    }),\n    stroke: new OlStroke({\n      color: measureConf.sketchStrokeColor || \"rgba(0, 0, 0, 0.5)\",\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new OlCircle({\n      radius: 5,\n      stroke: new OlStroke({\n        color: measureConf.sketchVertexStrokeColor || \"rgba(0, 0, 0, 0.7)\"\n      }),\n      fill: new OlFill({\n        color: measureConf.sketchVertexFillColor || \"rgba(255, 255, 255, 0.2)\"\n      })\n    })\n  });\n}\nexport function getSelectStyle() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: [0, 0, 0, 0]\n    }),\n    stroke: new OlStroke({\n      color: \"#fe4a49\",\n      width: 5,\n      lineDash: [10, 10]\n    }),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#FF0000\"\n      })\n    })\n  });\n}\nexport function getSearchHighlightStyle() {\n  return [new OlStyle({\n    fill: new OlFill({\n      color: \"rgba(255,0,0,0.2)\"\n    }),\n    stroke: new OlStroke({\n      color: \"#FF0000\",\n      width: 3\n    }),\n    image: new OlCircle({\n      radius: 8,\n      stroke: new OlStroke({\n        color: \"#FF0000\",\n        width: 3\n      }),\n      fill: new OlFill({\n        color: \"rgba(255,0,0,0.2)\"\n      })\n    })\n  })];\n}\nexport function getInfoStyle() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"rgba(255,0,0, 0.2)\"\n    }),\n    stroke: new OlStroke({\n      color: \"#FF0000\",\n      width: 2\n    }),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#FF0000\"\n      })\n    })\n  });\n}\nexport function studyAreaStyle() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"rgba(96, 96, 98, 0.7)\"\n    }),\n    stroke: new OlStroke({\n      color: \"#606062\",\n      width: 5\n    })\n  });\n}\nexport function getEditStyle() {\n  return editStyleFn();\n}\nexport function getIsochroneNetworkStyle() {\n  var styleFunction = function styleFunction(feature) {\n    var color = feature.get(\"color\");\n    var style = new OlStyle({\n      stroke: new OlStroke({\n        color: color,\n        width: 3\n      })\n    });\n    return [style];\n  };\n\n  return styleFunction;\n}\nvar routingIconUnicodes = {\n  walking_standard: \"fas fa-person-walking\",\n  walking_elderly: \"fas fa-person-walking\",\n  walking_safe_night: \"fas fa-person-walking\",\n  cycling_standard: \"fas fa-bicycle\",\n  cycling_pedelec: \"fas fa-bicycle\",\n  walking_wheelchair: \"fas fa-wheelchair\",\n  walking_wheelchair_standard: \"fas fa-wheelchair\",\n  walking_wheelchair_electric: \"fas fa-wheelchair\"\n};\nexport function getIsochroneStyle() {\n  var styleFunction = function styleFunction(feature) {\n    // Style array\n    var styles = []; // Get the incomeLevel and modus from the feature properties\n\n    var modus = feature.get(\"modus\");\n    var isVisible = feature.get(\"isVisible\");\n    var geomType = feature.getGeometry().getType();\n    var highlightFeature = feature.get(\"highlightFeature\");\n    /**\n     * Creates styles for isochrone polygon geometry type and isochrone\n     * center marker.\n     */\n\n    if (geomType === \"Polygon\" || geomType === \"MultiPolygon\" || geomType === \"LineString\") {\n      //Check feature isVisible Property\n      if (isVisible === false) {\n        return;\n      } //Fallback isochrone style\n\n\n      if (!modus) {\n        var genericIsochroneStyle = new OlStyle({\n          fill: new OlFill({\n            color: [0, 0, 0, 0]\n          }),\n          stroke: new OlStroke({\n            color: \"#0d0d0d\",\n            width: 7\n          })\n        });\n        styles.push(genericIsochroneStyle);\n      } //highlight color\n\n\n      if (highlightFeature !== false) {\n        styles.push(new OlStyle({\n          stroke: new OlStroke({\n            color: \"#FFFFFF\",\n            width: 8\n          })\n        }));\n      } // If the modus is 1 it is a default isochrone\n\n\n      if (modus === \"default\" || modus === \"comparison\") {\n        var style = new OlStyle({\n          fill: new OlFill({\n            color: [0, 0, 0, 0]\n          }),\n          stroke: new OlStroke({\n            color: feature.get(\"color\"),\n            width: 5\n          })\n        });\n        styles.push(style);\n      } else {\n        var _style = new OlStyle({\n          fill: new OlFill({\n            color: [0, 0, 0, 0]\n          }),\n          stroke: new OlStroke({\n            color: feature.get(\"color\"),\n            width: 5\n          })\n        });\n\n        styles.push(_style);\n      }\n\n      if (feature.get(\"showLabel\")) {\n        if (geomType !== [\"Polygon\", \"LineString\"]) {\n          styles.push(new OlStyle({\n            geometry: function geometry(feature) {\n              var coordinates = feature.getGeometry().getCoordinates()[0][0];\n              var maxY = null;\n              var index = null; // Find max coordinate Y\n\n              coordinates.forEach(function (coordinate) {\n                if (maxY === null || coordinate[1] > maxY) {\n                  maxY = coordinate[1];\n                  index = coordinates.indexOf(coordinate);\n                }\n              });\n              var center = coordinates[index];\n              return new Point(center);\n            },\n            text: new OlText({\n              text: Math.round(feature.get(\"step\") / 60) + \" min\",\n              font: \"bold 16px Arial\",\n              placement: \"point\",\n              fill: new OlFill({\n                color: \"white\"\n              }),\n              maxAngle: 0,\n              backgroundFill: new OlFill({\n                color: feature.get(\"color\")\n              }),\n              padding: [2, 2, 2, 2]\n            })\n          }));\n        } else {\n          styles.push(new OlStyle({\n            text: new OlText({\n              text: Math.round(feature.get(\"step\") / 60) + \" min\",\n              font: \"bold 16px Arial\",\n              placement: \"line\",\n              fill: new OlFill({\n                color: feature.get(\"color\")\n              }),\n              maxAngle: 0\n            })\n          }));\n        }\n      }\n    } else {\n      var path = \"img/markers/marker-\".concat(feature.get(\"calculationNumber\"), \".png\");\n      var markerStyle = new OlStyle({\n        image: new OlIcon({\n          anchor: [0.5, 0.96],\n          src: path,\n          scale: 0.5\n        })\n      });\n      styles.push(markerStyle);\n\n      if (feature.get(\"showLabel\") && feature.get(\"routing\")) {\n        var routingUnicode;\n\n        if (routingIconUnicodes[feature.get(\"routing\")]) {\n          routingUnicode = FA_DEFINITIONS[routingIconUnicodes[feature.get(\"routing\")]];\n        } else {\n          routingUnicode = feature.get(\"routing\");\n        }\n\n        styles.push(new OlStyle({\n          text: new OlText({\n            text: \"  \".concat(feature.get(\"speed\"), \" km/h\"),\n            font: \"bold 14px Arial\",\n            scale: 1.2,\n            textAlign: \"left\",\n            placement: \"point\",\n            fill: new OlFill({\n              color: \"white\"\n            }),\n            maxAngle: 0,\n            backgroundFill: new OlFill({\n              color: \"#800000\"\n            }),\n            padding: [3, 3, 3, 3],\n            offsetX: 38,\n            offsetY: -27\n          })\n        }), new OlStyle({\n          text: new OlText({\n            text: \"\".concat(routingUnicode),\n            font: \"16px FontAwesome\",\n            scale: 1.2,\n            textAlign: \"left\",\n            placement: \"point\",\n            fill: new OlFill({\n              color: \"white\"\n            }),\n            maxAngle: 0,\n            backgroundFill: new OlFill({\n              color: \"#800000\"\n            }),\n            padding: [3, 3, 3, 3],\n            offsetX: 17,\n            offsetY: -27\n          })\n        }));\n      }\n    }\n\n    return styles;\n  };\n\n  return styleFunction;\n}\nexport function defaultStyle(feature) {\n  var styles = [];\n  var geomType = feature.getGeometry().getType();\n  var strokeOpt = {\n    color: [\"MultiPolygon\", \"Polygon\"].includes(geomType) ? \"#707070\" : \"#707070\",\n    width: 3\n  };\n  var fillOpt = {\n    color: [\"MultiPolygon\", \"Polygon\"].includes(geomType) ? \"rgba(112, 112, 112, 0.5)\" : [0, 0, 0, 0]\n  };\n  var style = new OlStyle({\n    fill: new OlFill(fillOpt),\n    stroke: new OlStroke(strokeOpt),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#707070\"\n      })\n    })\n  });\n  styles.push(style);\n  return styles;\n}\nvar poisEditShadowStyleCache = {};\n\nfunction poisEditShadowStyle(color, radius) {\n  return new OlStyle({\n    image: new OlShadow({\n      radius: radius,\n      blur: 5,\n      offsetX: 0,\n      offsetY: 0,\n      fill: new OlFill({\n        color: color\n      })\n    })\n  });\n}\n\nvar poisEditStyleCache = {};\nexport function poisEditStyle(feature) {\n  var category = feature.get(\"category\");\n\n  if (!poisAoisStore.state.poisAois[category] || [\"MultiPolygon\", \"Polygon\"].includes(feature.getGeometry().getType())) {\n    return [];\n  }\n\n  var calculationMode = appStore.state.calculationMode.active;\n\n  if (calculationMode === \"default\" && feature.get(\"edit_type\")) {\n    return [];\n  }\n\n  if (calculationMode === \"comparison\" && !feature.get(\"edit_type\")) {\n    return [];\n  }\n\n  var poiIconConf = appStore.state.poiIcons[category];\n  var editType = feature.get(\"edit_type\"); //edit_type m = modified, d = deleted, n = new\n\n  var shadowColor = {\n    n: \"#6495ED\",\n    m: \"#FFA500\",\n    d: \"#FF0000\"\n  };\n  var st = []; // Shadow Style for Editing POIs\n\n  if (!editType) {\n    st.push(poisEditShadowStyle(\"rgba(0,0,0,0.5)\", 15));\n  }\n\n  if (!poisEditShadowStyleCache[editType]) {\n    poisEditShadowStyleCache[editType] = poisEditShadowStyle(shadowColor[editType], 25);\n  }\n\n  st.push(poisEditShadowStyleCache[editType]); // ----POIS-----\n\n  var color = poiIconConf.color;\n\n  if (editType === \"d\") {\n    // Icon color for delete poi\n    color = \"#c9c9c9\";\n  }\n\n  if (!poiIconConf || !poiIconConf.icon) {\n    return [];\n  }\n\n  var icon = poiIconConf.icon;\n\n  if (!poisEditStyleCache[icon + color]) {\n    // Font style\n    poisEditStyleCache[icon + color] = new OlStyle({\n      image: new OlFontSymbol({\n        form: \"marker\",\n        //\"none|circle|poi|bubble|marker|coma|shield|blazon|bookmark|hexagon|diamond|triangle|sign|ban|lozenge|square a form that will enclose the glyph, default none\",\n        gradient: false,\n        glyph: icon,\n        text: \"\",\n        // text to use if no glyph is defined\n        font: \"sans-serif\",\n        fontSize: 0.7,\n        fontStyle: \"900\",\n        radius: 20,\n        rotation: 0,\n        rotateWithView: false,\n        offsetY: -20,\n        color: color,\n        // icon color\n        fill: new OlFill({\n          color: \"#fff\" // marker color\n\n        }),\n        stroke: new OlStroke({\n          color: color,\n          width: 2\n        })\n      }),\n      stroke: new OlStroke({\n        width: 2,\n        color: \"#f80\"\n      }),\n      fill: new OlFill({\n        color: [255, 136, 0, 0.6]\n      })\n    });\n  }\n\n  st.push(poisEditStyleCache[icon + color]);\n  return st;\n}\nexport function uploadedFeaturesStyle() {\n  var style = new OlStyle({\n    fill: new OlFill({\n      color: \"#2196F3\"\n    }),\n    stroke: new OlStroke({\n      color: \"#2196F3\",\n      width: 3\n    }),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#2196F3\"\n      })\n    })\n  });\n  return [style];\n}\nexport function waysNewRoadStyle() {\n  var style = new OlStyle({\n    stroke: new OlStroke({\n      color: \"#6495ED\",\n      width: 4\n    })\n  });\n  return [style];\n}\nexport function waysNewBridgeStyle() {\n  var style = new OlStyle({\n    stroke: new OlStroke({\n      color: \"#FFA500\",\n      width: 4\n    })\n  });\n  return [style];\n}\nexport function buildingStyleWithPopulation() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"rgb(0,128,0, 0.7)\"\n    })\n  });\n}\nexport function buildingStyleWithNoPopulation() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"#FF0000\"\n    })\n  });\n}\nexport function deletedStyle() {\n  var style = new OlStyle({\n    stroke: new OlStroke({\n      color: \"#FF0000\",\n      width: 4,\n      lineDash: [5, 5]\n    })\n  });\n  return [style];\n}\nexport function editStyleFn() {\n  var styleFunction = function styleFunction(feature, resolution) {\n    var props = feature.getProperties();\n\n    if (props.layerName === \"poi\") {\n      return poisEditStyle(feature);\n    } // Deleted Style\n\n\n    if (props.edit_type === \"d\") {\n      return deletedStyle();\n    } // New road Style\n\n\n    if (feature.get(\"layerName\") === \"way\") {\n      if (props.way_type == \"bridge\") {\n        return waysNewBridgeStyle();\n      } else if (props.way_type == \"road\") {\n        return waysNewRoadStyle();\n      }\n    }\n\n    if (feature.get(\"layerName\") === \"building\" && feature.get(\"edit_type\")) {\n      var styles = [];\n      var geomType = feature.getGeometry().getType();\n      var strokeOpt = {\n        color: [\"MultiPolygon\", \"Polygon\"].includes(geomType) ? \"rgba(255, 0, 0, 1)\" : \"#707070\",\n        width: 3\n      };\n      var fillOpt = {\n        color: [\"MultiPolygon\", \"Polygon\"].includes(geomType) ? \"rgba(255, 0, 0, 0.5)\" : [0, 0, 0, 0]\n      };\n      var properties = feature.getProperties();\n      strokeOpt.lineDash = [0, 0];\n      strokeOpt.width = 4;\n      var isCompleted = true;\n      var hasEntranceFeature = false;\n\n      if (mapStore.state.reqFields && mapStore.state.selectedEditLayer.get(\"name\") === \"building\") {\n        mapStore.state.reqFields.forEach(function (field) {\n          if (!properties[field]) {\n            isCompleted = false;\n          }\n        });\n      }\n\n      if (mapStore.state.bldEntranceLayer) {\n        var extent = feature.getGeometry().getExtent();\n        var entrancesInExtent = mapStore.state.bldEntranceLayer.getSource().getFeaturesInExtent(extent);\n        var countEntrances = 0;\n        entrancesInExtent.forEach(function (entrance) {\n          var buildingId = feature.get(\"id\") || feature.getId();\n\n          if (entrance.get(\"building_modified_id\") === buildingId) {\n            countEntrances += 1;\n          }\n        });\n        countEntrances === 0 ? hasEntranceFeature = false : hasEntranceFeature = true;\n      }\n\n      if (isCompleted === true && hasEntranceFeature === true) {\n        strokeOpt.color = \"rgb(0,128,0, 0.7)\";\n        fillOpt.color = \"rgb(0,128,0, 0.7)\";\n      }\n\n      var area = getArea(feature.getGeometry());\n      var building_levels = feature.get(\"building_levels\") || 0;\n      var population = feature.get(\"population\");\n      var area_label = i18n.t(\"dynamicFields.attributes.building.labels.area\");\n      var building_levels_label = i18n.t(\"dynamicFields.attributes.building.labels.building_levels\");\n      var population_label = i18n.t(\"dynamicFields.attributes.building.labels.population\");\n      var floor_area_label = i18n.t(\"dynamicFields.attributes.building.labels.gross_floor_area\"); // Add label for building.\n\n      var fontSize = 11;\n\n      if (resolution < 0.4 && mapStore.state.editLayer && mapStore.state.editLayer.get(\"showLabels\") === 0) {\n        var _style2 = new OlStyle({\n          text: new OlText({\n            text: \"\".concat(area_label, \": \").concat(area.toFixed(0), \" \\u33A1\\n\").concat(building_levels_label, \": \").concat(building_levels, \"\\n            \").concat(floor_area_label, \": \").concat(parseInt(area * building_levels), \" \\u33A1\\n            \").concat(population_label, \": \").concat(parseInt(population || 0)),\n            overflow: true,\n            font: \"\".concat(fontSize, \"px Calibri, sans-serif\"),\n            fill: new OlFill({\n              color: \"black\"\n            }),\n            backgroundFill: new OlFill({\n              color: \"orange\"\n            }),\n            padding: [1, 1, 1, 1]\n          })\n        });\n\n        styles.push(_style2);\n      }\n\n      var style = new OlStyle({\n        fill: new OlFill(fillOpt),\n        stroke: new OlStroke(strokeOpt),\n        image: new OlCircle({\n          radius: 7,\n          fill: new OlFill({\n            color: \"#707070\"\n          })\n        })\n      });\n      styles.push(style);\n      return styles;\n    }\n\n    if (feature.get(\"layerName\") === \"population\") {\n      return bldEntrancePointsStyle(feature, resolution);\n    }\n\n    return defaultStyle(feature, resolution);\n  };\n\n  return styleFunction;\n}\nexport function getFeatureHighlightStyle() {\n  return [new OlStyle({\n    fill: new OlFill({\n      color: [0, 0, 0, 0]\n    }),\n    stroke: new OlStroke({\n      color: \"#FF0000\",\n      width: 10\n    }),\n    image: new OlCircle({\n      radius: 10,\n      fill: new OlFill({\n        color: \"#FF0000\"\n      })\n    })\n  })];\n}\nexport function isochroneOverlayStyle(feature) {\n  if (feature.get(\"isVisible\") === false) {\n    return [];\n  } else {\n    return [new OlStyle({\n      fill: new OlFill({\n        color: \"rgba(255, 0, 0, 0.3)\"\n      }),\n      stroke: new OlStroke({\n        color: \"#FF0000\",\n        width: 3\n      }),\n      image: new OlCircle({\n        radius: 5,\n        fill: new OlFill({\n          color: \"#FF0000\"\n        })\n      })\n    })];\n  }\n}\nexport function studyAreaASelectStyle() {\n  return [new OlStyle({\n    fill: new OlFill({\n      color: \"rgba(255, 0, 0, 0.5)\"\n    }),\n    stroke: new OlStroke({\n      color: \"#FF0000\",\n      width: 5,\n      lineDash: [10, 10]\n    }),\n    image: new OlCircle({\n      radius: 10,\n      fill: new OlFill({\n        color: \"#FF0000\"\n      })\n    })\n  })];\n}\nexport function bldEntrancePointsStyle(feature, resolution) {\n  var radius = 8;\n\n  if (resolution > 4) {\n    return [];\n  }\n\n  var styles = [];\n  styles.push(new OlStyle({\n    fill: new OlFill({\n      color: \"#800080\"\n    }),\n    stroke: new OlStroke({\n      color: \"#800080\",\n      width: radius\n    }),\n    image: new OlCircle({\n      radius: radius,\n      fill: new OlFill({\n        color: \"#800080\"\n      })\n    })\n  }));\n  return styles;\n}\nexport var baseStyleDefs = {\n  boundaryStyle: function boundaryStyle() {\n    return new OlStyle({\n      fill: new OlFill({\n        color: [0, 0, 0, 0]\n      }),\n      stroke: new OlStroke({\n        color: \"#707070\",\n        width: 5.5\n      })\n    });\n  },\n  subStudyAreaStyle: function subStudyAreaStyle() {\n    return new OlStyle({\n      fill: new OlFill({\n        color: \"rgba(127,127,191,0.3)\"\n      }),\n      stroke: new OlStroke({\n        color: \"rgba(127,127,191)\",\n        width: 2\n      })\n    });\n  }\n};\n/**\n * Mapillary styles -\n */\n\nexport var mapillaryStyleDefs = {\n  activeSequence: \"\",\n  baseOverlayStyle: function baseOverlayStyle(map) {\n    var styleFunction = function styleFunction(feature) {\n      // console.log(feature);\n      var color = \"rgba(53, 175, 109,0.7)\";\n\n      if ([feature.get(\"sequence\"), feature.get(\"id\"), feature.get(\"sequence_id\")].includes(mapillaryStyleDefs.activeSequence)) {\n        color = \"#30C2FF\";\n      }\n\n      var styleConfig = {\n        stroke: new OlStroke({\n          color: color,\n          width: 4\n        })\n      };\n\n      if (map.getView().getZoom() > 17) {\n        styleConfig.image = new OlCircle({\n          radius: 6,\n          fill: new OlFill({\n            color: color\n          })\n        });\n      }\n\n      var style = new OlStyle(styleConfig);\n      return [style];\n    };\n\n    return styleFunction;\n  },\n  highlightStyle: function highlightStyle(feature) {\n    var styles = [];\n    var angle = feature.get(\"compass_angle\");\n    var skey = feature.get(\"sequence_id\");\n\n    if (angle) {\n      var wifiStyle = new OlStyle({\n        text: new OlText({\n          text: \"\\uE1D8\",\n          scale: 1,\n          font: '900 18px \"Material Icons\"',\n          offsetY: -10,\n          rotateWithView: true,\n          rotation: angle * Math.PI / 180,\n          fill: new OlFill({\n            color: skey === mapillaryStyleDefs.activeSequence ? \"#30C2FF\" : \"#047d50\"\n          }),\n          stroke: new OlStroke({\n            color: skey === mapillaryStyleDefs.activeSequence ? \"#30C2FF\" : \"#047d50\",\n            width: 3\n          })\n        })\n      });\n      styles.push(wifiStyle);\n    }\n\n    var circleStyle = new OlStyle({\n      text: new OlText({\n        text: \"\\uF111\",\n        scale: 0.9,\n        font: '900 18px \"Font Awesome 5 Free\"',\n        fill: new OlFill({\n          color: skey === mapillaryStyleDefs.activeSequence ? \"#30C2FF\" : \"#047d50\"\n        }),\n        stroke: new OlStroke({\n          color: \"white\",\n          width: 4\n        })\n      })\n    });\n    styles.push(circleStyle);\n    return styles;\n  },\n  circleSolidStyle: new OlStyle({\n    text: new OlText({\n      text: \"\\uF111\",\n      scale: 0.7,\n      font: '900 18px \"Font Awesome 5 Free\"',\n      fill: new OlFill({\n        color: \"red\"\n      }),\n      stroke: new OlStroke({\n        color: \"white\",\n        width: 4\n      })\n    })\n  }),\n  wifiStyle: new OlStyle({\n    text: new OlText({\n      text: \"\\uE1D8\",\n      scale: 1.2,\n      font: '900 18px \"Material Icons\"',\n      offsetY: -10,\n      rotation: 0,\n      fill: new OlFill({\n        color: \"red\"\n      }),\n      stroke: new OlStroke({\n        color: \"red\",\n        width: 3\n      })\n    })\n  }),\n  updateBearingStyle: function updateBearingStyle(bearing) {\n    var liveBearing = new OlStyle({\n      text: new OlText({\n        text: \"\\uE1D8\",\n        scale: 1.2,\n        font: '900 18px \"Material Icons\"',\n        offsetY: -10,\n        rotateWithView: true,\n        rotation: bearing * Math.PI / 180,\n        fill: new OlFill({\n          color: \"red\"\n        }),\n        stroke: new OlStroke({\n          color: \"red\",\n          width: 3\n        })\n      })\n    });\n    return [liveBearing, mapillaryStyleDefs.circleSolidStyle];\n  }\n};\n/**\n * PoisAois layer style ---------------------\n */\n\nvar poisAoisStyleCache = {};\nvar poisShadowStyle = new OlStyle({\n  image: new OlShadow({\n    radius: 15,\n    blur: 5,\n    offsetX: 0,\n    offsetY: 0,\n    fill: new OlFill({\n      color: \"rgba(0,0,0,0.5)\"\n    })\n  })\n});\nexport function poisAoisStyle(feature) {\n  var category = feature.get(\"category\");\n\n  if (!poisAoisStore.state.poisAois[category]) {\n    return [];\n  }\n\n  var poiIconConf = appStore.state.poiIcons[category];\n  if (!poiIconConf && !poiIconConf.color) return [];\n  var color = poiIconConf.color;\n  var st = []; // ----AOIS-----\n\n  if ([\"MultiPolygon\", \"Polygon\"].includes(feature.getGeometry().getType())) {\n    if (!poisAoisStyleCache[category + color]) {\n      poisAoisStyleCache[category + color] = new OlStyle({\n        fill: new OlFill({\n          color: color\n        }),\n        stroke: new OlStroke({\n          color: color,\n          width: 1\n        })\n      });\n    }\n\n    st.push(poisAoisStyleCache[category + color]);\n    return st;\n  } // ----POIS-----\n  // Shadow style\n\n\n  st.push(poisShadowStyle);\n\n  if (!poiIconConf || !poiIconConf.icon) {\n    return [];\n  }\n\n  var icon = poiIconConf.icon;\n\n  if (!poisAoisStyleCache[icon + color]) {\n    // Font style\n    poisAoisStyleCache[icon + color] = new OlStyle({\n      image: new OlFontSymbol({\n        form: \"marker\",\n        //\"none|circle|poi|bubble|marker|coma|shield|blazon|bookmark|hexagon|diamond|triangle|sign|ban|lozenge|square a form that will enclose the glyph, default none\",\n        gradient: false,\n        glyph: icon,\n        text: \"\",\n        // text to use if no glyph is defined\n        font: \"sans-serif\",\n        fontSize: 0.7,\n        fontStyle: \"900\",\n        radius: 20,\n        rotation: 0,\n        rotateWithView: false,\n        offsetY: -20,\n        color: color,\n        // icon color\n        fill: new OlFill({\n          color: \"#fff\" // marker color\n\n        }),\n        stroke: new OlStroke({\n          color: color,\n          width: 2\n        })\n      }),\n      stroke: new OlStroke({\n        width: 2,\n        color: \"#f80\"\n      }),\n      fill: new OlFill({\n        color: [255, 136, 0, 0.6]\n      })\n    });\n  }\n\n  st.push(poisAoisStyleCache[icon + color]);\n  return st;\n}\nexport var stylesRef = {\n  poisAoisStyle: poisAoisStyle,\n  study_area_crop: baseStyleDefs.boundaryStyle,\n  sub_study_area: baseStyleDefs.subStudyAreaStyle\n};",{"version":3,"sources":["/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/style/OlStyleDefs.js"],"names":["OlStyle","OlStroke","OlFill","OlCircle","OlIcon","OlText","OlFontSymbol","OlShadow","poisAoisStore","mapStore","appStore","FA_DEFINITIONS","getIconUnicode","Point","getArea","i18n","addDefs","font","process","env","VUE_APP_FONTAWESOME_NPM_AUTH_TOKEN","name","prefix","CUSTOM_FA_DEFS","window","FontAwesomeKitConfig","iconUploads","iconNames","Object","keys","forEach","iconName","unicode","u","getMeasureStyle","measureConf","fill","color","fillColor","stroke","strokeColor","width","getMeasureInteractionStyle","sketchFillColor","sketchStrokeColor","lineDash","image","radius","sketchVertexStrokeColor","sketchVertexFillColor","getSelectStyle","getSearchHighlightStyle","getInfoStyle","studyAreaStyle","getEditStyle","editStyleFn","getIsochroneNetworkStyle","styleFunction","feature","get","style","routingIconUnicodes","walking_standard","walking_elderly","walking_safe_night","cycling_standard","cycling_pedelec","walking_wheelchair","walking_wheelchair_standard","walking_wheelchair_electric","getIsochroneStyle","styles","modus","isVisible","geomType","getGeometry","getType","highlightFeature","genericIsochroneStyle","push","geometry","coordinates","getCoordinates","maxY","index","coordinate","indexOf","center","text","Math","round","placement","maxAngle","backgroundFill","padding","path","markerStyle","anchor","src","scale","routingUnicode","textAlign","offsetX","offsetY","defaultStyle","strokeOpt","includes","fillOpt","poisEditShadowStyleCache","poisEditShadowStyle","blur","poisEditStyleCache","poisEditStyle","category","state","poisAois","calculationMode","active","poiIconConf","poiIcons","editType","shadowColor","n","m","d","st","icon","form","gradient","glyph","fontSize","fontStyle","rotation","rotateWithView","uploadedFeaturesStyle","waysNewRoadStyle","waysNewBridgeStyle","buildingStyleWithPopulation","buildingStyleWithNoPopulation","deletedStyle","resolution","props","getProperties","layerName","edit_type","way_type","properties","isCompleted","hasEntranceFeature","reqFields","selectedEditLayer","field","bldEntranceLayer","extent","getExtent","entrancesInExtent","getSource","getFeaturesInExtent","countEntrances","entrance","buildingId","getId","area","building_levels","population","area_label","t","building_levels_label","population_label","floor_area_label","editLayer","toFixed","parseInt","overflow","bldEntrancePointsStyle","getFeatureHighlightStyle","isochroneOverlayStyle","studyAreaASelectStyle","baseStyleDefs","boundaryStyle","subStudyAreaStyle","mapillaryStyleDefs","activeSequence","baseOverlayStyle","map","styleConfig","getView","getZoom","highlightStyle","angle","skey","wifiStyle","PI","circleStyle","circleSolidStyle","updateBearingStyle","bearing","liveBearing","poisAoisStyleCache","poisShadowStyle","poisAoisStyle","stylesRef","study_area_crop","sub_study_area"],"mappings":"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","sourcesContent":["import OlStyle from \"ol/style/Style\";\nimport OlStroke from \"ol/style/Stroke\";\nimport OlFill from \"ol/style/Fill\";\nimport OlCircle from \"ol/style/Circle\";\nimport OlIcon from \"ol/style/Icon\";\nimport OlText from \"ol/style/Text\";\nimport OlFontSymbol from \"../utils/FontSymbol\";\nimport OlShadow from \"../utils/Shadow\";\n\nimport poisAoisStore from \"../store/modules/poisaois\";\nimport mapStore from \"../store/modules/map\";\nimport appStore from \"../store/modules/app\";\nimport { FA_DEFINITIONS } from \"../utils/FontAwesomev6ProDefs\";\nimport { getIconUnicode } from \"../utils/Helpers\";\nimport Point from \"ol/geom/Point\";\nimport { getArea } from \"ol/sphere.js\";\nimport i18n from \"../../src/plugins/i18n\";\n\nOlFontSymbol.addDefs(\n  {\n    font: process.env.VUE_APP_FONTAWESOME_NPM_AUTH_TOKEN\n      ? \"'Font Awesome 6 Pro'\"\n      : \"'Font Awesome 5 Free'\",\n    name: \"FontAwesome\",\n    prefix: \"\"\n  },\n  FA_DEFINITIONS\n);\n\nconst CUSTOM_FA_DEFS = {};\nif (window.FontAwesomeKitConfig && window.FontAwesomeKitConfig.iconUploads) {\n  const iconNames = Object.keys(window.FontAwesomeKitConfig.iconUploads);\n  iconNames.forEach(iconName => {\n    const unicode = window.FontAwesomeKitConfig.iconUploads[iconName].u;\n    if (unicode) {\n      CUSTOM_FA_DEFS[`fak fa-${iconName}`] = getIconUnicode(\n        `fak fa-${iconName}`\n      );\n    }\n  });\n}\n\nOlFontSymbol.addDefs(\n  {\n    font: \"Font Awesome Kit\",\n    name: \"Font Awesome Kit\",\n    prefix: \"\"\n  },\n  CUSTOM_FA_DEFS\n);\n\nexport function getMeasureStyle(measureConf) {\n  return new OlStyle({\n    fill: new OlFill({\n      color: measureConf.fillColor || \"rgba(255, 255, 255, 0.2)\"\n    }),\n    stroke: new OlStroke({\n      color: measureConf.strokeColor || \"rgba(0, 0, 0, 0.5)\",\n      width: 4\n    })\n  });\n}\nexport function getMeasureInteractionStyle(measureConf) {\n  return new OlStyle({\n    fill: new OlFill({\n      color: measureConf.sketchFillColor || \"rgba(255, 255, 255, 0.2)\"\n    }),\n    stroke: new OlStroke({\n      color: measureConf.sketchStrokeColor || \"rgba(0, 0, 0, 0.5)\",\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new OlCircle({\n      radius: 5,\n      stroke: new OlStroke({\n        color: measureConf.sketchVertexStrokeColor || \"rgba(0, 0, 0, 0.7)\"\n      }),\n      fill: new OlFill({\n        color: measureConf.sketchVertexFillColor || \"rgba(255, 255, 255, 0.2)\"\n      })\n    })\n  });\n}\n\nexport function getSelectStyle() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: [0, 0, 0, 0]\n    }),\n    stroke: new OlStroke({\n      color: \"#fe4a49\",\n      width: 5,\n      lineDash: [10, 10]\n    }),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#FF0000\"\n      })\n    })\n  });\n}\n\nexport function getSearchHighlightStyle() {\n  return [\n    new OlStyle({\n      fill: new OlFill({\n        color: \"rgba(255,0,0,0.2)\"\n      }),\n      stroke: new OlStroke({\n        color: \"#FF0000\",\n        width: 3\n      }),\n      image: new OlCircle({\n        radius: 8,\n        stroke: new OlStroke({\n          color: \"#FF0000\",\n          width: 3\n        }),\n        fill: new OlFill({\n          color: \"rgba(255,0,0,0.2)\"\n        })\n      })\n    })\n  ];\n}\n\nexport function getInfoStyle() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"rgba(255,0,0, 0.2)\"\n    }),\n    stroke: new OlStroke({\n      color: \"#FF0000\",\n      width: 2\n    }),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#FF0000\"\n      })\n    })\n  });\n}\n\nexport function studyAreaStyle() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"rgba(96, 96, 98, 0.7)\"\n    }),\n    stroke: new OlStroke({\n      color: \"#606062\",\n      width: 5\n    })\n  });\n}\n\nexport function getEditStyle() {\n  return editStyleFn();\n}\n\nexport function getIsochroneNetworkStyle() {\n  const styleFunction = feature => {\n    const color = feature.get(\"color\");\n    const style = new OlStyle({\n      stroke: new OlStroke({\n        color: color,\n        width: 3\n      })\n    });\n    return [style];\n  };\n  return styleFunction;\n}\n\nconst routingIconUnicodes = {\n  walking_standard: \"fas fa-person-walking\",\n  walking_elderly: \"fas fa-person-walking\",\n  walking_safe_night: \"fas fa-person-walking\",\n  cycling_standard: \"fas fa-bicycle\",\n  cycling_pedelec: \"fas fa-bicycle\",\n  walking_wheelchair: \"fas fa-wheelchair\",\n  walking_wheelchair_standard: \"fas fa-wheelchair\",\n  walking_wheelchair_electric: \"fas fa-wheelchair\"\n};\n\nexport function getIsochroneStyle() {\n  const styleFunction = feature => {\n    // Style array\n    let styles = [];\n    // Get the incomeLevel and modus from the feature properties\n    let modus = feature.get(\"modus\");\n    let isVisible = feature.get(\"isVisible\");\n    let geomType = feature.getGeometry().getType();\n    const highlightFeature = feature.get(\"highlightFeature\");\n\n    /**\n     * Creates styles for isochrone polygon geometry type and isochrone\n     * center marker.\n     */\n    if (\n      geomType === \"Polygon\" ||\n      geomType === \"MultiPolygon\" ||\n      geomType === \"LineString\"\n    ) {\n      //Check feature isVisible Property\n      if (isVisible === false) {\n        return;\n      }\n\n      //Fallback isochrone style\n      if (!modus) {\n        let genericIsochroneStyle = new OlStyle({\n          fill: new OlFill({\n            color: [0, 0, 0, 0]\n          }),\n          stroke: new OlStroke({\n            color: \"#0d0d0d\",\n            width: 7\n          })\n        });\n\n        styles.push(genericIsochroneStyle);\n      }\n      //highlight color\n      if (highlightFeature !== false) {\n        styles.push(\n          new OlStyle({\n            stroke: new OlStroke({\n              color: \"#FFFFFF\",\n              width: 8\n            })\n          })\n        );\n      }\n      // If the modus is 1 it is a default isochrone\n      if (modus === \"default\" || modus === \"comparison\") {\n        let style = new OlStyle({\n          fill: new OlFill({\n            color: [0, 0, 0, 0]\n          }),\n          stroke: new OlStroke({\n            color: feature.get(\"color\"),\n            width: 5\n          })\n        });\n\n        styles.push(style);\n      } else {\n        let style = new OlStyle({\n          fill: new OlFill({\n            color: [0, 0, 0, 0]\n          }),\n          stroke: new OlStroke({\n            color: feature.get(\"color\"),\n            width: 5\n          })\n        });\n\n        styles.push(style);\n      }\n      if (feature.get(\"showLabel\")) {\n        if (geomType !== [\"Polygon\", \"LineString\"]) {\n          styles.push(\n            new OlStyle({\n              geometry: feature => {\n                const coordinates = feature\n                  .getGeometry()\n                  .getCoordinates()[0][0];\n                let maxY = null;\n                let index = null;\n                // Find max coordinate Y\n                coordinates.forEach(coordinate => {\n                  if (maxY === null || coordinate[1] > maxY) {\n                    maxY = coordinate[1];\n                    index = coordinates.indexOf(coordinate);\n                  }\n                });\n                const center = coordinates[index];\n                return new Point(center);\n              },\n              text: new OlText({\n                text: Math.round(feature.get(\"step\") / 60) + \" min\",\n                font: \"bold 16px Arial\",\n                placement: \"point\",\n                fill: new OlFill({\n                  color: \"white\"\n                }),\n                maxAngle: 0,\n                backgroundFill: new OlFill({\n                  color: feature.get(\"color\")\n                }),\n                padding: [2, 2, 2, 2]\n              })\n            })\n          );\n        } else {\n          styles.push(\n            new OlStyle({\n              text: new OlText({\n                text: Math.round(feature.get(\"step\") / 60) + \" min\",\n                font: \"bold 16px Arial\",\n                placement: \"line\",\n                fill: new OlFill({\n                  color: feature.get(\"color\")\n                }),\n                maxAngle: 0\n              })\n            })\n          );\n        }\n      }\n    } else {\n      let path = `img/markers/marker-${feature.get(\"calculationNumber\")}.png`;\n      let markerStyle = new OlStyle({\n        image: new OlIcon({\n          anchor: [0.5, 0.96],\n          src: path,\n          scale: 0.5\n        })\n      });\n      styles.push(markerStyle);\n      if (feature.get(\"showLabel\") && feature.get(\"routing\")) {\n        let routingUnicode;\n        if (routingIconUnicodes[feature.get(\"routing\")]) {\n          routingUnicode =\n            FA_DEFINITIONS[routingIconUnicodes[feature.get(\"routing\")]];\n        } else {\n          routingUnicode = feature.get(\"routing\");\n        }\n        styles.push(\n          new OlStyle({\n            text: new OlText({\n              text: `  ${feature.get(\"speed\")} km/h`,\n              font: \"bold 14px Arial\",\n              scale: 1.2,\n              textAlign: \"left\",\n              placement: \"point\",\n              fill: new OlFill({\n                color: \"white\"\n              }),\n              maxAngle: 0,\n              backgroundFill: new OlFill({\n                color: \"#800000\"\n              }),\n              padding: [3, 3, 3, 3],\n              offsetX: 38,\n              offsetY: -27\n            })\n          }),\n          new OlStyle({\n            text: new OlText({\n              text: `${routingUnicode}`,\n              font: \"16px FontAwesome\",\n              scale: 1.2,\n              textAlign: \"left\",\n              placement: \"point\",\n              fill: new OlFill({\n                color: \"white\"\n              }),\n              maxAngle: 0,\n              backgroundFill: new OlFill({\n                color: \"#800000\"\n              }),\n              padding: [3, 3, 3, 3],\n              offsetX: 17,\n              offsetY: -27\n            })\n          })\n        );\n      }\n    }\n    return styles;\n  };\n\n  return styleFunction;\n}\n\nexport function defaultStyle(feature) {\n  const styles = [];\n  const geomType = feature.getGeometry().getType();\n  const strokeOpt = {\n    color: [\"MultiPolygon\", \"Polygon\"].includes(geomType)\n      ? \"#707070\"\n      : \"#707070\",\n    width: 3\n  };\n  const fillOpt = {\n    color: [\"MultiPolygon\", \"Polygon\"].includes(geomType)\n      ? \"rgba(112, 112, 112, 0.5)\"\n      : [0, 0, 0, 0]\n  };\n\n  const style = new OlStyle({\n    fill: new OlFill(fillOpt),\n    stroke: new OlStroke(strokeOpt),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#707070\"\n      })\n    })\n  });\n  styles.push(style);\n  return styles;\n}\n\nconst poisEditShadowStyleCache = {};\n\nfunction poisEditShadowStyle(color, radius) {\n  return new OlStyle({\n    image: new OlShadow({\n      radius: radius,\n      blur: 5,\n      offsetX: 0,\n      offsetY: 0,\n      fill: new OlFill({\n        color: color\n      })\n    })\n  });\n}\n\nconst poisEditStyleCache = {};\nexport function poisEditStyle(feature) {\n  const category = feature.get(\"category\");\n  if (\n    !poisAoisStore.state.poisAois[category] ||\n    [\"MultiPolygon\", \"Polygon\"].includes(feature.getGeometry().getType())\n  ) {\n    return [];\n  }\n  const calculationMode = appStore.state.calculationMode.active;\n  if (calculationMode === \"default\" && feature.get(\"edit_type\")) {\n    return [];\n  }\n\n  if (calculationMode === \"comparison\" && !feature.get(\"edit_type\")) {\n    return [];\n  }\n\n  const poiIconConf = appStore.state.poiIcons[category];\n  const editType = feature.get(\"edit_type\");\n  //edit_type m = modified, d = deleted, n = new\n  const shadowColor = {\n    n: \"#6495ED\",\n    m: \"#FFA500\",\n    d: \"#FF0000\"\n  };\n  var st = [];\n  // Shadow Style for Editing POIs\n  if (!editType) {\n    st.push(poisEditShadowStyle(\"rgba(0,0,0,0.5)\", 15));\n  }\n  if (!poisEditShadowStyleCache[editType]) {\n    poisEditShadowStyleCache[editType] = poisEditShadowStyle(\n      shadowColor[editType],\n      25\n    );\n  }\n  st.push(poisEditShadowStyleCache[editType]);\n  // ----POIS-----\n\n  let color = poiIconConf.color;\n  if (editType === \"d\") {\n    // Icon color for delete poi\n    color = \"#c9c9c9\";\n  }\n  if (!poiIconConf || !poiIconConf.icon) {\n    return [];\n  }\n  const icon = poiIconConf.icon;\n  if (!poisEditStyleCache[icon + color]) {\n    // Font style\n    poisEditStyleCache[icon + color] = new OlStyle({\n      image: new OlFontSymbol({\n        form: \"marker\", //\"none|circle|poi|bubble|marker|coma|shield|blazon|bookmark|hexagon|diamond|triangle|sign|ban|lozenge|square a form that will enclose the glyph, default none\",\n        gradient: false,\n        glyph: icon,\n        text: \"\", // text to use if no glyph is defined\n        font: \"sans-serif\",\n        fontSize: 0.7,\n        fontStyle: \"900\",\n        radius: 20,\n        rotation: 0,\n        rotateWithView: false,\n        offsetY: -20,\n        color: color, // icon color\n        fill: new OlFill({\n          color: \"#fff\" // marker color\n        }),\n        stroke: new OlStroke({\n          color: color,\n          width: 2\n        })\n      }),\n      stroke: new OlStroke({\n        width: 2,\n        color: \"#f80\"\n      }),\n      fill: new OlFill({\n        color: [255, 136, 0, 0.6]\n      })\n    });\n  }\n  st.push(poisEditStyleCache[icon + color]);\n  return st;\n}\n\nexport function uploadedFeaturesStyle() {\n  const style = new OlStyle({\n    fill: new OlFill({\n      color: \"#2196F3\"\n    }),\n    stroke: new OlStroke({\n      color: \"#2196F3\",\n      width: 3\n    }),\n    image: new OlCircle({\n      radius: 7,\n      fill: new OlFill({\n        color: \"#2196F3\"\n      })\n    })\n  });\n  return [style];\n}\nexport function waysNewRoadStyle() {\n  const style = new OlStyle({\n    stroke: new OlStroke({\n      color: \"#6495ED\",\n      width: 4\n    })\n  });\n  return [style];\n}\n\nexport function waysNewBridgeStyle() {\n  const style = new OlStyle({\n    stroke: new OlStroke({\n      color: \"#FFA500\",\n      width: 4\n    })\n  });\n  return [style];\n}\n\nexport function buildingStyleWithPopulation() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"rgb(0,128,0, 0.7)\"\n    })\n  });\n}\nexport function buildingStyleWithNoPopulation() {\n  return new OlStyle({\n    fill: new OlFill({\n      color: \"#FF0000\"\n    })\n  });\n}\n\nexport function deletedStyle() {\n  const style = new OlStyle({\n    stroke: new OlStroke({\n      color: \"#FF0000\",\n      width: 4,\n      lineDash: [5, 5]\n    })\n  });\n  return [style];\n}\n\nexport function editStyleFn() {\n  const styleFunction = (feature, resolution) => {\n    const props = feature.getProperties();\n    if (props.layerName === \"poi\") {\n      return poisEditStyle(feature);\n    }\n    // Deleted Style\n    if (props.edit_type === \"d\") {\n      return deletedStyle();\n    }\n\n    // New road Style\n    if (feature.get(\"layerName\") === \"way\") {\n      if (props.way_type == \"bridge\") {\n        return waysNewBridgeStyle();\n      } else if (props.way_type == \"road\") {\n        return waysNewRoadStyle();\n      }\n    }\n    if (feature.get(\"layerName\") === \"building\" && feature.get(\"edit_type\")) {\n      const styles = [];\n      const geomType = feature.getGeometry().getType();\n      const strokeOpt = {\n        color: [\"MultiPolygon\", \"Polygon\"].includes(geomType)\n          ? \"rgba(255, 0, 0, 1)\"\n          : \"#707070\",\n        width: 3\n      };\n      const fillOpt = {\n        color: [\"MultiPolygon\", \"Polygon\"].includes(geomType)\n          ? \"rgba(255, 0, 0, 0.5)\"\n          : [0, 0, 0, 0]\n      };\n      const properties = feature.getProperties();\n      strokeOpt.lineDash = [0, 0];\n      strokeOpt.width = 4;\n\n      let isCompleted = true;\n      let hasEntranceFeature = false;\n      if (\n        mapStore.state.reqFields &&\n        mapStore.state.selectedEditLayer.get(\"name\") === \"building\"\n      ) {\n        mapStore.state.reqFields.forEach(field => {\n          if (!properties[field]) {\n            isCompleted = false;\n          }\n        });\n      }\n      if (mapStore.state.bldEntranceLayer) {\n        const extent = feature.getGeometry().getExtent();\n        const entrancesInExtent = mapStore.state.bldEntranceLayer\n          .getSource()\n          .getFeaturesInExtent(extent);\n\n        let countEntrances = 0;\n        entrancesInExtent.forEach(entrance => {\n          const buildingId = feature.get(\"id\") || feature.getId();\n          if (entrance.get(\"building_modified_id\") === buildingId) {\n            countEntrances += 1;\n          }\n        });\n        countEntrances === 0\n          ? (hasEntranceFeature = false)\n          : (hasEntranceFeature = true);\n      }\n\n      if (isCompleted === true && hasEntranceFeature === true) {\n        strokeOpt.color = \"rgb(0,128,0, 0.7)\";\n        fillOpt.color = \"rgb(0,128,0, 0.7)\";\n      }\n      const area = getArea(feature.getGeometry());\n      const building_levels = feature.get(\"building_levels\") || 0;\n      const population = feature.get(\"population\");\n      const area_label = i18n.t(\n        \"dynamicFields.attributes.building.labels.area\"\n      );\n      const building_levels_label = i18n.t(\n        \"dynamicFields.attributes.building.labels.building_levels\"\n      );\n      const population_label = i18n.t(\n        \"dynamicFields.attributes.building.labels.population\"\n      );\n      const floor_area_label = i18n.t(\n        \"dynamicFields.attributes.building.labels.gross_floor_area\"\n      );\n      // Add label for building.\n      let fontSize = 11;\n\n      if (\n        resolution < 0.4 &&\n        mapStore.state.editLayer &&\n        mapStore.state.editLayer.get(\"showLabels\") === 0\n      ) {\n        const style = new OlStyle({\n          text: new OlText({\n            text: `${area_label}: ${area.toFixed(\n              0\n            )} ㎡\\n${building_levels_label}: ${building_levels}\n            ${floor_area_label}: ${parseInt(area * building_levels)} ㎡\n            ${population_label}: ${parseInt(population || 0)}`,\n            overflow: true,\n            font: `${fontSize}px Calibri, sans-serif`,\n            fill: new OlFill({\n              color: \"black\"\n            }),\n            backgroundFill: new OlFill({\n              color: \"orange\"\n            }),\n            padding: [1, 1, 1, 1]\n          })\n        });\n        styles.push(style);\n      }\n      const style = new OlStyle({\n        fill: new OlFill(fillOpt),\n        stroke: new OlStroke(strokeOpt),\n        image: new OlCircle({\n          radius: 7,\n          fill: new OlFill({\n            color: \"#707070\"\n          })\n        })\n      });\n      styles.push(style);\n      return styles;\n    }\n\n    if (feature.get(\"layerName\") === \"population\") {\n      return bldEntrancePointsStyle(feature, resolution);\n    }\n\n    return defaultStyle(feature, resolution);\n  };\n  return styleFunction;\n}\n\nexport function getFeatureHighlightStyle() {\n  return [\n    new OlStyle({\n      fill: new OlFill({\n        color: [0, 0, 0, 0]\n      }),\n      stroke: new OlStroke({\n        color: \"#FF0000\",\n        width: 10\n      }),\n      image: new OlCircle({\n        radius: 10,\n        fill: new OlFill({\n          color: \"#FF0000\"\n        })\n      })\n    })\n  ];\n}\n\nexport function isochroneOverlayStyle(feature) {\n  if (feature.get(\"isVisible\") === false) {\n    return [];\n  } else {\n    return [\n      new OlStyle({\n        fill: new OlFill({\n          color: \"rgba(255, 0, 0, 0.3)\"\n        }),\n        stroke: new OlStroke({\n          color: \"#FF0000\",\n          width: 3\n        }),\n        image: new OlCircle({\n          radius: 5,\n          fill: new OlFill({\n            color: \"#FF0000\"\n          })\n        })\n      })\n    ];\n  }\n}\n\nexport function studyAreaASelectStyle() {\n  return [\n    new OlStyle({\n      fill: new OlFill({\n        color: \"rgba(255, 0, 0, 0.5)\"\n      }),\n      stroke: new OlStroke({\n        color: \"#FF0000\",\n        width: 5,\n        lineDash: [10, 10]\n      }),\n      image: new OlCircle({\n        radius: 10,\n        fill: new OlFill({\n          color: \"#FF0000\"\n        })\n      })\n    })\n  ];\n}\n\nexport function bldEntrancePointsStyle(feature, resolution) {\n  let radius = 8;\n  if (resolution > 4) {\n    return [];\n  }\n  const styles = [];\n  styles.push(\n    new OlStyle({\n      fill: new OlFill({\n        color: \"#800080\"\n      }),\n      stroke: new OlStroke({\n        color: \"#800080\",\n        width: radius\n      }),\n      image: new OlCircle({\n        radius: radius,\n        fill: new OlFill({\n          color: \"#800080\"\n        })\n      })\n    })\n  );\n  return styles;\n}\n\nexport const baseStyleDefs = {\n  boundaryStyle: () => {\n    return new OlStyle({\n      fill: new OlFill({\n        color: [0, 0, 0, 0]\n      }),\n      stroke: new OlStroke({\n        color: \"#707070\",\n        width: 5.5\n      })\n    });\n  },\n  subStudyAreaStyle: () => {\n    return new OlStyle({\n      fill: new OlFill({\n        color: \"rgba(127,127,191,0.3)\"\n      }),\n      stroke: new OlStroke({\n        color: \"rgba(127,127,191)\",\n        width: 2\n      })\n    });\n  }\n};\n\n/**\n * Mapillary styles -\n */\n\nexport const mapillaryStyleDefs = {\n  activeSequence: \"\",\n  baseOverlayStyle: map => {\n    const styleFunction = feature => {\n      // console.log(feature);\n      let color = \"rgba(53, 175, 109,0.7)\";\n      if (\n        [\n          feature.get(\"sequence\"),\n          feature.get(\"id\"),\n          feature.get(\"sequence_id\")\n        ].includes(mapillaryStyleDefs.activeSequence)\n      ) {\n        color = \"#30C2FF\";\n      }\n      const styleConfig = {\n        stroke: new OlStroke({\n          color: color,\n          width: 4\n        })\n      };\n      if (map.getView().getZoom() > 17) {\n        styleConfig.image = new OlCircle({\n          radius: 6,\n          fill: new OlFill({ color: color })\n        });\n      }\n      const style = new OlStyle(styleConfig);\n      return [style];\n    };\n    return styleFunction;\n  },\n  highlightStyle: feature => {\n    let styles = [];\n    const angle = feature.get(\"compass_angle\");\n    const skey = feature.get(\"sequence_id\");\n    if (angle) {\n      const wifiStyle = new OlStyle({\n        text: new OlText({\n          text: \"\\ue1d8\",\n          scale: 1,\n          font: '900 18px \"Material Icons\"',\n          offsetY: -10,\n          rotateWithView: true,\n          rotation: (angle * Math.PI) / 180,\n          fill: new OlFill({\n            color:\n              skey === mapillaryStyleDefs.activeSequence ? \"#30C2FF\" : \"#047d50\"\n          }),\n          stroke: new OlStroke({\n            color:\n              skey === mapillaryStyleDefs.activeSequence\n                ? \"#30C2FF\"\n                : \"#047d50\",\n            width: 3\n          })\n        })\n      });\n      styles.push(wifiStyle);\n    }\n    const circleStyle = new OlStyle({\n      text: new OlText({\n        text: \"\\uf111\",\n        scale: 0.9,\n        font: '900 18px \"Font Awesome 5 Free\"',\n        fill: new OlFill({\n          color:\n            skey === mapillaryStyleDefs.activeSequence ? \"#30C2FF\" : \"#047d50\"\n        }),\n        stroke: new OlStroke({ color: \"white\", width: 4 })\n      })\n    });\n    styles.push(circleStyle);\n    return styles;\n  },\n  circleSolidStyle: new OlStyle({\n    text: new OlText({\n      text: \"\\uf111\",\n      scale: 0.7,\n      font: '900 18px \"Font Awesome 5 Free\"',\n      fill: new OlFill({ color: \"red\" }),\n      stroke: new OlStroke({ color: \"white\", width: 4 })\n    })\n  }),\n  wifiStyle: new OlStyle({\n    text: new OlText({\n      text: \"\\ue1d8\",\n      scale: 1.2,\n      font: '900 18px \"Material Icons\"',\n      offsetY: -10,\n      rotation: 0,\n      fill: new OlFill({ color: \"red\" }),\n      stroke: new OlStroke({ color: \"red\", width: 3 })\n    })\n  }),\n  updateBearingStyle: bearing => {\n    const liveBearing = new OlStyle({\n      text: new OlText({\n        text: \"\\ue1d8\",\n        scale: 1.2,\n        font: '900 18px \"Material Icons\"',\n        offsetY: -10,\n        rotateWithView: true,\n        rotation: (bearing * Math.PI) / 180,\n        fill: new OlFill({ color: \"red\" }),\n        stroke: new OlStroke({ color: \"red\", width: 3 })\n      })\n    });\n    return [liveBearing, mapillaryStyleDefs.circleSolidStyle];\n  }\n};\n/**\n * PoisAois layer style ---------------------\n */\nconst poisAoisStyleCache = {};\nconst poisShadowStyle = new OlStyle({\n  image: new OlShadow({\n    radius: 15,\n    blur: 5,\n    offsetX: 0,\n    offsetY: 0,\n    fill: new OlFill({\n      color: \"rgba(0,0,0,0.5)\"\n    })\n  })\n});\n\nexport function poisAoisStyle(feature) {\n  const category = feature.get(\"category\");\n  if (!poisAoisStore.state.poisAois[category]) {\n    return [];\n  }\n  const poiIconConf = appStore.state.poiIcons[category];\n  if (!poiIconConf && !poiIconConf.color) return [];\n  const color = poiIconConf.color;\n\n  var st = [];\n  // ----AOIS-----\n  if ([\"MultiPolygon\", \"Polygon\"].includes(feature.getGeometry().getType())) {\n    if (!poisAoisStyleCache[category + color]) {\n      poisAoisStyleCache[category + color] = new OlStyle({\n        fill: new OlFill({\n          color: color\n        }),\n        stroke: new OlStroke({\n          color: color,\n          width: 1\n        })\n      });\n    }\n    st.push(poisAoisStyleCache[category + color]);\n    return st;\n  }\n  // ----POIS-----\n  // Shadow style\n  st.push(poisShadowStyle);\n  if (!poiIconConf || !poiIconConf.icon) {\n    return [];\n  }\n  const icon = poiIconConf.icon;\n  if (!poisAoisStyleCache[icon + color]) {\n    // Font style\n    poisAoisStyleCache[icon + color] = new OlStyle({\n      image: new OlFontSymbol({\n        form: \"marker\", //\"none|circle|poi|bubble|marker|coma|shield|blazon|bookmark|hexagon|diamond|triangle|sign|ban|lozenge|square a form that will enclose the glyph, default none\",\n        gradient: false,\n        glyph: icon,\n        text: \"\", // text to use if no glyph is defined\n        font: \"sans-serif\",\n        fontSize: 0.7,\n        fontStyle: \"900\",\n        radius: 20,\n        rotation: 0,\n        rotateWithView: false,\n        offsetY: -20,\n        color: color, // icon color\n        fill: new OlFill({\n          color: \"#fff\" // marker color\n        }),\n        stroke: new OlStroke({\n          color: color,\n          width: 2\n        })\n      }),\n      stroke: new OlStroke({\n        width: 2,\n        color: \"#f80\"\n      }),\n      fill: new OlFill({\n        color: [255, 136, 0, 0.6]\n      })\n    });\n  }\n  st.push(poisAoisStyleCache[icon + color]);\n  return st;\n}\n\nexport const stylesRef = {\n  poisAoisStyle: poisAoisStyle,\n  study_area_crop: baseStyleDefs.boundaryStyle,\n  sub_study_area: baseStyleDefs.subStudyAreaStyle\n};\n"]}]}