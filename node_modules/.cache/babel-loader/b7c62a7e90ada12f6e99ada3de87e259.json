{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/Map.vue","mtime":1657784243494},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _typeof from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\"; // ol imports\n\nimport Overlay from \"ol/Overlay\";\nimport Feature from \"ol/Feature\";\nimport VectorSource from \"ol/source/Vector\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorImageLayer from \"ol/layer/VectorImage\";\nimport LineString from \"ol/geom/LineString\";\nimport { transformExtent } from \"ol/proj\"; // style imports\n\nimport { getInfoStyle, studyAreaStyle, poisAoisStyle } from \"../../../style/OlStyleDefs\"; // import the app-wide EventBus\n\nimport { EventBus } from \"../../../EventBus\"; // utils imports\n\nimport { LayerFactory } from \"../../../factory/layer.js\";\nimport { humanize, isCssColor } from \"../../../utils/Helpers\";\nimport { getAllChildLayers } from \"../../../utils/Layer\";\nimport { geojsonToFeature } from \"../../../utils/MapUtils\";\nimport axios from \"axios\"; //Store imports\n\nimport { mapMutations, mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\"; //Map Controls\n\nimport OverlayPopup from \"./controls/Overlay\";\nimport MapLoadingProgressStatus from \"./controls/MapLoadingProgressStatus\";\nimport BackgroundSwitcher from \"./controls/BackgroundSwitcher\";\nimport FullScreen from \"./controls/Fullscreen\";\nimport Measure from \"./controls/Measure\";\nimport Search from \"./controls/Search.vue\";\nimport DoubleClickZoom from \"ol/interaction/DoubleClickZoom\";\nimport { defaults as defaultControls, Attribution } from \"ol/control\";\nimport { defaults as defaultInteractions } from \"ol/interaction\";\nimport { debounce } from \"../../../utils/Helpers\"; // Context menu\n\nimport ContextMenu from \"ol-contextmenu/dist/ol-contextmenu\";\nimport \"ol-contextmenu/dist/ol-contextmenu.min.css\"; // Indicators Chart\n\nimport IndicatorsChart from \"../../other/IndicatorsChart\";\nimport { GET_POIS_AOIS } from \"../../../store/actions.type\";\nexport default {\n  components: {\n    \"overlay-popup\": OverlayPopup,\n    \"progress-status\": MapLoadingProgressStatus,\n    \"background-switcher\": BackgroundSwitcher,\n    \"full-screen\": FullScreen,\n    \"indicators-chart\": IndicatorsChart,\n    \"search-map\": Search,\n    measure: Measure\n  },\n  name: \"app-ol-map\",\n  props: {\n    miniViewOlMap: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      queryableLayers: [],\n      activeInteractions: [],\n      popup: {\n        rawHtml: null,\n        title: \"info\",\n        isVisible: false,\n        currentLayerIndex: 0\n      },\n      getInfoResult: [],\n      limitedVisibilityLayers: [],\n      visibilityLayerSnackbar: {\n        state: false,\n        message: \"\",\n        timeout: 8000\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var me = this; // Make the OL map accessible for Mapable mixin even 'ol-map-mounted' has\n    // already been fired. Don not use directly in cmps, use Mapable instead.\n\n    Vue.prototype.$map = me.map; // Send the event 'ol-map-mounted' with the OL map as payload\n\n    EventBus.$emit(\"ol-map-mounted\", me.map); //Add map to the vuex store.\n    // resize the map, so it fits to parent\n\n    window.setTimeout(function () {\n      me.map.setTarget(document.getElementById(\"ol-map-container\"));\n      me.map.updateSize(); // adjust the bg color of the OL buttons (like zoom, rotate north, ...)\n\n      me.setOlButtonColor();\n      me.setupMapHover(); //Get Info\n\n      me.setupMapClick();\n      me.setupMapPointerMove();\n      me.createPopupOverlay();\n      EventBus.$on(\"toggleLayerVisiblity\", _this.showNonVisibleLayersInfo);\n    }, 200);\n  },\n  created: function created() {\n    var me = this; // Make map rotateable according to property\n\n    var attribution = new Attribution({\n      collapsible: true,\n      collapsed: false\n    }); //Need to reference as we should deactive double click zoom when there\n    //are active interaction like draw/modify\n\n    this.dblClickZoomInteraction = new DoubleClickZoom();\n    me.map = new Map({\n      layers: [],\n      interactions: defaultInteractions({\n        doubleClickZoom: false,\n        mouseWheelZoom: true\n      }).extend([this.dblClickZoomInteraction]),\n      controls: defaultControls({\n        attribution: false,\n        zoom: false\n      }).extend([attribution]),\n      view: new View({\n        extent: me.studyArea[0].get(\"bounds\"),\n        center: me.appConfig.map.center || [0, 0],\n        zoom: me.appConfig.map.zoom,\n        minZoom: me.appConfig.map.minZoom,\n        maxZoom: me.appConfig.map.maxZoom || 19\n      })\n    }); // Get study area\n\n    me.createStudyAreaLayer(); // Create poisaoisLayer\n\n    me.createPoisAoisLayer(); // Create layers from config and add them to map\n\n    var layers = me.createLayers();\n    me.map.getLayers().extend(layers);\n    me.createGetInfoLayer(); // Setup context menu (right-click)\n\n    me.setupContentMenu(); // Event bus setup for managing interactions\n\n    EventBus.$on(\"ol-interaction-activated\", function (startedInteraction) {\n      me.activeInteractions.push(startedInteraction);\n    });\n    EventBus.$on(\"ol-interaction-stoped\", function (stopedInteraction) {\n      me.activeInteractions = Array.from(new Set(me.activeInteractions));\n      me.activeInteractions = me.activeInteractions.filter(function (interaction) {\n        return interaction !== stopedInteraction;\n      });\n    });\n  },\n  methods: _objectSpread({\n    /**\n     * Creates the OL layers due to the map \"layers\" array in app config.\n     * @return {ol.layer.Base[]} Array of OL layer instances\n     */\n    createLayers: function createLayers() {\n      var _this2 = this;\n\n      var layers = [];\n      this.appConfig.layer_groups.forEach(function (group) {\n        var groupName = Object.keys(group)[0];\n        group[groupName].children.forEach(function (lConf) {\n          var layerName = Object.keys(lConf)[0];\n          lConf = lConf[layerName];\n          lConf.name = layerName;\n\n          if (lConf.type) {\n            try {\n              var olLayer = LayerFactory.getInstance(_objectSpread({\n                group: groupName\n              }, lConf));\n\n              if (olLayer.get(\"name\") === \"sub_study_area\") {\n                _this2.subStudyAreaLayer = olLayer;\n              }\n\n              if (olLayer) {\n                if (![Infinity, undefined, null].includes(olLayer.getMaxResolution())) {\n                  _this2.limitedVisibilityLayers.push(olLayer);\n                }\n\n                layers.push(olLayer);\n              }\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        });\n      });\n      return layers;\n    },\n\n    /**\n     * Creates the study area layer.\n     */\n    createStudyAreaLayer: function createStudyAreaLayer() {\n      var source = new VectorSource({\n        wrapX: false\n      });\n      var vector = new VectorImageLayer({\n        name: \"study_area\",\n        displayInLayerList: true,\n        type: \"VECTOR\",\n        group: \"buildings_landuse\",\n        zIndex: 100,\n        source: source,\n        style: studyAreaStyle\n      });\n      this.getInfoLayerSource = source;\n      source.addFeature(this.studyArea[0]);\n      this.map.addLayer(vector);\n      this.map.getView().fit(source.getExtent());\n    },\n\n    /**\n     * Creates pois aois layer\n     */\n    createPoisAoisLayer: function createPoisAoisLayer() {\n      var vector = new VectorLayer({\n        name: \"pois_aois_layer\",\n        type: \"VECTOR\",\n        displayInLayerList: false,\n        queryable: true,\n        zIndex: 99,\n        source: new VectorSource(),\n        style: poisAoisStyle\n      });\n      this.map.addLayer(vector);\n      this.poisAoisLayer = vector;\n      this.$store.dispatch(\"poisaois/\".concat(GET_POIS_AOIS));\n    },\n\n    /**\n     * Creates a layer to visualize selected GetInfo features.\n     */\n    createGetInfoLayer: function createGetInfoLayer() {\n      var source = new VectorSource({\n        wrapX: false\n      });\n      var vector = new VectorLayer({\n        name: \"get_info\",\n        displayInLayerList: false,\n        zIndex: 100,\n        source: source,\n        style: getInfoStyle()\n      });\n      this.getInfoLayerSource = source;\n      this.map.addLayer(vector);\n    },\n\n    /**\n     * Map hover used for helper tooltips.\n     */\n    setupMapHover: function setupMapHover() {\n      var me = this;\n      var map = me.map; //Adds map helptooltip overlay\n\n      var helptooltipOverlayEl = document.createElement(\"div\");\n      var helptooltipCurrentMessage = me.helpTooltip.currentMessage;\n      helptooltipOverlayEl.className = \"tooltip tooltip-help\";\n      var helptooltipOverlay = new Overlay({\n        element: helptooltipOverlayEl,\n        offset: [15, 15],\n        positioning: \"top-left\"\n      });\n      helptooltipOverlay.setPosition(undefined);\n      helptooltipOverlayEl.innerHTML = helptooltipCurrentMessage;\n      map.addOverlay(helptooltipOverlay); //Init map hover event\n\n      map.on(\"pointermove\", function (event) {\n        //Check helptooltip status\n        if (me.helpTooltip.isActive) {\n          helptooltipOverlay.setPosition(event.coordinate);\n\n          if (me.helpTooltip.currentMessage !== helptooltipCurrentMessage) {\n            helptooltipOverlayEl.innerHTML = me.helpTooltip.currentMessage;\n            helptooltipCurrentMessage = me.helpTooltip.currentMessage;\n          }\n        } else {\n          if (helptooltipOverlay.getPosition() !== undefined) {\n            helptooltipOverlay.setPosition(undefined);\n          }\n        }\n      }); // Show snackbar info when layers aren't visible in the current resolution\n\n      map.getView().on(\"change:resolution\", this.showNonVisibleLayersInfo);\n    },\n\n    /**\n     * Sets the background color of the OL buttons to the color property.\n     */\n    setOlButtonColor: function setOlButtonColor() {\n      var me = this;\n\n      if (isCssColor(me.appColor.primary)) {\n        // directly apply the given CSS color\n        var rotateEl = document.querySelector(\".ol-rotate\");\n\n        if (rotateEl) {\n          rotateEl.className += \" elevation-5\";\n          rotateEl.borderRadius = \"40px\";\n          var rotateElStyle = document.querySelector(\".ol-rotate .ol-rotate-reset\").style;\n          rotateElStyle.backgroundColor = me.appColor.primary;\n          rotateElStyle.borderRadius = \"40px\";\n        }\n\n        var attrEl = document.querySelector(\".ol-attribution\");\n\n        if (attrEl) {\n          attrEl.className += \" elevation-5\";\n          var elStyle = document.querySelector(\".ol-attribution button[type='button']\").style;\n          elStyle.backgroundColor = me.appColor.primary;\n          elStyle.borderRadius = \"40px\";\n        }\n      } else {\n        // apply vuetify color by transforming the color to the corresponding\n        // CSS class (see https://vuetifyjs.com/en/framework/colors)\n        var _me$appColor$primary$ = me.appColor.primary.toString().trim().split(\" \", 2),\n            _me$appColor$primary$2 = _slicedToArray(_me$appColor$primary$, 2),\n            colorName = _me$appColor$primary$2[0],\n            colorModifier = _me$appColor$primary$2[1];\n\n        if (document.querySelector(\".ol-rotate\")) {\n          document.querySelector(\".ol-rotate .ol-rotate-reset\").classList.add(colorName);\n          document.querySelector(\".ol-rotate .ol-rotate-reset\").classList.add(colorModifier);\n        }\n      }\n    },\n\n    /**\n     * Show popup for the get info module.\n     */\n    createPopupOverlay: function createPopupOverlay() {\n      var me = this;\n      me.popupOverlay = new Overlay({\n        element: me.$refs.popup.$el,\n        autoPan: false,\n        autoPanMargin: 40,\n        positioning: \"bottom-left\",\n        autoPanAnimation: {\n          duration: 250\n        }\n      });\n      me.map.addOverlay(me.popupOverlay);\n    },\n\n    /**\n     * Closes the popup if user click X button.\n     */\n    closePopup: function closePopup() {\n      var me = this;\n\n      if (me.popupOverlay) {\n        me.popupOverlay.setPosition(undefined);\n        me.popup.isVisible = false;\n      }\n\n      me.getInfoResult = [];\n      me.popup.currentLayerIndex = 0;\n\n      if (me.getInfoLayerSource) {\n        me.getInfoLayerSource.clear();\n      }\n    },\n\n    /**\n     * Show getInfo popup.\n     */\n    showPopup: function showPopup(coordinate) {\n      // Clear highligh feature\n      this.getInfoLayerSource.clear();\n      var infoFeature = this.getInfoResult[this.popup.currentLayerIndex];\n      var position = infoFeature.getGeometry() ? infoFeature.getGeometry().getCoordinates() : coordinate; // Add highlight feature\n\n      this.getInfoLayerSource.addFeature(this.getInfoResult[this.popup.currentLayerIndex]);\n\n      while (position && Array.isArray(position[0])) {\n        position = position[0];\n      }\n\n      this.map.getView().animate({\n        center: position,\n        duration: 400\n      });\n      this.popupOverlay.setPosition(position);\n      this.popup.isVisible = true;\n      this.popup.title = \"info\";\n    },\n\n    /**\n     * Map pointer move event .\n     */\n    setupMapPointerMove: function setupMapPointerMove() {\n      var _this3 = this;\n\n      this.mapPointerMoveListenerKey = this.map.on(\"pointermove\", function (evt) {\n        if (evt.dragging || _this3.activeInteractions.length > 0 || !_this3.isochroneLayer) {\n          return;\n        }\n\n        var features = _this3.map.getFeaturesAtPixel(evt.pixel, {\n          layerFilter: function layerFilter(candidate) {\n            if ([\"isochrone_layer\", \"pois_aois_layer\"].includes(candidate.get(\"name\"))) {\n              return true;\n            }\n\n            return false;\n          }\n        });\n\n        var style = _this3.map.getTarget().style;\n\n        if (!style) return false;\n\n        if (features.length > 0) {\n          style.cursor = \"pointer\";\n        } else {\n          style.cursor = \"\";\n        }\n      });\n    },\n\n    /**\n     * Right click menu .\n     */\n    setupContentMenu: function setupContentMenu() {\n      var _this4 = this;\n\n      var contextMenu = new ContextMenu({\n        width: 170,\n        defaultItems: true // defaultItems are (for now) Zoom In/Zoom Out\n\n      }); // Rename default items\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = contextMenu.getDefaultItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.text === \"Zoom In\") {\n            item.text = this.$t(\"map.contextMenu.zoomIn\");\n            item.label = \"zoomIn\";\n          } else if (item.text === \"Zoom Out\") {\n            item.text = this.$t(\"map.contextMenu.zoomOut\");\n            item.label = \"zoomOut\";\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.setContextMenu(contextMenu);\n      this.map.addControl(contextMenu); // Before open event\n\n      contextMenu.on(\"beforeopen\", function () {\n        var defaultItems = contextMenu.getDefaultItems();\n        defaultItems.forEach(function (defaultItem) {\n          defaultItem.text = _this4.$t(\"map.contextMenu.\".concat(defaultItem.label));\n        });\n        contextMenu.clear();\n        contextMenu.extend(defaultItems);\n      });\n    },\n\n    /**\n     * Map click event for Module.\n     */\n    setupMapClick: function setupMapClick() {\n      var me = this;\n      var map = me.map;\n      me.mapClickListenerKey = map.on(\"click\", function (evt) {\n        me.closePopup();\n\n        if (me.activeInteractions.length > 0) {\n          return;\n        } //Check for isochrone features\n\n\n        var isochroneFeatures = me.map.getFeaturesAtPixel(evt.pixel, {\n          layerFilter: function layerFilter(candidate) {\n            if (candidate.get(\"name\") === \"isochrone_layer\") {\n              return true;\n            }\n\n            return false;\n          }\n        });\n        var otherFeatures = me.map.getFeaturesAtPixel(evt.pixel, {\n          layerFilter: function layerFilter(candidate) {\n            if (candidate.get(\"name\") !== \"isochrone_layer\") {\n              return true;\n            }\n\n            return false;\n          }\n        });\n\n        if (isochroneFeatures.length > 0 && otherFeatures.length === 0) {\n          // Toggle thematic data for isochrone window\n          var isochroneFeature = isochroneFeatures[0];\n          EventBus.$emit(\"show-isochrone-window\", isochroneFeature.get(\"calculationNumber\"));\n          return;\n        }\n\n        me.queryableLayers = getAllChildLayers(me.map).filter(function (layer) {\n          return layer.get(\"queryable\") === true && layer.getVisible() === true;\n        }); //WMS Requests\n\n        var promiseArray = [];\n        me.queryableLayers.forEach(function (layer) {\n          var layerType = layer.get(\"type\");\n\n          switch (layerType) {\n            case \"WFS\":\n            case \"VECTOR\":\n            case \"MVT\":\n            case \"GEOBUF\":\n            case \"VECTORTILE\":\n              {\n                var selectedFeatures = me.map.getFeaturesAtPixel(evt.pixel, {\n                  hitTolerance: 4,\n                  layerFilter: function layerFilter(layerCandidate) {\n                    return layerCandidate.get(\"name\") === layer.get(\"name\");\n                  }\n                });\n\n                if (selectedFeatures !== null && selectedFeatures.length > 0) {\n                  //TODO: If there are more then 2 features selected get the closest one to coordinate rather than the first element\n                  var clonedFeature;\n\n                  if (!selectedFeatures[0].clone) {\n                    // !!! Workaround for vector tile features.\n                    var vtProps = {\n                      layerName: layer.get(\"name\"),\n                      osm_type: selectedFeatures[0].getType()\n                    };\n                    Object.assign(vtProps, selectedFeatures[0].getProperties());\n                    var flatCoordinates = selectedFeatures[0].getFlatCoordinates();\n\n                    if (flatCoordinates && flatCoordinates.length > 0) {\n                      var _coordinates = [];\n\n                      var _values = Object.values(flatCoordinates);\n\n                      for (var i = 0; i < _values.length; i += 2) {\n                        _coordinates.push(_values.slice(i, i + 2));\n                      }\n\n                      var geometry = new LineString(_coordinates, \"XY\");\n                      vtProps.geometry = geometry;\n                    }\n\n                    clonedFeature = new Feature(vtProps);\n                  } else {\n                    clonedFeature = selectedFeatures[0].clone();\n                    clonedFeature.set(\"layerName\", layer.get(\"name\"));\n                  }\n\n                  me.getInfoResult.push(clonedFeature);\n                }\n\n                break;\n              }\n\n            default:\n              break;\n          }\n        });\n\n        if (promiseArray.length > 0) {\n          console.log(promiseArray);\n          axios.all(promiseArray).then(function (results) {\n            console.log(results);\n            results.forEach(function (response) {\n              if (response && response.data && response.data.features) {\n                var features = response.data.features;\n                var layerName = JSON.parse(response.config.data).layerName;\n\n                if (features && features.length === 0) {\n                  return;\n                }\n\n                var olFeatures = geojsonToFeature(response.data, {});\n                olFeatures[0].set(\"layerName\", layerName);\n                me.getInfoResult.push(olFeatures[0]);\n              }\n            });\n\n            if (me.getInfoResult.length > 0) {\n              me.showPopup(evt.coordinate);\n            }\n          });\n        } else {\n          //Only for WFS layer\n          if (me.getInfoResult.length > 0) {\n            me.showPopup(evt.coordinate);\n          }\n        }\n      });\n    },\n    previousGetInfoLayer: function previousGetInfoLayer() {\n      this.popup.currentLayerIndex -= 1;\n      this.showPopup();\n    },\n    nextGetInfoLayer: function nextGetInfoLayer() {\n      this.popup.currentLayerIndex += 1;\n      this.showPopup();\n    },\n    showNonVisibleLayersInfo: debounce(function () {\n      var _this5 = this;\n\n      var currentResolution = this.map.getView().getResolution();\n      var notVisibleLayers = [];\n      this.limitedVisibilityLayers.forEach(function (layer) {\n        if (layer.getMaxResolution() && layer.getMaxResolution() < currentResolution && layer.getVisible()) {\n          var layerName = _this5.$te(\"map.layerName.\".concat(layer.get(\"name\"))) ? _this5.$t(\"map.layerName.\".concat(layer.get(\"name\"))) : layerName;\n          notVisibleLayers.push(layerName);\n        }\n      });\n\n      if (notVisibleLayers.length > 0) {\n        this.visibilityLayerSnackbar = {\n          state: true,\n          message: \"\".concat(this.$t(\"map.snackbarMessages.zoomInToShowFeatures\"), \": <b>\").concat(notVisibleLayers.toString(), \"</b>\"),\n          timeout: 80000\n        };\n      } else {\n        this.visibilityLayerSnackbar = {\n          state: false,\n          message: \"\",\n          timeout: 0\n        };\n      }\n    }, 200),\n    getOsmHrefLink: function getOsmHrefLink() {\n      var link = \"\";\n\n      if (this.currentInfoFeature && this.currentInfoFeature.get(\"osm_id\")) {\n        var feature = this.currentInfoFeature;\n        var type = feature.get(\"osm_type\");\n\n        if (!type && feature.get(\"orgin_geometry\")) {\n          var originGeometry = feature.getProperties()[\"orgin_geometry\"] || feature.getGeometry().getType().toLowerCase();\n\n          switch (originGeometry) {\n            case \"polygon\":\n            case \"multipolygon\":\n            case \"linestring\":\n              type = \"way\";\n              break;\n\n            case \"point\":\n              type = \"node\";\n              break;\n\n            default:\n              type = null;\n              break;\n          }\n        }\n\n        link = \"https://www.openstreetmap.org/edit?editor=id&\" + \"\".concat(type) + \"=\".concat(feature.get(\"osm_id\"));\n      }\n\n      return link;\n    },\n    getPopupTitle: function getPopupTitle() {\n      if (this.getInfoResult[this.popup.currentLayerIndex]) {\n        var layer = this.getInfoResult[this.popup.currentLayerIndex];\n        var canTranslate = this.$te(\"map.layerName.\".concat(layer.get(\"layerName\")));\n\n        if (canTranslate) {\n          return this.$t(\"map.layerName.\".concat(layer.get(\"layerName\")));\n        } else {\n          return layer.get(\"layerName\");\n        }\n      } else {\n        return \"\";\n      }\n    },\n    transformExtent: transformExtent,\n    showMiniViewer: function showMiniViewer() {\n      this.miniViewerVisible = true;\n      this.isMapillaryBtnDisabled = true;\n    }\n  }, mapMutations(\"map\", {\n    setContextMenu: \"SET_CONTEXTMENU\",\n    setLayer: \"SET_LAYER\",\n    toggleSnackbar: \"TOGGLE_SNACKBAR\"\n  }), {}, mapMutations(\"pois\", {\n    init: \"INIT\"\n  })),\n  computed: _objectSpread({}, mapFields(\"map\", {\n    subStudyAreaLayer: \"subStudyAreaLayer\",\n    selectedEditLayer: \"selectedEditLayer\",\n    isMapillaryBtnDisabled: \"isMapillaryBtnDisabled\",\n    miniViewerVisible: \"miniViewerVisible\"\n  }), {}, mapFields(\"poisaois\", {\n    poisAoisLayer: \"poisAoisLayer\",\n    selectedPoisAois: \"selectedPoisAois\",\n    poisAois: \"poisAois\"\n  }), {}, mapGetters(\"map\", {\n    studyArea: \"studyArea\",\n    helpTooltip: \"helpTooltip\",\n    currentMessage: \"currentMessage\",\n    layers: \"layers\"\n  }), {}, mapGetters(\"app\", {\n    appColor: \"appColor\",\n    appConfig: \"appConfig\",\n    scenarioLayerEditModeColor: \"scenarioLayerEditModeColor\",\n    isRecomputingHeatmap: \"isRecomputingHeatmap\",\n    calculationMode: \"calculationMode\"\n  }), {}, mapGetters(\"isochrones\", {\n    isochroneLayer: \"isochroneLayer\",\n    options: \"options\"\n  }), {}, mapGetters(\"scenarios\", {\n    activeScenario: \"activeScenario\"\n  }), {}, mapGetters(\"loader\", {\n    isNetworkBusy: \"isNetworkBusy\"\n  }), {\n    currentInfo: function currentInfo() {\n      var feature = this.getInfoResult[this.popup.currentLayerIndex];\n      if (!feature) return;\n      var props = feature.getProperties();\n      var transformed = [];\n      var excludedProperties = [\"uid\", \"id\", \"geometry\", \"geom\", \"orgin_geometry\", \"osm_id\", \"gid\", \"layerName\"];\n      Object.keys(props).forEach(function (k) {\n        if (!excludedProperties.includes(k) && !_typeof(k) !== \"object\") {\n          transformed.push({\n            property: humanize(k),\n            value: !props[k] ? \"---\" : props[k]\n          });\n        }\n      });\n      return transformed;\n    },\n    currentInfoFeature: function currentInfoFeature() {\n      return this.getInfoResult[this.popup.currentLayerIndex];\n    }\n  }),\n  watch: {\n    activeInteractions: function activeInteractions() {\n      if (!this.dblClickZoomInteraction) return;\n\n      if (this.activeInteractions.length > 0) {\n        this.dblClickZoomInteraction.setActive(false);\n      } else {\n        this.dblClickZoomInteraction.setActive(true);\n      }\n    },\n    appColor: function appColor() {\n      this.setOlButtonColor();\n    },\n    // Edge case for pois layer style. We have to restructure the state of selected pois as a key value pair (category: state)\n    // in order to use it in the style (getters can't be accessed outside vue component).\n    // As the selectedPoisState is also changed from editing component\n    // this should be watched here as it might be that poisAoisTree component is not rendered yet.\n    selectedPoisAois: function selectedPoisAois(selected) {\n      var poisAois = {};\n      selected.forEach(function (item) {\n        poisAois[item.value] = true;\n      });\n      this.poisAois = poisAois;\n      this.poisAoisLayer.changed();\n    }\n  }\n};",{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"ol-map-container\">\n    <!-- Map Controls -->\n    <div style=\"position:absolute;left:20px;top:10px;\">\n      <search-map\n        :viewbox=\"\n          transformExtent(studyArea[0].get('bounds'), 'EPSG:3857', 'EPSG:4326')\n        \"\n        class=\"mb-2\"\n        :map=\"map\"\n        v-show=\"!miniViewOlMap\"\n        :color=\"appColor.primary\"\n      />\n      <full-screen\n        class=\"mb-2\"\n        v-show=\"!miniViewOlMap\"\n        :color=\"appColor.primary\"\n      />\n      <measure class=\"mb-2\" v-show=\"!miniViewOlMap\" :color=\"appColor.primary\" />\n      <!-- toggle-streetview -->\n      <v-tooltip right>\n        <template v-slot:activator=\"{ on }\">\n          <v-btn\n            style=\"z-index: 1;\"\n            fab\n            dark\n            x-small\n            v-show=\"!miniViewOlMap\"\n            :color=\"appColor.primary\"\n            @click=\"showMiniViewer\"\n            :loading=\"isMapillaryBtnDisabled\"\n            v-on=\"on\"\n          >\n            <v-icon dark>streetview</v-icon>\n          </v-btn>\n        </template>\n        <span>{{ $t(`map.tooltips.toggleStreetView`) }}</span>\n      </v-tooltip>\n    </div>\n\n    <progress-status />\n    <background-switcher v-show=\"!miniViewOlMap\" />\n    <!-- Popup overlay  -->\n    <overlay-popup\n      :color=\"appColor.primary\"\n      :title=\"getPopupTitle()\"\n      v-show=\"popup.isVisible && miniViewOlMap === false\"\n      ref=\"popup\"\n    >\n      <v-btn icon>\n        <v-icon>close</v-icon>\n      </v-btn>\n      <template v-slot:close>\n        <template v-if=\"getInfoResult.length > 1\">\n          <span\n            >({{ popup.currentLayerIndex + 1 }} of\n            {{ getInfoResult.length }})</span\n          >\n          <v-icon\n            :disabled=\"popup.currentLayerIndex === 0\"\n            style=\"cursor:pointer;\"\n            @click=\"previousGetInfoLayer()\"\n            >chevron_left</v-icon\n          >\n          <v-icon\n            :disabled=\"popup.currentLayerIndex === getInfoResult.length - 1\"\n            style=\"cursor:pointer;\"\n            @click=\"nextGetInfoLayer()\"\n            >chevron_right</v-icon\n          >\n        </template>\n        <v-btn @click=\"closePopup()\" icon>\n          <v-icon>close</v-icon>\n        </v-btn>\n      </template>\n      <template v-slot:body>\n        <a\n          v-if=\"currentInfoFeature && currentInfoFeature.get('osm_id')\"\n          style=\"text-decoration:none;\"\n          :href=\"getOsmHrefLink()\"\n          target=\"_blank\"\n          title=\"\"\n        >\n          <i class=\"fa fa-edit\"></i> {{ $t(\"map.popup.editWithOsm\") }}</a\n        >\n\n        <div\n          style=\"max-height:800px;overflow:hidden;\"\n          v-if=\"getInfoResult[popup.currentLayerIndex]\"\n        >\n          <vue-scroll>\n            <v-simple-table\n              v-if=\"\n                getInfoResult[popup.currentLayerIndex].get('layerName') !==\n                  'footpath_visualization'\n              \"\n              dense\n              class=\"pr-2\"\n            >\n              <template v-slot:default>\n                <tbody>\n                  <tr v-for=\"item in currentInfo\" :key=\"item.property\">\n                    <td>{{ item.property }}</td>\n                    <td>{{ item.value }}</td>\n                  </tr>\n                </tbody>\n              </template>\n            </v-simple-table>\n            <div v-else>\n              <indicators-chart\n                class=\"mr-4\"\n                :feature=\"getInfoResult[popup.currentLayerIndex]\"\n              ></indicators-chart>\n            </div>\n          </vue-scroll>\n        </div>\n      </template>\n    </overlay-popup>\n    <!-- Info Snackbar for not visible layers. -->\n    <v-snackbar\n      :color=\"appColor.primary\"\n      top\n      :timeout=\"visibilityLayerSnackbar.timeout\"\n      v-model=\"visibilityLayerSnackbar.state\"\n    >\n      <v-icon color=\"white\" class=\"mr-3\">\n        info\n      </v-icon>\n      <span v-html=\"visibilityLayerSnackbar.message\"></span>\n      <v-btn text @click=\"visibilityLayerSnackbar.state = false\">\n        <v-icon>close</v-icon>\n      </v-btn>\n    </v-snackbar>\n\n    <!-- Info snackbar when editing a layer -->\n    <v-snackbar\n      :color=\"selectedEditLayer ? scenarioLayerEditModeColor : appColor.primary\"\n      v-if=\"activeScenario\"\n      :timeout=\"0\"\n      style=\"font-size:16px;\"\n      :value=\"activeScenario ? true : false\"\n    >\n      <v-select\n        :style=\"\n          selectedEditLayer\n            ? `border-right: 1px solid grey;width: 200px;`\n            : 'width: 150px;'\n        \"\n        dark\n        hide-details\n        :class=\"{\n          'mx-3 mt-0 pt-0': true,\n          'pr-4': !!selectedEditLayer\n        }\"\n        :items=\"calculationMode.values\"\n        v-model=\"calculationMode.active\"\n      >\n        <template slot=\"selection\" slot-scope=\"{ item }\">\n          {{\n            $te(`isochrones.options.${item}`)\n              ? $t(`isochrones.options.${item}`).toUpperCase()\n              : item.toUpperCase()\n          }}\n        </template>\n        <template slot=\"item\" slot-scope=\"{ item }\">\n          {{\n            $te(`isochrones.options.${item}`)\n              ? $t(`isochrones.options.${item}`).toUpperCase()\n              : item.toUpperCase()\n          }}\n        </template>\n      </v-select>\n      <span v-if=\"selectedEditLayer\" class=\"h2\"\n        >{{\n          $te(`map.snackbarMessages.scenarioEditMode`)\n            ? $t(`map.snackbarMessages.scenarioEditMode`).toUpperCase()\n            : \"EDIT MODE\"\n        }}\n      </span>\n      <v-btn\n        v-if=\"selectedEditLayer\"\n        color=\"error\"\n        text\n        @click=\"selectedEditLayer = null\"\n      >\n        {{ $te(`buttonLabels.exit`) ? $t(`buttonLabels.exit`) : \"Exit\" }}\n      </v-btn>\n    </v-snackbar>\n    <v-snackbar\n      :color=\"appColor.primary\"\n      v-if=\"isRecomputingHeatmap\"\n      :timeout=\"0\"\n      top\n      center\n      style=\"font-size:14px;\"\n      :value=\"isRecomputingHeatmap\"\n    >\n      <span\n        >{{\n          $te(`heatmap.recomputingHeatmaps`)\n            ? $t(`heatmap.recomputingHeatmaps`)\n            : \"Recomputing Heatmaps... \"\n        }}\n      </span>\n      <v-progress-circular indeterminate color=\"white\"></v-progress-circular>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\n\n// ol imports\nimport Overlay from \"ol/Overlay\";\nimport Feature from \"ol/Feature\";\nimport VectorSource from \"ol/source/Vector\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorImageLayer from \"ol/layer/VectorImage\";\nimport LineString from \"ol/geom/LineString\";\nimport { transformExtent } from \"ol/proj\";\n\n// style imports\nimport {\n  getInfoStyle,\n  studyAreaStyle,\n  poisAoisStyle\n} from \"../../../style/OlStyleDefs\";\n// import the app-wide EventBus\nimport { EventBus } from \"../../../EventBus\";\n\n// utils imports\nimport { LayerFactory } from \"../../../factory/layer.js\";\nimport { humanize, isCssColor } from \"../../../utils/Helpers\";\nimport { getAllChildLayers } from \"../../../utils/Layer\";\nimport { geojsonToFeature } from \"../../../utils/MapUtils\";\nimport axios from \"axios\";\n\n//Store imports\nimport { mapMutations, mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\n\n//Map Controls\nimport OverlayPopup from \"./controls/Overlay\";\nimport MapLoadingProgressStatus from \"./controls/MapLoadingProgressStatus\";\nimport BackgroundSwitcher from \"./controls/BackgroundSwitcher\";\nimport FullScreen from \"./controls/Fullscreen\";\nimport Measure from \"./controls/Measure\";\nimport Search from \"./controls/Search.vue\";\nimport DoubleClickZoom from \"ol/interaction/DoubleClickZoom\";\n\nimport { defaults as defaultControls, Attribution } from \"ol/control\";\nimport { defaults as defaultInteractions } from \"ol/interaction\";\n\nimport { debounce } from \"../../../utils/Helpers\";\n// Context menu\nimport ContextMenu from \"ol-contextmenu/dist/ol-contextmenu\";\nimport \"ol-contextmenu/dist/ol-contextmenu.min.css\";\n\n// Indicators Chart\nimport IndicatorsChart from \"../../other/IndicatorsChart\";\nimport { GET_POIS_AOIS } from \"../../../store/actions.type\";\n\nexport default {\n  components: {\n    \"overlay-popup\": OverlayPopup,\n    \"progress-status\": MapLoadingProgressStatus,\n    \"background-switcher\": BackgroundSwitcher,\n    \"full-screen\": FullScreen,\n    \"indicators-chart\": IndicatorsChart,\n    \"search-map\": Search,\n    measure: Measure\n  },\n  name: \"app-ol-map\",\n  props: {\n    miniViewOlMap: { type: Boolean, required: true, default: false }\n  },\n  data() {\n    return {\n      queryableLayers: [],\n      activeInteractions: [],\n      popup: {\n        rawHtml: null,\n        title: \"info\",\n        isVisible: false,\n        currentLayerIndex: 0\n      },\n      getInfoResult: [],\n      limitedVisibilityLayers: [],\n      visibilityLayerSnackbar: {\n        state: false,\n        message: \"\",\n        timeout: 8000\n      }\n    };\n  },\n  mounted() {\n    var me = this;\n    // Make the OL map accessible for Mapable mixin even 'ol-map-mounted' has\n    // already been fired. Don not use directly in cmps, use Mapable instead.\n    Vue.prototype.$map = me.map;\n    // Send the event 'ol-map-mounted' with the OL map as payload\n    EventBus.$emit(\"ol-map-mounted\", me.map);\n    //Add map to the vuex store.\n    // resize the map, so it fits to parent\n    window.setTimeout(() => {\n      me.map.setTarget(document.getElementById(\"ol-map-container\"));\n      me.map.updateSize();\n      // adjust the bg color of the OL buttons (like zoom, rotate north, ...)\n      me.setOlButtonColor();\n      me.setupMapHover();\n      //Get Info\n      me.setupMapClick();\n      me.setupMapPointerMove();\n      me.createPopupOverlay();\n      EventBus.$on(\"toggleLayerVisiblity\", this.showNonVisibleLayersInfo);\n    }, 200);\n  },\n  created() {\n    var me = this;\n    // Make map rotateable according to property\n    const attribution = new Attribution({\n      collapsible: true,\n      collapsed: false\n    });\n\n    //Need to reference as we should deactive double click zoom when there\n    //are active interaction like draw/modify\n    this.dblClickZoomInteraction = new DoubleClickZoom();\n    me.map = new Map({\n      layers: [],\n      interactions: defaultInteractions({\n        doubleClickZoom: false,\n        mouseWheelZoom: true\n      }).extend([this.dblClickZoomInteraction]),\n      controls: defaultControls({\n        attribution: false,\n        zoom: false\n      }).extend([attribution]),\n      view: new View({\n        extent: me.studyArea[0].get(\"bounds\"),\n        center: me.appConfig.map.center || [0, 0],\n        zoom: me.appConfig.map.zoom,\n        minZoom: me.appConfig.map.minZoom,\n        maxZoom: me.appConfig.map.maxZoom || 19\n      })\n    });\n    // Get study area\n    me.createStudyAreaLayer();\n    // Create poisaoisLayer\n    me.createPoisAoisLayer();\n    // Create layers from config and add them to map\n    const layers = me.createLayers();\n    me.map.getLayers().extend(layers);\n    me.createGetInfoLayer();\n\n    // Setup context menu (right-click)\n    me.setupContentMenu();\n    // Event bus setup for managing interactions\n    EventBus.$on(\"ol-interaction-activated\", startedInteraction => {\n      me.activeInteractions.push(startedInteraction);\n    });\n    EventBus.$on(\"ol-interaction-stoped\", stopedInteraction => {\n      me.activeInteractions = Array.from(new Set(me.activeInteractions));\n      me.activeInteractions = me.activeInteractions.filter(interaction => {\n        return interaction !== stopedInteraction;\n      });\n    });\n  },\n\n  methods: {\n    /**\n     * Creates the OL layers due to the map \"layers\" array in app config.\n     * @return {ol.layer.Base[]} Array of OL layer instances\n     */\n    createLayers() {\n      let layers = [];\n      this.appConfig.layer_groups.forEach(group => {\n        const groupName = Object.keys(group)[0];\n        group[groupName].children.forEach(lConf => {\n          const layerName = Object.keys(lConf)[0];\n          lConf = lConf[layerName];\n          lConf.name = layerName;\n          if (lConf.type) {\n            try {\n              const olLayer = LayerFactory.getInstance({\n                group: groupName,\n                ...lConf\n              });\n              if (olLayer.get(\"name\") === \"sub_study_area\") {\n                this.subStudyAreaLayer = olLayer;\n              }\n              if (olLayer) {\n                if (\n                  ![Infinity, undefined, null].includes(\n                    olLayer.getMaxResolution()\n                  )\n                ) {\n                  this.limitedVisibilityLayers.push(olLayer);\n                }\n                layers.push(olLayer);\n              }\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        });\n      });\n      return layers;\n    },\n    /**\n     * Creates the study area layer.\n     */\n    createStudyAreaLayer() {\n      const source = new VectorSource({\n        wrapX: false\n      });\n      const vector = new VectorImageLayer({\n        name: \"study_area\",\n        displayInLayerList: true,\n        type: \"VECTOR\",\n        group: \"buildings_landuse\",\n        zIndex: 100,\n        source: source,\n        style: studyAreaStyle\n      });\n      this.getInfoLayerSource = source;\n      source.addFeature(this.studyArea[0]);\n      this.map.addLayer(vector);\n      this.map.getView().fit(source.getExtent());\n    },\n    /**\n     * Creates pois aois layer\n     */\n    createPoisAoisLayer() {\n      const vector = new VectorLayer({\n        name: \"pois_aois_layer\",\n        type: \"VECTOR\",\n        displayInLayerList: false,\n        queryable: true,\n        zIndex: 99,\n        source: new VectorSource(),\n        style: poisAoisStyle\n      });\n      this.map.addLayer(vector);\n      this.poisAoisLayer = vector;\n      this.$store.dispatch(`poisaois/${GET_POIS_AOIS}`);\n    },\n\n    /**\n     * Creates a layer to visualize selected GetInfo features.\n     */\n    createGetInfoLayer() {\n      const source = new VectorSource({\n        wrapX: false\n      });\n      const vector = new VectorLayer({\n        name: \"get_info\",\n        displayInLayerList: false,\n        zIndex: 100,\n        source: source,\n        style: getInfoStyle()\n      });\n      this.getInfoLayerSource = source;\n      this.map.addLayer(vector);\n    },\n\n    /**\n     * Map hover used for helper tooltips.\n     */\n    setupMapHover() {\n      const me = this;\n      const map = me.map;\n\n      //Adds map helptooltip overlay\n      let helptooltipOverlayEl = document.createElement(\"div\");\n      let helptooltipCurrentMessage = me.helpTooltip.currentMessage;\n      helptooltipOverlayEl.className = \"tooltip tooltip-help\";\n      let helptooltipOverlay = new Overlay({\n        element: helptooltipOverlayEl,\n        offset: [15, 15],\n        positioning: \"top-left\"\n      });\n      helptooltipOverlay.setPosition(undefined);\n      helptooltipOverlayEl.innerHTML = helptooltipCurrentMessage;\n      map.addOverlay(helptooltipOverlay);\n\n      //Init map hover event\n\n      map.on(\"pointermove\", function(event) {\n        //Check helptooltip status\n        if (me.helpTooltip.isActive) {\n          helptooltipOverlay.setPosition(event.coordinate);\n          if (me.helpTooltip.currentMessage !== helptooltipCurrentMessage) {\n            helptooltipOverlayEl.innerHTML = me.helpTooltip.currentMessage;\n            helptooltipCurrentMessage = me.helpTooltip.currentMessage;\n          }\n        } else {\n          if (helptooltipOverlay.getPosition() !== undefined) {\n            helptooltipOverlay.setPosition(undefined);\n          }\n        }\n      });\n      // Show snackbar info when layers aren't visible in the current resolution\n      map.getView().on(\"change:resolution\", this.showNonVisibleLayersInfo);\n    },\n\n    /**\n     * Sets the background color of the OL buttons to the color property.\n     */\n    setOlButtonColor() {\n      var me = this;\n\n      if (isCssColor(me.appColor.primary)) {\n        // directly apply the given CSS color\n        const rotateEl = document.querySelector(\".ol-rotate\");\n        if (rotateEl) {\n          rotateEl.className += \" elevation-5\";\n          rotateEl.borderRadius = \"40px\";\n          const rotateElStyle = document.querySelector(\n            \".ol-rotate .ol-rotate-reset\"\n          ).style;\n          rotateElStyle.backgroundColor = me.appColor.primary;\n          rotateElStyle.borderRadius = \"40px\";\n        }\n        const attrEl = document.querySelector(\".ol-attribution\");\n        if (attrEl) {\n          attrEl.className += \" elevation-5\";\n          const elStyle = document.querySelector(\n            \".ol-attribution button[type='button']\"\n          ).style;\n          elStyle.backgroundColor = me.appColor.primary;\n          elStyle.borderRadius = \"40px\";\n        }\n      } else {\n        // apply vuetify color by transforming the color to the corresponding\n        // CSS class (see https://vuetifyjs.com/en/framework/colors)\n        const [colorName, colorModifier] = me.appColor.primary\n          .toString()\n          .trim()\n          .split(\" \", 2);\n\n        if (document.querySelector(\".ol-rotate\")) {\n          document\n            .querySelector(\".ol-rotate .ol-rotate-reset\")\n            .classList.add(colorName);\n          document\n            .querySelector(\".ol-rotate .ol-rotate-reset\")\n            .classList.add(colorModifier);\n        }\n      }\n    },\n\n    /**\n     * Show popup for the get info module.\n     */\n    createPopupOverlay() {\n      const me = this;\n      me.popupOverlay = new Overlay({\n        element: me.$refs.popup.$el,\n        autoPan: false,\n        autoPanMargin: 40,\n        positioning: \"bottom-left\",\n        autoPanAnimation: {\n          duration: 250\n        }\n      });\n      me.map.addOverlay(me.popupOverlay);\n    },\n\n    /**\n     * Closes the popup if user click X button.\n     */\n    closePopup() {\n      const me = this;\n      if (me.popupOverlay) {\n        me.popupOverlay.setPosition(undefined);\n        me.popup.isVisible = false;\n      }\n      me.getInfoResult = [];\n      me.popup.currentLayerIndex = 0;\n      if (me.getInfoLayerSource) {\n        me.getInfoLayerSource.clear();\n      }\n    },\n\n    /**\n     * Show getInfo popup.\n     */\n    showPopup(coordinate) {\n      // Clear highligh feature\n      this.getInfoLayerSource.clear();\n      const infoFeature = this.getInfoResult[this.popup.currentLayerIndex];\n      let position = infoFeature.getGeometry()\n        ? infoFeature.getGeometry().getCoordinates()\n        : coordinate;\n      // Add highlight feature\n      this.getInfoLayerSource.addFeature(\n        this.getInfoResult[this.popup.currentLayerIndex]\n      );\n      while (position && Array.isArray(position[0])) {\n        position = position[0];\n      }\n      this.map.getView().animate({\n        center: position,\n        duration: 400\n      });\n      this.popupOverlay.setPosition(position);\n      this.popup.isVisible = true;\n      this.popup.title = `info`;\n    },\n\n    /**\n     * Map pointer move event .\n     */\n    setupMapPointerMove() {\n      this.mapPointerMoveListenerKey = this.map.on(\"pointermove\", evt => {\n        if (\n          evt.dragging ||\n          this.activeInteractions.length > 0 ||\n          !this.isochroneLayer\n        ) {\n          return;\n        }\n        const features = this.map.getFeaturesAtPixel(evt.pixel, {\n          layerFilter: candidate => {\n            if (\n              [\"isochrone_layer\", \"pois_aois_layer\"].includes(\n                candidate.get(\"name\")\n              )\n            ) {\n              return true;\n            }\n            return false;\n          }\n        });\n        const style = this.map.getTarget().style;\n        if (!style) return false;\n        if (features.length > 0) {\n          style.cursor = \"pointer\";\n        } else {\n          style.cursor = \"\";\n        }\n      });\n    },\n\n    /**\n     * Right click menu .\n     */\n    setupContentMenu() {\n      const contextMenu = new ContextMenu({\n        width: 170,\n        defaultItems: true // defaultItems are (for now) Zoom In/Zoom Out\n      });\n\n      // Rename default items\n      for (let item of contextMenu.getDefaultItems()) {\n        if (item.text === \"Zoom In\") {\n          item.text = this.$t(\"map.contextMenu.zoomIn\");\n          item.label = \"zoomIn\";\n        } else if (item.text === \"Zoom Out\") {\n          item.text = this.$t(\"map.contextMenu.zoomOut\");\n          item.label = \"zoomOut\";\n        }\n      }\n\n      this.setContextMenu(contextMenu);\n      this.map.addControl(contextMenu);\n\n      // Before open event\n      contextMenu.on(\"beforeopen\", () => {\n        let defaultItems = contextMenu.getDefaultItems();\n        defaultItems.forEach(defaultItem => {\n          defaultItem.text = this.$t(`map.contextMenu.${defaultItem.label}`);\n        });\n        contextMenu.clear();\n        contextMenu.extend(defaultItems);\n      });\n    },\n\n    /**\n     * Map click event for Module.\n     */\n    setupMapClick() {\n      const me = this;\n      const map = me.map;\n      me.mapClickListenerKey = map.on(\"click\", evt => {\n        me.closePopup();\n        if (me.activeInteractions.length > 0) {\n          return;\n        }\n\n        //Check for isochrone features\n        const isochroneFeatures = me.map.getFeaturesAtPixel(evt.pixel, {\n          layerFilter: candidate => {\n            if (candidate.get(\"name\") === \"isochrone_layer\") {\n              return true;\n            }\n            return false;\n          }\n        });\n        const otherFeatures = me.map.getFeaturesAtPixel(evt.pixel, {\n          layerFilter: candidate => {\n            if (candidate.get(\"name\") !== \"isochrone_layer\") {\n              return true;\n            }\n            return false;\n          }\n        });\n        if (isochroneFeatures.length > 0 && otherFeatures.length === 0) {\n          // Toggle thematic data for isochrone window\n          const isochroneFeature = isochroneFeatures[0];\n          EventBus.$emit(\n            \"show-isochrone-window\",\n            isochroneFeature.get(\"calculationNumber\")\n          );\n          return;\n        }\n\n        me.queryableLayers = getAllChildLayers(me.map).filter(\n          layer =>\n            layer.get(\"queryable\") === true && layer.getVisible() === true\n        );\n\n        //WMS Requests\n        let promiseArray = [];\n        me.queryableLayers.forEach(layer => {\n          const layerType = layer.get(\"type\");\n          switch (layerType) {\n            case \"WFS\":\n            case \"VECTOR\":\n            case \"MVT\":\n            case \"GEOBUF\":\n            case \"VECTORTILE\": {\n              let selectedFeatures = me.map.getFeaturesAtPixel(evt.pixel, {\n                hitTolerance: 4,\n                layerFilter: layerCandidate => {\n                  return layerCandidate.get(\"name\") === layer.get(\"name\");\n                }\n              });\n              if (selectedFeatures !== null && selectedFeatures.length > 0) {\n                //TODO: If there are more then 2 features selected get the closest one to coordinate rather than the first element\n                let clonedFeature;\n\n                if (!selectedFeatures[0].clone) {\n                  // !!! Workaround for vector tile features.\n                  const vtProps = {\n                    layerName: layer.get(\"name\"),\n                    osm_type: selectedFeatures[0].getType()\n                  };\n\n                  Object.assign(vtProps, selectedFeatures[0].getProperties());\n                  const flatCoordinates = selectedFeatures[0].getFlatCoordinates();\n                  if (flatCoordinates && flatCoordinates.length > 0) {\n                    const _coordinates = [];\n                    const _values = Object.values(flatCoordinates);\n                    for (let i = 0; i < _values.length; i += 2) {\n                      _coordinates.push(_values.slice(i, i + 2));\n                    }\n\n                    const geometry = new LineString(_coordinates, \"XY\");\n                    vtProps.geometry = geometry;\n                  }\n                  clonedFeature = new Feature(vtProps);\n                } else {\n                  clonedFeature = selectedFeatures[0].clone();\n                  clonedFeature.set(\"layerName\", layer.get(\"name\"));\n                }\n                me.getInfoResult.push(clonedFeature);\n              }\n              break;\n            }\n            default:\n              break;\n          }\n        });\n        if (promiseArray.length > 0) {\n          console.log(promiseArray);\n          axios.all(promiseArray).then(function(results) {\n            console.log(results);\n            results.forEach(response => {\n              if (response && response.data && response.data.features) {\n                const features = response.data.features;\n                const layerName = JSON.parse(response.config.data).layerName;\n                if (features && features.length === 0) {\n                  return;\n                }\n                const olFeatures = geojsonToFeature(response.data, {});\n\n                olFeatures[0].set(\"layerName\", layerName);\n                me.getInfoResult.push(olFeatures[0]);\n              }\n            });\n            if (me.getInfoResult.length > 0) {\n              me.showPopup(evt.coordinate);\n            }\n          });\n        } else {\n          //Only for WFS layer\n          if (me.getInfoResult.length > 0) {\n            me.showPopup(evt.coordinate);\n          }\n        }\n      });\n    },\n    previousGetInfoLayer() {\n      this.popup.currentLayerIndex -= 1;\n      this.showPopup();\n    },\n    nextGetInfoLayer() {\n      this.popup.currentLayerIndex += 1;\n      this.showPopup();\n    },\n\n    showNonVisibleLayersInfo: debounce(function() {\n      const currentResolution = this.map.getView().getResolution();\n      const notVisibleLayers = [];\n      this.limitedVisibilityLayers.forEach(layer => {\n        if (\n          layer.getMaxResolution() &&\n          layer.getMaxResolution() < currentResolution &&\n          layer.getVisible()\n        ) {\n          const layerName = this.$te(`map.layerName.${layer.get(\"name\")}`)\n            ? this.$t(`map.layerName.${layer.get(\"name\")}`)\n            : layerName;\n          notVisibleLayers.push(layerName);\n        }\n      });\n\n      if (notVisibleLayers.length > 0) {\n        this.visibilityLayerSnackbar = {\n          state: true,\n          message: `${this.$t(\n            `map.snackbarMessages.zoomInToShowFeatures`\n          )}: <b>${notVisibleLayers.toString()}</b>`,\n          timeout: 80000\n        };\n      } else {\n        this.visibilityLayerSnackbar = {\n          state: false,\n          message: ``,\n          timeout: 0\n        };\n      }\n    }, 200),\n    getOsmHrefLink() {\n      let link = ``;\n      if (this.currentInfoFeature && this.currentInfoFeature.get(\"osm_id\")) {\n        const feature = this.currentInfoFeature;\n\n        let type = feature.get(\"osm_type\");\n        if (!type && feature.get(\"orgin_geometry\")) {\n          const originGeometry =\n            feature.getProperties()[\"orgin_geometry\"] ||\n            feature\n              .getGeometry()\n              .getType()\n              .toLowerCase();\n          switch (originGeometry) {\n            case \"polygon\":\n            case \"multipolygon\":\n            case \"linestring\":\n              type = \"way\";\n              break;\n            case \"point\":\n              type = \"node\";\n              break;\n            default:\n              type = null;\n              break;\n          }\n        }\n        link =\n          `https://www.openstreetmap.org/edit?editor=id&` +\n          `${type}` +\n          `=${feature.get(\"osm_id\")}`;\n      }\n      return link;\n    },\n    getPopupTitle() {\n      if (this.getInfoResult[this.popup.currentLayerIndex]) {\n        const layer = this.getInfoResult[this.popup.currentLayerIndex];\n        const canTranslate = this.$te(\n          `map.layerName.${layer.get(\"layerName\")}`\n        );\n        if (canTranslate) {\n          return this.$t(`map.layerName.${layer.get(\"layerName\")}`);\n        } else {\n          return layer.get(\"layerName\");\n        }\n      } else {\n        return \"\";\n      }\n    },\n    transformExtent,\n    showMiniViewer() {\n      this.miniViewerVisible = true;\n      this.isMapillaryBtnDisabled = true;\n    },\n    ...mapMutations(\"map\", {\n      setContextMenu: \"SET_CONTEXTMENU\",\n      setLayer: \"SET_LAYER\",\n      toggleSnackbar: \"TOGGLE_SNACKBAR\"\n    }),\n    ...mapMutations(\"pois\", {\n      init: \"INIT\"\n    })\n  },\n  computed: {\n    ...mapFields(\"map\", {\n      subStudyAreaLayer: \"subStudyAreaLayer\",\n      selectedEditLayer: \"selectedEditLayer\",\n      isMapillaryBtnDisabled: \"isMapillaryBtnDisabled\",\n      miniViewerVisible: \"miniViewerVisible\"\n    }),\n    ...mapFields(\"poisaois\", {\n      poisAoisLayer: \"poisAoisLayer\",\n      selectedPoisAois: \"selectedPoisAois\",\n      poisAois: \"poisAois\"\n    }),\n\n    ...mapGetters(\"map\", {\n      studyArea: \"studyArea\",\n      helpTooltip: \"helpTooltip\",\n      currentMessage: \"currentMessage\",\n      layers: \"layers\"\n    }),\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\",\n      appConfig: \"appConfig\",\n      scenarioLayerEditModeColor: \"scenarioLayerEditModeColor\",\n      isRecomputingHeatmap: \"isRecomputingHeatmap\",\n      calculationMode: \"calculationMode\"\n    }),\n    ...mapGetters(\"isochrones\", {\n      isochroneLayer: \"isochroneLayer\",\n      options: \"options\"\n    }),\n    ...mapGetters(\"scenarios\", {\n      activeScenario: \"activeScenario\"\n    }),\n    ...mapGetters(\"loader\", { isNetworkBusy: \"isNetworkBusy\" }),\n    currentInfo() {\n      const feature = this.getInfoResult[this.popup.currentLayerIndex];\n      if (!feature) return;\n      const props = feature.getProperties();\n      let transformed = [];\n      const excludedProperties = [\n        \"uid\",\n        \"id\",\n        \"geometry\",\n        \"geom\",\n        \"orgin_geometry\",\n        \"osm_id\",\n        \"gid\",\n        \"layerName\"\n      ];\n      Object.keys(props).forEach(k => {\n        if (!excludedProperties.includes(k) && !typeof k !== \"object\") {\n          transformed.push({\n            property: humanize(k),\n            value: !props[k] ? \"---\" : props[k]\n          });\n        }\n      });\n\n      return transformed;\n    },\n    currentInfoFeature() {\n      return this.getInfoResult[this.popup.currentLayerIndex];\n    }\n  },\n  watch: {\n    activeInteractions() {\n      if (!this.dblClickZoomInteraction) return;\n      if (this.activeInteractions.length > 0) {\n        this.dblClickZoomInteraction.setActive(false);\n      } else {\n        this.dblClickZoomInteraction.setActive(true);\n      }\n    },\n    appColor() {\n      this.setOlButtonColor();\n    },\n    // Edge case for pois layer style. We have to restructure the state of selected pois as a key value pair (category: state)\n    // in order to use it in the style (getters can't be accessed outside vue component).\n    // As the selectedPoisState is also changed from editing component\n    // this should be watched here as it might be that poisAoisTree component is not rendered yet.\n    selectedPoisAois(selected) {\n      const poisAois = {};\n      selected.forEach(item => {\n        poisAois[item.value] = true;\n      });\n      this.poisAois = poisAois;\n      this.poisAoisLayer.changed();\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\ndiv.ol-attribution {\n  bottom: 4px;\n  border-radius: 40px;\n}\n\ndiv.ol-control {\n  padding: 0px;\n  border-radius: 40px;\n}\n\ndiv.ol-control button {\n  margin: 0px !important;\n}\n\n/* Hover tooltip */\n.wg-hover-tooltiptext {\n  width: 120px;\n  background-color: rgba(211, 211, 211, 0.9);\n  color: #222;\n  text-align: center;\n  padding: 5px;\n  border-radius: 6px;\n\n  /* Position the hover tooltip */\n  position: absolute;\n  z-index: 1;\n}\n\n.ol-attribution ul {\n  margin: 0;\n  padding: 0 0.5em;\n  font-size: 0.7rem;\n  line-height: 1.375em;\n  color: #000;\n  text-shadow: 0 0 2px #fff;\n}\n</style>\n"],"sourceRoot":"src/components/viewer/ol"}]}