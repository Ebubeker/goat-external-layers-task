{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/About.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/About.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { humanize } from \"../../utils/Helpers\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  props: [\"visible\"],\n  computed: _objectSpread({\n    show: {\n      get: function get() {\n        return this.visible;\n      },\n      set: function set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n        }\n      }\n    },\n    layerAttributes: function layerAttributes() {\n      var a = {};\n      var attributeLayers = [].concat(_toConsumableArray(this.layerConfigList), _toConsumableArray(this.appConfig.extra_source || []));\n      attributeLayers.forEach(function (layer) {\n        if (layer.attributes && layer.attributes.source && layer.attributes.date || layer.attributes && layer.attributes.source === \"openStreetMap\") {\n          var _layer$attributes = layer.attributes,\n              source = _layer$attributes.source,\n              date = _layer$attributes.date;\n\n          if (!a[source]) {\n            a[source] = {};\n          }\n\n          if (!a[source][date]) {\n            a[source][date] = [layer.name];\n          } else {\n            a[source][date].push(layer.name);\n          }\n        }\n      });\n      return a;\n    }\n  }, mapGetters(\"app\", {\n    appColor: \"appColor\",\n    appConfig: \"appConfig\"\n  }), {}, mapGetters(\"map\", {\n    layerConfigList: \"layerConfigList\"\n  })),\n  methods: {\n    humanize: humanize\n  }\n};",{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA,SAAA,QAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,SAAA,CADA;AAEA,EAAA,QAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,OAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,YAAA,CAAA,KAAA,EAAA;AACA,eAAA,KAAA,CAAA,OAAA;AACA;AACA;AARA,KADA;AAWA,IAAA,eAXA,6BAWA;AACA,UAAA,CAAA,GAAA,EAAA;AACA,UAAA,eAAA,gCACA,KAAA,eADA,sBAEA,KAAA,SAAA,CAAA,YAAA,IAAA,EAFA,EAAA;AAIA,MAAA,eAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,YACA,KAAA,CAAA,UAAA,IACA,KAAA,CAAA,UAAA,CAAA,MADA,IAEA,KAAA,CAAA,UAAA,CAAA,IAFA,IAGA,KAAA,CAAA,UAAA,IAAA,KAAA,CAAA,UAAA,CAAA,MAAA,KAAA,eAJA,EAKA;AAAA,kCACA,KAAA,CAAA,UADA;AAAA,cACA,MADA,qBACA,MADA;AAAA,cACA,IADA,qBACA,IADA;;AAEA,cAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,MAAA,CAAA,GAAA,EAAA;AACA;;AACA,cAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AACA,WAFA,MAEA;AACA,YAAA,CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA;AACA;AACA,OAjBA;AAkBA,aAAA,CAAA;AACA;AApCA,KAqCA,UAAA,CAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,UADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAAA,CArCA,MAyCA,UAAA,CAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AADA,GAAA,CAzCA,CAFA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA;AA/CA,CAAA","sourcesContent":["<template>\n  <v-dialog v-model=\"show\" scrollable max-width=\"650px\">\n    <v-card>\n      <v-app-bar :color=\"appColor.primary\" dark>\n        <v-app-bar-nav-icon><v-icon>info</v-icon></v-app-bar-nav-icon>\n        <v-toolbar-title>{{ $t(\"appBar.about.title\") }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-app-bar-nav-icon @click.stop=\"show = false\"\n          ><v-icon>close</v-icon></v-app-bar-nav-icon\n        >\n      </v-app-bar>\n      <vue-scroll>\n        <v-card-text class=\"mt-2\" primary-title>\n          <div>\n            <div class=\"body-1\">\n              <span>\n                <span\n                  v-if=\"$te('appBar.about.whatIs')\"\n                  v-html=\"$t('appBar.about.whatIs')\"\n                ></span>\n                <br />\n                <span\n                  v-if=\"$te('appBar.about.usedData')\"\n                  v-html=\"$t('appBar.about.usedData')\"\n                ></span>\n                <a\n                  :style=\"`color:${appColor.primary}`\"\n                  class=\"info-link\"\n                  href=\"https://plan4better.de/was-ist-goat/\"\n                  target=\"_blank\"\n                  >{{ $t(\"appBar.about.moreInfo\") }}</a\n                >\n                <table class=\"styled-table\">\n                  <thead>\n                    <tr>\n                      <th>{{ $t(\"appBar.about.layerAttributeTable.data\") }}</th>\n                      <th>\n                        {{ $t(\"appBar.about.layerAttributeTable.source\") }}\n                      </th>\n                      <th>\n                        {{\n                          $t(\"appBar.about.layerAttributeTable.yearTimestamp\")\n                        }}\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody v-if=\"layerAttributes\">\n                    <template\n                      v-for=\"(source,\n                      propertySource,\n                      index1) in layerAttributes\"\n                    >\n                      <template v-for=\"(date, propertyDate, index2) in source\">\n                        <tr :key=\"`${index1.toString()}_${+index2.toString()}`\">\n                          <td>\n                            <template v-for=\"(layer, index3) in date\">\n                              <ul\n                                :key=\"\n                                  `${index1.toString()}_${+index2.toString()}_${+index3.toString()}`\n                                \"\n                              >\n                                <li>\n                                  {{\n                                    $te(`map.layerName.${layer}`)\n                                      ? $t(`map.layerName.${layer}`)\n                                      : humanize(layer)\n                                  }}\n                                </li>\n                              </ul>\n                            </template>\n                          </td>\n                          <td>{{ humanize(propertySource) }}</td>\n                          <td>{{ propertyDate }}</td>\n                        </tr>\n                      </template>\n                    </template>\n                  </tbody>\n                </table>\n                <br />\n                <span\n                  v-if=\"$te('appBar.about.license')\"\n                  v-html=\"$t('appBar.about.license')\"\n                ></span>\n              </span>\n            </div>\n          </div>\n        </v-card-text>\n      </vue-scroll>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { humanize } from \"../../utils/Helpers\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  props: [\"visible\"],\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n        }\n      }\n    },\n    layerAttributes() {\n      let a = {};\n      const attributeLayers = [\n        ...this.layerConfigList,\n        ...(this.appConfig.extra_source || [])\n      ];\n      attributeLayers.forEach(layer => {\n        if (\n          (layer.attributes &&\n            layer.attributes.source &&\n            layer.attributes.date) ||\n          (layer.attributes && layer.attributes.source === \"openStreetMap\")\n        ) {\n          let { source, date } = layer.attributes;\n          if (!a[source]) {\n            a[source] = {};\n          }\n          if (!a[source][date]) {\n            a[source][date] = [layer.name];\n          } else {\n            a[source][date].push(layer.name);\n          }\n        }\n      });\n      return a;\n    },\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\",\n      appConfig: \"appConfig\"\n    }),\n    ...mapGetters(\"map\", {\n      layerConfigList: \"layerConfigList\"\n    })\n  },\n  methods: {\n    humanize\n  }\n};\n</script>\n\n<style scoped>\n.v-card__text,\n.v-card__title {\n  word-break: normal !important;\n}\n.styled-table {\n  border-collapse: collapse;\n  margin: 25px 0;\n  width: 100%;\n  /* margin-left: auto;\n  margin-right: auto; */\n  font-size: 0.9em;\n  font-family: sans-serif;\n  min-width: 400px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n}\n.styled-table thead tr {\n  background-color: #2bb381;\n  color: #ffffff;\n  text-align: left;\n}\n.styled-table th,\n.styled-table td {\n  padding: 12px 15px;\n}\n.styled-table tbody tr {\n  border-bottom: 1px solid #dddddd;\n}\n.styled-table tbody tr:nth-of-type(even) {\n  background-color: #f3f3f3;\n}\n\n.styled-table tbody tr:last-of-type {\n  border-bottom: 2px solid #2bb381;\n}\n.styled-table tbody tr.active-row {\n  font-weight: bold;\n  color: #2bb381;\n}\n</style>\n"],"sourceRoot":"src/components/core"}]}