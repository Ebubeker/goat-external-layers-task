{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/components/Property.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/components/Property.vue","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _defineProperty from \"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Tooltip from \"./Tooltip.vue\";\nimport schemaUtils from \"../utils/schema\";\nimport selectUtils from \"../utils/select\";\nexport default {\n  name: \"Property\",\n  components: {\n    Tooltip: Tooltip\n  },\n  props: [\"schema\", \"modelWrapper\", \"modelRoot\", \"modelKey\", \"parentKey\", \"required\", \"options\"],\n  data: function data() {\n    return {\n      ready: false,\n      menu: false,\n      rawSelectItems: null,\n      selectItems: null,\n      q: \"\",\n      currentOneOf: null,\n      showCurrentOneOf: true,\n      fromUrlParams: {},\n      loading: false,\n      folded: true,\n      showColorPicker: false,\n      subModels: {},\n      // a container for objects from root oneOfs and allOfs\n      // maintain vuetify1 compatibility without triggering warning on flat attribute for vuetify 2\n      oldFlat: \"\\n        background-color: none !important;\\n        border-color: none !important;\\n        \"\n    };\n  },\n  computed: {\n    fullSchema: function fullSchema() {\n      return schemaUtils.prepareFullSchema(this.schema, this.modelWrapper, this.modelKey);\n    },\n    htmlDescription: function htmlDescription() {\n      return null;\n    },\n    fullKey: function fullKey() {\n      return (this.parentKey + this.modelKey).replace(\"root.\", \"\");\n    },\n    label: function label() {\n      return this.fullSchema.title || (typeof this.modelKey === \"string\" ? this.modelKey : \"\");\n    },\n    rules: function rules() {\n      return schemaUtils.getRules(this.fullSchema, this.required, this.options, this.modelWrapper);\n    },\n    fromUrl: function fromUrl() {\n      return !!(this.fullSchema[\"x-fromUrl\"] && this.fullSchema[\"x-fromUrl\"].indexOf(\"{q}\") === -1);\n    },\n    fromUrlWithQuery: function fromUrlWithQuery() {\n      return !!(this.fullSchema[\"x-fromUrl\"] && this.fullSchema[\"x-fromUrl\"].indexOf(\"{q}\") !== -1);\n    },\n    fromUrlKeys: function fromUrlKeys() {\n      // Look for variable parts in the URL used to fetch data\n      return null;\n    },\n    itemKey: function itemKey() {\n      return this.fullSchema[\"x-itemKey\"] || \"key\";\n    },\n    itemTitle: function itemTitle() {\n      return this.fullSchema[\"x-itemTitle\"] || \"title\";\n    },\n    itemIcon: function itemIcon() {\n      return this.fullSchema[\"x-itemIcon\"] || (this.fullSchema[\"x-display\"] === \"icon\" ? this.itemKey : null);\n    },\n    disabled: function disabled() {\n      return this.options.disableAll;\n    },\n    foldable: function foldable() {\n      return this.options.autoFoldObjects && this.parentKey && this.fullSchema.title;\n    },\n    oneOfConstProp: function oneOfConstProp() {\n      if (!this.fullSchema.oneOf) return;\n      var props = this.fullSchema.oneOf[0].properties;\n      var key = Object.keys(props).find(function (p) {\n        return !!props[p].const;\n      });\n      if (!key) return;\n      return _objectSpread({}, props[key], {\n        key: key,\n        htmlDescription: \"\"\n      });\n    },\n    oneOfRequired: function oneOfRequired() {\n      var _this = this;\n\n      return !!(this.oneOfConstProp && this.fullSchema && this.fullSchema.required && this.fullSchema.required.find(function (r) {\n        return r === _this.oneOfConstProp.key;\n      }));\n    },\n    oneOfRules: function oneOfRules() {\n      var _this2 = this;\n\n      var rules = [];\n      if (this.oneOfRequired) rules.push(function (val) {\n        return val !== undefined && val !== null && val !== \"\" || _this2.options.requiredMessage;\n      });\n      return rules;\n    },\n    oneOfSelect: function oneOfSelect() {\n      return schemaUtils.isOneOfSelect(this.fullSchema);\n    },\n    slotName: function slotName() {\n      return this.fullSchema[\"x-display\"] && this.fullSchema[\"x-display\"].startsWith(\"custom-\") ? this.fullSchema[\"x-display\"] : this.fullKey;\n    },\n    propertyClass: function propertyClass() {\n      var cleanKey = this.fullKey.replace(/\\./g, \"-\").replace(/[0-9]/g, \"\");\n      return \"vjsf-property vjsf-property-\".concat(cleanKey, \" xs12 \").concat(this.fullSchema[\"x-class\"] || \"\");\n    },\n    translatedItems: function translatedItems() {\n      var _this3 = this;\n\n      var translatedItems = [];\n\n      if (Array.isArray(this.selectItems) && this.selectItems.length > 0) {\n        this.selectItems.forEach(function (item) {\n          translatedItems.push({\n            value: item,\n            text: _this3.translateListValues(item)\n          });\n        });\n      }\n\n      return translatedItems;\n    }\n  },\n  watch: {\n    q: function q() {\n      // This line prevents reloading the list just after selecting an item in an auto-complete\n      if (this.modelWrapper[this.modelKey] && this.modelWrapper[this.modelKey][this.itemTitle] === this.q) return;\n      this.fetchSelectItems();\n    },\n    fullSchema: {\n      handler: function handler() {\n        if (this.fullSchema && JSON.stringify(this.fullSchema) !== this.lastFullSchema) {\n          this.lastFullSchema = JSON.stringify(this.fullSchema);\n          this.initFromSchema();\n          this.cleanUpExtraProperties();\n          this.applySubModels();\n          this.ready = true;\n        }\n      },\n      immediate: true\n    },\n    currentOneOf: function currentOneOf() {\n      var _this4 = this;\n\n      // use this boolean to force removing then re-creating the object property\n      // base on the currentOneOf sub schema. If we don't the component is reused and reactivity creates some difficult bugs.\n      this.showCurrentOneOf = false;\n      this.$nextTick(function () {\n        _this4.showCurrentOneOf = true;\n        if (!_this4.currentOneOf) _this4.$set(_this4.subModels, \"currentOneOf\", {});\n\n        _this4.cleanUpExtraProperties();\n      });\n    },\n    subModels: {\n      handler: function handler() {\n        this.cleanUpExtraProperties();\n        this.applySubModels();\n      },\n      deep: true\n    },\n    rawSelectItems: {\n      handler: function handler() {\n        this.updateSelectItems();\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    openDialog: function openDialog(e) {\n      this.$emit(\"input\", e);\n    },\n    translateField: function translateField(field) {\n      var layerName = this.schema.layerName;\n      var canTranslate = this.$te(\"dynamicFields.attributes.\".concat(layerName, \".\").concat(field));\n\n      if (canTranslate) {\n        return this.$t(\"dynamicFields.attributes.\".concat(layerName, \".\").concat(field));\n      } else {\n        return field;\n      }\n    },\n    translateListValues: function translateListValues(value) {\n      var layerName = this.schema.layerName;\n      var path = \"dynamicFields.listValues.\";\n\n      if (layerName === \"poi\") {\n        layerName = \"pois\";\n        path = \"\";\n      }\n\n      var canTranslate = this.$te(\"\".concat(path).concat(layerName, \".\").concat(value));\n\n      if (canTranslate) {\n        return this.$t(\"\".concat(path).concat(layerName, \".\").concat(value));\n      } else {\n        return value;\n      }\n    },\n    updateSelectItems: function updateSelectItems() {\n      var selectItems = selectUtils.getSelectItems(this.rawSelectItems, this.fullSchema, this.modelWrapper, this.modelKey, this.itemKey);\n\n      if (this.fullSchema[\"x-display\"] === \"list\") {\n        selectUtils.fillList(this.fullSchema, this.modelWrapper, this.modelKey, selectItems, this.itemKey);\n      } else {\n        selectUtils.fillSelectItems(this.fullSchema, this.modelWrapper, this.modelKey, selectItems, this.itemKey);\n      } // we check for actual differences in order to prevent infinite loops\n\n\n      if (JSON.stringify(selectItems) !== JSON.stringify(this.selectItems)) {\n        this.selectItems = selectItems;\n      }\n    },\n    change: function change() {\n      this.updateSelectItems();\n      this.$emit(\"change\", {\n        key: this.fullKey.replace(/allOf-([0-9]+)\\./g, \"\"),\n        model: this.modelWrapper[this.modelKey]\n      });\n    },\n    input: function input() {\n      this.$emit(\"input\", {\n        key: this.fullKey.replace(/allOf-([0-9]+)\\./g, \"\"),\n        model: this.modelWrapper[this.modelKey]\n      });\n    },\n    defaultValue: function defaultValue(schema) {\n      if (schema.type === \"object\" && !schema[\"x-fromUrl\"] && !schema[\"x-fromData\"] && !schema.enum) return {};\n      if (schema.type === \"array\") return [];\n      return null;\n    },\n    fetchSelectItems: function fetchSelectItems() {\n      var _this5 = this;\n\n      if (!this.options.httpLib) return this.$emit(\"error\", \"No http lib found to perform ajax request\");\n      var url = this.fullSchema[\"x-fromUrl\"].replace(\"{q}\", this.q || \"\");\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.fromUrlKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          // URL parameters are incomplete\n          if (this.fromUrlParams[key] === undefined) return;else url = url.replace(\"{\".concat(key, \"}\"), this.fromUrlParams[key]);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.loading = true;\n      this.options.httpLib.get(url).then(function (res) {\n        var body = res.data || res.body;\n        var items = _this5.fullSchema[\"x-itemsProp\"] ? body[_this5.fullSchema[\"x-itemsProp\"]] : body;\n        if (!Array.isArray(items)) throw new Error(\"Result of http fetch \".concat(url, \" is not an array\"));\n        _this5.rawSelectItems = items;\n        _this5.loading = false;\n      }).catch(function (err) {\n        _this5.$emit(\"error\", err.message);\n\n        _this5.loading = false;\n      });\n    },\n    cleanUpExtraProperties: function cleanUpExtraProperties() {\n      var _this6 = this;\n\n      // cleanup extra properties\n      if (this.fullSchema.type === \"object\" && this.fullSchema.properties && Object.keys(this.fullSchema.properties).length && this.modelWrapper[this.modelKey]) {\n        Object.keys(this.modelWrapper[this.modelKey]).forEach(function (key) {\n          if (!_this6.fullSchema.properties.find(function (p) {\n            return p.key === key;\n          })) {\n            delete _this6.modelWrapper[_this6.modelKey][key];\n          }\n        });\n      }\n    },\n    applySubModels: function applySubModels() {\n      var _this7 = this;\n\n      Object.keys(this.subModels).forEach(function (subModel) {\n        Object.keys(_this7.subModels[subModel]).forEach(function (key) {\n          if (_this7.modelWrapper[_this7.modelKey][key] !== _this7.subModels[subModel][key]) {\n            _this7.$set(_this7.modelWrapper[_this7.modelKey], key, _this7.subModels[subModel][key]);\n          }\n        });\n      });\n    },\n    initFromSchema: function initFromSchema() {\n      var _this8 = this;\n\n      var model = this.modelWrapper[this.modelKey]; // Manage default values\n\n      if (model === undefined) {\n        model = this.defaultValue(this.fullSchema);\n        if (this.fullSchema.default !== undefined) model = JSON.parse(JSON.stringify(this.fullSchema.default));\n      } // const always wins\n\n\n      if (this.fullSchema.const !== undefined) model = this.fullSchema.const; // color pickers do not like null values\n\n      if (this.fullSchema.type === \"string\" && this.fullSchema.format === \"hexcolor\") model = model || \"\"; // Case of a select based on ajax query\n\n      if (this.fromUrl) this.fetchSelectItems(); // Case of select based on an enum\n\n      if (this.fullSchema.type === \"array\" && this.fullSchema.items.enum || this.fullSchema.enum) {\n        this.rawSelectItems = this.fullSchema.type === \"array\" ? this.fullSchema.items.enum : this.fullSchema.enum;\n      } // Case of select based on a oneof on simple types\n\n\n      if (this.oneOfSelect) {\n        this.rawSelectItems = (this.fullSchema.type === \"array\" ? this.fullSchema.items : this.fullSchema).oneOf.map(function (item) {\n          var _objectSpread2;\n\n          return _objectSpread({}, item, (_objectSpread2 = {}, _defineProperty(_objectSpread2, _this8.itemKey, item.const || item.enum && item.enum[0]), _defineProperty(_objectSpread2, _this8.itemTitle, item.title), _objectSpread2));\n        });\n      } // Case of an auto-complete field already defined\n\n\n      if (this.fromUrlWithQuery && model && model[this.itemTitle] !== undefined) {\n        this.q = model[this.itemTitle];\n      } // Case of a select based on an array somewhere in the data\n\n\n      if (this.fullSchema[\"x-fromData\"]) {\n        this.$watch(\"modelRoot.\" + this.fullSchema[\"x-fromData\"], function (val) {\n          _this8.rawSelectItems = val;\n        }, {\n          immediate: true\n        });\n      } // Watch the dynamic parts of the URL used to fill the select field\n\n\n      if (this.fromUrlKeys) {\n        this.fromUrlKeys.forEach(function (key) {\n          if (key.startsWith(\"context.\")) {\n            _this8.$watch(\"options.\" + key, function (val) {\n              _this8.fromUrlParams[key] = val;\n\n              _this8.fetchSelectItems();\n            }, {\n              immediate: true\n            });\n          } else {\n            _this8.$watch(\"modelRoot.\" + key, function (val) {\n              _this8.fromUrlParams[key] = val;\n\n              _this8.fetchSelectItems();\n            }, {\n              immediate: true\n            });\n          }\n        });\n      } // Init subModels for allOf subschemas\n\n\n      if (this.fullSchema.type === \"object\" && this.fullSchema.allOf) {\n        this.fullSchema.allOf.forEach(function (allOf, i) {\n          _this8.$set(_this8.subModels, \"allOf-\" + i, JSON.parse(JSON.stringify(model)));\n        });\n      } // Case of a sub type selection based on a oneOf\n\n\n      this.currentOneOf = null;\n\n      if (this.fullSchema.type === \"object\" && this.fullSchema.oneOf && !this.currentOneOf && this.oneOfConstProp) {\n        if (model && model[this.oneOfConstProp.key]) {\n          this.currentOneOf = this.fullSchema.oneOf.find(function (item) {\n            return item.properties[_this8.oneOfConstProp.key].const === model[_this8.oneOfConstProp.key];\n          });\n        } else if (this.fullSchema.default) {\n          this.currentOneOf = this.fullSchema.oneOf.find(function (item) {\n            return item.properties[_this8.oneOfConstProp.key].const === _this8.fullSchema.default[_this8.oneOfConstProp.key];\n          });\n        }\n      } // Init subModel for current oneOf\n\n\n      if (this.currentOneOf) {\n        this.$set(this.subModels, \"currentOneOf\", JSON.parse(JSON.stringify(model)));\n      } else {\n        this.$set(this.subModels, \"currentOneOf\", {});\n      } // Cleanup arrays of empty items\n\n\n      if (this.fullSchema.type === \"array\") {\n        model = model.filter(function (item) {\n          return ![undefined, null].includes(item);\n        });\n      }\n\n      this.$set(this.modelWrapper, this.modelKey, model);\n    }\n  }\n};",{"version":3,"sources":["Property.vue"],"names":[],"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","sourcesContent":["<template>\n  <!-- Hide const ? Or make a readonly field -->\n  <v-flex\n    v-if=\"\n      fullSchema &&\n        fullSchema.const === undefined &&\n        fullSchema['x-display'] !== 'hidden'\n    \"\n    :class=\"propertyClass\"\n    :style=\"fullSchema['x-style'] || ''\"\n  >\n    <slot\n      :name=\"`prepend-${slotName}`\"\n      :fullKey=\"fullKey\"\n      :fullSchema=\"fullSchema\"\n      :modelWrapper=\"modelWrapper\"\n      :modelKey=\"modelKey\"\n      :model=\"modelWrapper[modelKey]\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :rule=\"rules\"\n      :htmlDescription=\"htmlDescription\"\n    />\n    <slot\n      :name=\"slotName\"\n      :fullKey=\"fullKey\"\n      :fullSchema=\"fullSchema\"\n      :modelWrapper=\"modelWrapper\"\n      :modelKey=\"modelKey\"\n      :model=\"modelWrapper[modelKey]\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :rule=\"rules\"\n      :htmlDescription=\"htmlDescription\"\n    >\n      <!-- Date picker -->\n      <v-menu\n        v-if=\"\n          fullSchema.type === 'string' &&\n            ['date', 'date-time'].includes(fullSchema.format)\n        \"\n        ref=\"menu\"\n        v-model=\"menu\"\n        :close-on-content-click=\"false\"\n        :nudge-right=\"40\"\n        :return-value.sync=\"modelWrapper[modelKey]\"\n        :disabled=\"disabled\"\n        transition=\"scale-transition\"\n        offset-y\n        full-width\n        min-width=\"290px\"\n      >\n        <template v-slot:activator=\"{ on }\">\n          <v-text-field\n            v-model=\"modelWrapper[modelKey]\"\n            :label=\"translateField(label)\"\n            :name=\"fullKey\"\n            :required=\"required\"\n            :rules=\"rules\"\n            :clearable=\"!required\"\n            :prepend-icon=\"options.icons.calendar\"\n            v-on=\"on\"\n          >\n            <tooltip\n              slot=\"append-outer\"\n              :options=\"options\"\n              :html-description=\"htmlDescription\"\n            />\n          </v-text-field>\n        </template>\n        <v-date-picker\n          v-model=\"modelWrapper[modelKey]\"\n          scrollable\n          landscape\n          :locale=\"options.locale\"\n        >\n          <v-spacer />\n          <v-btn\n            text\n            class=\"v-btn--flat\"\n            :style=\"oldFlat\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            text\n            class=\"v-btn--flat primary--text\"\n            @click=\"\n              $refs.menu.save(modelWrapper[modelKey]);\n              change();\n              input();\n            \"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-menu>\n\n      <!-- Time picker -->\n      <v-menu\n        v-else-if=\"fullSchema.type === 'string' && fullSchema.format === 'time'\"\n        ref=\"menu\"\n        v-model=\"menu\"\n        :close-on-content-click=\"false\"\n        :nudge-right=\"40\"\n        :return-value.sync=\"modelWrapper[modelKey]\"\n        :disabled=\"disabled\"\n        transition=\"scale-transition\"\n        offset-y\n        full-width\n        min-width=\"290px\"\n      >\n        <template v-slot:activator=\"{ on }\">\n          <v-text-field\n            v-model=\"modelWrapper[modelKey]\"\n            :label=\"translateField(label)\"\n            :name=\"fullKey\"\n            :required=\"required\"\n            :rules=\"rules\"\n            :clearable=\"!required\"\n            :prepend-icon=\"options.icons.clock\"\n            readonly\n            v-on=\"on\"\n          >\n            <tooltip\n              slot=\"append-outer\"\n              :options=\"options\"\n              :html-description=\"htmlDescription\"\n            />\n          </v-text-field>\n        </template>\n        <v-time-picker v-model=\"modelWrapper[modelKey]\">\n          <v-spacer />\n          <v-btn\n            text\n            class=\"v-btn--flat\"\n            :style=\"oldFlat\"\n            @click=\"menu = false\"\n          >\n            Cancel\n          </v-btn>\n          <v-btn\n            text\n            class=\"v-btn--flat primary--text\"\n            @click=\"\n              $refs.menu.save(modelWrapper[modelKey]);\n              change();\n              input();\n            \"\n          >\n            OK\n          </v-btn>\n        </v-time-picker>\n      </v-menu>\n\n      <!-- Color picking -->\n      <template v-else-if=\"fullSchema.format === 'hexcolor'\">\n        <template v-if=\"fullSchema['x-display'] === 'color-picker'\">\n          <v-input\n            :name=\"fullKey\"\n            :label=\"translateField(label)\"\n            :required=\"required\"\n            :rules=\"rules\"\n            :disabled=\"disabled\"\n          >\n            <tooltip\n              slot=\"append\"\n              :options=\"options\"\n              :html-description=\"htmlDescription\"\n            />\n            &nbsp;&nbsp;\n            <v-menu\n              :close-on-content-click=\"false\"\n              :close-on-click=\"true\"\n              direction=\"bottom\"\n              offset-y\n            >\n              <template v-slot:activator=\"{ on }\">\n                <div\n                  :style=\"`background-color: ${modelWrapper[modelKey]};`\"\n                  :class=\"\n                    modelWrapper[modelKey]\n                      ? 'color-picker-trigger'\n                      : 'color-picker-trigger color-picker-trigger-empty'\n                  \"\n                  v-on=\"on\"\n                />\n              </template>\n              <color-picker\n                :value=\"modelWrapper[modelKey]\"\n                :preset-colors=\"options.colors.swatches\"\n                @input=\"\n                  val => {\n                    modelWrapper[modelKey] = val.hex;\n                    input();\n                    change();\n                  }\n                \"\n              />\n            </v-menu>\n          </v-input>\n        </template>\n        <v-input\n          v-else\n          :name=\"fullKey\"\n          :label=\"translateField(label)\"\n          :required=\"required\"\n          :rules=\"rules\"\n          :disabled=\"disabled\"\n        >\n          <tooltip\n            slot=\"append\"\n            :options=\"options\"\n            :html-description=\"htmlDescription\"\n          />\n          &nbsp;&nbsp;\n          <swatches\n            v-model=\"modelWrapper[modelKey]\"\n            :disabled=\"disabled\"\n            :colors=\"options.colors\"\n            :trigger-style=\"{ width: '36px', height: '36px' }\"\n            shapes=\"circles\"\n            @input=\"\n              input();\n              change();\n            \"\n          />\n        </v-input>\n      </template>\n\n      <!-- auto-complete field on an ajax response with query -->\n      <v-autocomplete\n        v-else-if=\"fullSchema.isAutocomplete === true\"\n        v-model=\"modelWrapper[modelKey]\"\n        :items=\"translatedItems\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :no-data-text=\"options.noDataMessage\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        :clearable=\"!required\"\n        @change=\"change\"\n        @input=\"input\"\n        item-text=\"text\"\n        item-value=\"value\"\n        autocomplete=\"off\"\n      >\n      </v-autocomplete>\n\n      <!-- Select field of objects based on an enum (array or not) -->\n      <template\n        v-else-if=\"\n          (fullSchema.type === 'array' &&\n            fullSchema.items.enum &&\n            fullSchema.items.type === 'object') ||\n            (fullSchema.enum && fullSchema.type === 'object')\n        \"\n      >\n        <v-select\n          v-model=\"modelWrapper[modelKey]\"\n          :items=\"selectItems\"\n          :name=\"fullKey\"\n          :label=\"translateField(label)\"\n          :item-text=\"translateListValues\"\n          :required=\"required\"\n          :rules=\"rules\"\n          :disabled=\"disabled\"\n          :clearable=\"!required\"\n          :multiple=\"fullSchema.type === 'array'\"\n          :item-value=\"itemKey\"\n          :return-object=\"true\"\n          @change=\"change\"\n          @input=\"input\"\n          autocomplete=\"off\"\n        >\n        </v-select>\n      </template>\n\n      <!-- Select field of simple types based on an enum (array or simple value) -->\n      <template\n        v-else-if=\"\n          (fullSchema.type === 'array' && fullSchema.items.enum) ||\n            fullSchema.enum\n        \"\n      >\n        <v-select\n          v-model=\"modelWrapper[modelKey]\"\n          :items=\"selectItems\"\n          :name=\"fullKey\"\n          :label=\"translateField(label)\"\n          :required=\"required\"\n          :rules=\"rules\"\n          :disabled=\"disabled\"\n          :clearable=\"!required\"\n          :multiple=\"fullSchema.type === 'array'\"\n          :item-text=\"translateListValues\"\n          @change=\"change\"\n          @input=\"input\"\n          autocomplete=\"off\"\n        >\n        </v-select>\n      </template>\n\n      <!-- Long text field in a textarea -->\n      <v-textarea\n        v-else-if=\"\n          fullSchema.type === 'string' &&\n            fullSchema.maxLength &&\n            fullSchema.maxLength > 1000 &&\n            fullSchema['x-display'] !== 'single-line'\n        \"\n        v-model=\"modelWrapper[modelKey]\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        filled\n        class=\"v-text-field--box v-text-field--enclosed\"\n        @change=\"change\"\n        @input=\"input\"\n      >\n        <tooltip\n          slot=\"append-outer\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n      </v-textarea>\n\n      <!-- text field displayed as password -->\n      <v-text-field\n        v-else-if=\"\n          fullSchema.type === 'string' && fullSchema['x-display'] === 'password'\n        \"\n        v-model=\"modelWrapper[modelKey]\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        type=\"password\"\n        @change=\"change\"\n        @input=\"input\"\n      >\n        <tooltip\n          slot=\"append-outer\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n      </v-text-field>\n\n      <!-- Simple text field -->\n      <v-text-field\n        autocomplete=\"off\"\n        v-else-if=\"\n          fullSchema.type === 'string' && fullSchema.key !== 'opening_hours'\n        \"\n        v-model=\"modelWrapper[modelKey]\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        @change=\"change\"\n        @input=\"input\"\n      >\n        <tooltip\n          slot=\"append-outer\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n      </v-text-field>\n\n      <!-- Opening Hours-->\n      <v-text-field\n        v-else-if=\"fullSchema.key === 'opening_hours'\"\n        v-model=\"modelWrapper[modelKey]\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        @change=\"change\"\n        @input=\"input\"\n        @click=\"openDialog('open_dialog')\"\n        prepend-icon=\"query_builder\"\n      >\n        <tooltip\n          slot=\"append-outer\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n      </v-text-field>\n      <!-- Number fields displayed in slider -->\n      <v-slider\n        v-else-if=\"\n          fullSchema['x-display'] === 'slider' &&\n            (fullSchema.type === 'number' || fullSchema.type === 'integer')\n        \"\n        v-model.number=\"modelWrapper[modelKey]\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :min=\"fullSchema.minimum\"\n        :max=\"fullSchema.maximum\"\n        :step=\"\n          fullSchema['x-step'] || (fullSchema.type === 'integer' ? 1 : 0.01)\n        \"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        thumb-label\n        @change=\"change\"\n        @input=\"input\"\n      >\n        <tooltip\n          slot=\"append\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n      </v-slider>\n      <!-- Simple number fields -->\n      <v-text-field\n        v-else-if=\"\n          fullSchema.type === 'number' || fullSchema.type === 'integer'\n        \"\n        v-model.number=\"modelWrapper[modelKey]\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :min=\"fullSchema.minimum\"\n        :max=\"fullSchema.maximum\"\n        :step=\"\n          fullSchema['x-step'] || (fullSchema.type === 'integer' ? 1 : 0.01)\n        \"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        type=\"number\"\n        @change=\"change\"\n        @input=\"input\"\n        autocomplete=\"off\"\n      >\n        <tooltip\n          slot=\"append-outer\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n      </v-text-field>\n\n      <!-- Simple boolean field -->\n      <v-checkbox\n        v-else-if=\"fullSchema.type === 'boolean'\"\n        v-model=\"modelWrapper[modelKey]\"\n        :label=\"translateField(label)\"\n        :name=\"fullKey\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :rules=\"rules\"\n        @change=\"change\"\n        @input=\"input\"\n      >\n        <tooltip\n          slot=\"append\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n      </v-checkbox>\n\n      <!-- Simple strings array -->\n      <template\n        v-else-if=\"\n          fullSchema.type === 'array' && fullSchema.items.type === 'string'\n        \"\n      >\n        <v-combobox\n          v-model=\"modelWrapper[modelKey]\"\n          :name=\"fullKey\"\n          :label=\"translateField(label)\"\n          :required=\"required\"\n          :rules=\"rules\"\n          :disabled=\"disabled\"\n          chips\n          multiple\n          append-icon=\"\"\n          @change=\"change\"\n          @input=\"input\"\n        >\n          <tooltip\n            slot=\"append-outer\"\n            :options=\"options\"\n            :html-description=\"htmlDescription\"\n          />\n          <template slot=\"selection\" slot-scope=\"data\">\n            <!-- @input is for vuetify1 and @click:close is for vuetify 2 -->\n            <v-chip\n              close\n              @input=\"\n                modelWrapper[modelKey].splice(data.index, 1);\n                change();\n                input();\n              \"\n              @click:close=\"\n                modelWrapper[modelKey].splice(data.index, 1);\n                change();\n                input();\n              \"\n            >\n              {{ data.item }}\n            </v-chip>\n          </template>\n        </v-combobox>\n      </template>\n\n      <!-- Object sub container with properties that may include a select based on a oneOf and subparts base on a allOf -->\n      <div v-else-if=\"fullSchema.type === 'object'\">\n        <v-subheader\n          v-if=\"fullSchema.title\"\n          :style=\"foldable ? 'cursor:pointer;' : ''\"\n          class=\"mt-2\"\n          @click=\"folded = !folded\"\n        >\n          {{ fullSchema.title }}\n          &nbsp;\n          <v-icon v-if=\"foldable && folded\">\n            {{ options.icons.dropdown }}\n          </v-icon>\n          <v-icon v-if=\"foldable && !folded\">\n            {{ options.icons.dropup }}\n          </v-icon>\n        </v-subheader>\n\n        <v-slide-y-transition>\n          <v-layout v-show=\"!foldable || !folded\" row wrap class=\"ma-0\">\n            <p v-if=\"fullSchema.description\" v-html=\"htmlDescription\" />\n            <property\n              v-for=\"childProp in fullSchema.properties\"\n              :key=\"childProp.key\"\n              :schema=\"childProp\"\n              :model-wrapper=\"modelWrapper[modelKey]\"\n              :model-root=\"modelRoot\"\n              :model-key=\"childProp.key\"\n              :parent-key=\"fullKey + '.'\"\n              :required=\"\n                !!(\n                  fullSchema.required &&\n                  fullSchema.required.includes(childProp.key)\n                )\n              \"\n              :options=\"options\"\n              @error=\"e => $emit('error', e)\"\n              @change=\"e => $emit('change', e)\"\n              @input=\"e => $emit('input', e)\"\n            >\n              <!-- propagate slots to children, see https://gist.github.com/Loilo/73c55ed04917ecf5d682ec70a2a1b8e2 -->\n              <slot v-for=\"(_, name) in $slots\" :slot=\"name\" :name=\"name\" />\n              <template\n                v-for=\"(_, name) in $scopedSlots\"\n                :slot=\"name\"\n                slot-scope=\"slotData\"\n              >\n                <slot :name=\"name\" v-bind=\"slotData\" />\n              </template>\n            </property>\n          </v-layout>\n        </v-slide-y-transition>\n      </div>\n\n      <!-- Tuples array sub container -->\n      <div\n        v-else-if=\"\n          fullSchema.type === 'array' && Array.isArray(fullSchema.items)\n        \"\n      >\n        <v-subheader\n          v-if=\"fullSchema.title\"\n          :style=\"foldable ? 'cursor:pointer;' : ''\"\n          class=\"mt-2\"\n          @click=\"folded = !folded\"\n        >\n          {{ fullSchema.title }}\n          &nbsp;\n          <v-icon v-if=\"foldable && folded\">\n            {{ options.icons.dropdown }}\n          </v-icon>\n          <v-icon v-if=\"foldable && !folded\">\n            {{ options.icons.dropup }}\n          </v-icon>\n        </v-subheader>\n        <v-slide-y-transition>\n          <div v-show=\"!foldable || !folded\">\n            <p v-if=\"fullSchema.description\" v-html=\"htmlDescription\" />\n            <property\n              v-for=\"(child, i) in fullSchema.items\"\n              :key=\"i\"\n              :schema=\"child\"\n              :model-wrapper=\"modelWrapper[modelKey]\"\n              :model-root=\"modelRoot\"\n              :model-key=\"i\"\n              :parent-key=\"fullKey + '.'\"\n              :options=\"options\"\n              @error=\"e => $emit('error', e)\"\n              @change=\"e => $emit('change', e)\"\n              @input=\"e => $emit('input', e)\"\n            >\n              <!-- propagate slots to children, see https://gist.github.com/Loilo/73c55ed04917ecf5d682ec70a2a1b8e2 -->\n              <slot v-for=\"(_, name) in $slots\" :slot=\"name\" :name=\"name\" />\n              <template\n                v-for=\"(_, name) in $scopedSlots\"\n                :slot=\"name\"\n                slot-scope=\"slotData\"\n              >\n                <slot :name=\"name\" v-bind=\"slotData\" />\n              </template>\n            </property>\n          </div>\n        </v-slide-y-transition>\n      </div>\n\n      <!-- Dynamic size array of complex types sub container -->\n      <div v-else-if=\"fullSchema.type === 'array'\">\n        <v-layout row class=\"mt-2 mb-1 pr-1\">\n          <v-subheader>{{ label }}</v-subheader>\n          <v-btn\n            v-if=\"!disabled && !(fromUrl || fullSchema.fromData)\"\n            fab\n            small\n            color=\"primary\"\n            @click=\"\n              modelWrapper[modelKey].push(\n                fullSchema.items.default || defaultValue(fullSchema.items)\n              );\n              change();\n              input();\n            \"\n          >\n            <v-icon>{{ options.icons.add }}</v-icon>\n          </v-btn>\n          <v-spacer />\n          <tooltip :options=\"options\" :html-description=\"htmlDescription\" />\n        </v-layout>\n\n        <v-container\n          v-if=\"modelWrapper[modelKey] && modelWrapper[modelKey].length\"\n          grid-list-md\n          class=\"pt-0 px-2\"\n        >\n          <v-layout row wrap class=\"ma-0\">\n            <draggable\n              v-model=\"modelWrapper[modelKey]\"\n              handle=\".handle\"\n              style=\"width: 100%;\"\n            >\n              <v-flex\n                v-for=\"(itemModel, i) in modelWrapper[modelKey]\"\n                :key=\"i\"\n                xs12\n              >\n                <v-card class=\"array-card\">\n                  <v-card-title primary-title class=\"pa-0\">\n                    <v-btn\n                      v-if=\"!disabled && fullSchema['x-sortable'] !== false\"\n                      icon\n                      class=\"handle\"\n                    >\n                      <v-icon>{{ options.icons.reorder }}</v-icon>\n                    </v-btn>\n                    <span v-if=\"itemTitle && modelWrapper[modelKey][i]\">{{\n                      modelWrapper[modelKey][i][itemTitle]\n                    }}</span>\n                    <v-spacer />\n                    <v-btn\n                      v-if=\"!disabled && !(fromUrl || fullSchema.fromData)\"\n                      icon\n                      color=\"warning\"\n                      @click=\"\n                        modelWrapper[modelKey].splice(i, 1);\n                        change();\n                        input();\n                      \"\n                    >\n                      <v-icon>{{ options.icons.delete }}</v-icon>\n                    </v-btn>\n                  </v-card-title>\n                  <v-card-text>\n                    <property\n                      :schema=\"fullSchema.items\"\n                      :model-wrapper=\"modelWrapper[modelKey]\"\n                      :model-root=\"modelRoot\"\n                      :model-key=\"i\"\n                      :parent-key=\"`${fullKey}.`\"\n                      :options=\"options\"\n                      @error=\"e => $emit('error', e)\"\n                      @change=\"e => $emit('change', e)\"\n                      @input=\"e => $emit('input', e)\"\n                    >\n                      <!-- propagate slots to children, see https://gist.github.com/Loilo/73c55ed04917ecf5d682ec70a2a1b8e2 -->\n                      <slot\n                        v-for=\"(_, name) in $slots\"\n                        :slot=\"name\"\n                        :name=\"name\"\n                      />\n                      <template\n                        v-for=\"(_, name) in $scopedSlots\"\n                        :slot=\"name\"\n                        slot-scope=\"slotData\"\n                      >\n                        <slot :name=\"name\" v-bind=\"slotData\" />\n                      </template>\n                    </property>\n                  </v-card-text>\n                </v-card>\n              </v-flex>\n            </draggable>\n          </v-layout>\n        </v-container>\n      </div>\n\n      <p v-else-if=\"options.debug\">\n        Unsupported type \"{{ fullSchema.type }}\" - {{ fullSchema }}\n      </p>\n    </slot>\n    <slot\n      :name=\"`append-${slotName}`\"\n      :fullKey=\"fullKey\"\n      :fullSchema=\"fullSchema\"\n      :modelWrapper=\"modelWrapper\"\n      :modelKey=\"modelKey\"\n      :model=\"modelWrapper[modelKey]\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :rule=\"rules\"\n      :htmlDescription=\"htmlDescription\"\n    />\n  </v-flex>\n</template>\n\n<script>\nimport Tooltip from \"./Tooltip.vue\";\nimport schemaUtils from \"../utils/schema\";\nimport selectUtils from \"../utils/select\";\n\nexport default {\n  name: \"Property\",\n  components: { Tooltip },\n  props: [\n    \"schema\",\n    \"modelWrapper\",\n    \"modelRoot\",\n    \"modelKey\",\n    \"parentKey\",\n    \"required\",\n    \"options\"\n  ],\n  data() {\n    return {\n      ready: false,\n      menu: false,\n      rawSelectItems: null,\n      selectItems: null,\n      q: \"\",\n      currentOneOf: null,\n      showCurrentOneOf: true,\n      fromUrlParams: {},\n      loading: false,\n      folded: true,\n      showColorPicker: false,\n      subModels: {}, // a container for objects from root oneOfs and allOfs\n      // maintain vuetify1 compatibility without triggering warning on flat attribute for vuetify 2\n      oldFlat: `\n        background-color: none !important;\n        border-color: none !important;\n        `\n    };\n  },\n  computed: {\n    fullSchema() {\n      return schemaUtils.prepareFullSchema(\n        this.schema,\n        this.modelWrapper,\n        this.modelKey\n      );\n    },\n    htmlDescription() {\n      return null;\n    },\n    fullKey() {\n      return (this.parentKey + this.modelKey).replace(\"root.\", \"\");\n    },\n    label() {\n      return (\n        this.fullSchema.title ||\n        (typeof this.modelKey === \"string\" ? this.modelKey : \"\")\n      );\n    },\n    rules() {\n      return schemaUtils.getRules(\n        this.fullSchema,\n        this.required,\n        this.options,\n        this.modelWrapper\n      );\n    },\n    fromUrl() {\n      return !!(\n        this.fullSchema[\"x-fromUrl\"] &&\n        this.fullSchema[\"x-fromUrl\"].indexOf(\"{q}\") === -1\n      );\n    },\n    fromUrlWithQuery() {\n      return !!(\n        this.fullSchema[\"x-fromUrl\"] &&\n        this.fullSchema[\"x-fromUrl\"].indexOf(\"{q}\") !== -1\n      );\n    },\n    fromUrlKeys() {\n      // Look for variable parts in the URL used to fetch data\n      return null;\n    },\n    itemKey() {\n      return this.fullSchema[\"x-itemKey\"] || \"key\";\n    },\n    itemTitle() {\n      return this.fullSchema[\"x-itemTitle\"] || \"title\";\n    },\n    itemIcon() {\n      return (\n        this.fullSchema[\"x-itemIcon\"] ||\n        (this.fullSchema[\"x-display\"] === \"icon\" ? this.itemKey : null)\n      );\n    },\n    disabled() {\n      return this.options.disableAll;\n    },\n    foldable() {\n      return (\n        this.options.autoFoldObjects && this.parentKey && this.fullSchema.title\n      );\n    },\n    oneOfConstProp() {\n      if (!this.fullSchema.oneOf) return;\n      const props = this.fullSchema.oneOf[0].properties;\n      const key = Object.keys(props).find(p => !!props[p].const);\n      if (!key) return;\n      return {\n        ...props[key],\n        key,\n        htmlDescription: \"\"\n      };\n    },\n    oneOfRequired() {\n      return !!(\n        this.oneOfConstProp &&\n        this.fullSchema &&\n        this.fullSchema.required &&\n        this.fullSchema.required.find(r => r === this.oneOfConstProp.key)\n      );\n    },\n    oneOfRules() {\n      const rules = [];\n      if (this.oneOfRequired)\n        rules.push(\n          val =>\n            (val !== undefined && val !== null && val !== \"\") ||\n            this.options.requiredMessage\n        );\n      return rules;\n    },\n    oneOfSelect() {\n      return schemaUtils.isOneOfSelect(this.fullSchema);\n    },\n    slotName() {\n      return this.fullSchema[\"x-display\"] &&\n        this.fullSchema[\"x-display\"].startsWith(\"custom-\")\n        ? this.fullSchema[\"x-display\"]\n        : this.fullKey;\n    },\n    propertyClass() {\n      const cleanKey = this.fullKey.replace(/\\./g, \"-\").replace(/[0-9]/g, \"\");\n      return `vjsf-property vjsf-property-${cleanKey} xs12 ${this.fullSchema[\n        \"x-class\"\n      ] || \"\"}`;\n    },\n    translatedItems() {\n      const translatedItems = [];\n      if (Array.isArray(this.selectItems) && this.selectItems.length > 0) {\n        this.selectItems.forEach(item => {\n          translatedItems.push({\n            value: item,\n            text: this.translateListValues(item)\n          });\n        });\n      }\n      return translatedItems;\n    }\n  },\n  watch: {\n    q() {\n      // This line prevents reloading the list just after selecting an item in an auto-complete\n      if (\n        this.modelWrapper[this.modelKey] &&\n        this.modelWrapper[this.modelKey][this.itemTitle] === this.q\n      )\n        return;\n      this.fetchSelectItems();\n    },\n    fullSchema: {\n      handler() {\n        if (\n          this.fullSchema &&\n          JSON.stringify(this.fullSchema) !== this.lastFullSchema\n        ) {\n          this.lastFullSchema = JSON.stringify(this.fullSchema);\n          this.initFromSchema();\n          this.cleanUpExtraProperties();\n          this.applySubModels();\n          this.ready = true;\n        }\n      },\n      immediate: true\n    },\n    currentOneOf() {\n      // use this boolean to force removing then re-creating the object property\n      // base on the currentOneOf sub schema. If we don't the component is reused and reactivity creates some difficult bugs.\n      this.showCurrentOneOf = false;\n      this.$nextTick(() => {\n        this.showCurrentOneOf = true;\n        if (!this.currentOneOf) this.$set(this.subModels, \"currentOneOf\", {});\n        this.cleanUpExtraProperties();\n      });\n    },\n    subModels: {\n      handler() {\n        this.cleanUpExtraProperties();\n        this.applySubModels();\n      },\n      deep: true\n    },\n    rawSelectItems: {\n      handler() {\n        this.updateSelectItems();\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    openDialog(e) {\n      this.$emit(\"input\", e);\n    },\n    translateField(field) {\n      const layerName = this.schema.layerName;\n      const canTranslate = this.$te(\n        `dynamicFields.attributes.${layerName}.${field}`\n      );\n      if (canTranslate) {\n        return this.$t(`dynamicFields.attributes.${layerName}.${field}`);\n      } else {\n        return field;\n      }\n    },\n    translateListValues(value) {\n      let layerName = this.schema.layerName;\n      let path = `dynamicFields.listValues.`;\n      if (layerName === \"poi\") {\n        layerName = \"pois\";\n        path = ``;\n      }\n      const canTranslate = this.$te(`${path}${layerName}.${value}`);\n      if (canTranslate) {\n        return this.$t(`${path}${layerName}.${value}`);\n      } else {\n        return value;\n      }\n    },\n    updateSelectItems() {\n      const selectItems = selectUtils.getSelectItems(\n        this.rawSelectItems,\n        this.fullSchema,\n        this.modelWrapper,\n        this.modelKey,\n        this.itemKey\n      );\n      if (this.fullSchema[\"x-display\"] === \"list\") {\n        selectUtils.fillList(\n          this.fullSchema,\n          this.modelWrapper,\n          this.modelKey,\n          selectItems,\n          this.itemKey\n        );\n      } else {\n        selectUtils.fillSelectItems(\n          this.fullSchema,\n          this.modelWrapper,\n          this.modelKey,\n          selectItems,\n          this.itemKey\n        );\n      }\n\n      // we check for actual differences in order to prevent infinite loops\n      if (JSON.stringify(selectItems) !== JSON.stringify(this.selectItems)) {\n        this.selectItems = selectItems;\n      }\n    },\n    change() {\n      this.updateSelectItems();\n      this.$emit(\"change\", {\n        key: this.fullKey.replace(/allOf-([0-9]+)\\./g, \"\"),\n        model: this.modelWrapper[this.modelKey]\n      });\n    },\n    input() {\n      this.$emit(\"input\", {\n        key: this.fullKey.replace(/allOf-([0-9]+)\\./g, \"\"),\n        model: this.modelWrapper[this.modelKey]\n      });\n    },\n    defaultValue(schema) {\n      if (\n        schema.type === \"object\" &&\n        !schema[\"x-fromUrl\"] &&\n        !schema[\"x-fromData\"] &&\n        !schema.enum\n      )\n        return {};\n      if (schema.type === \"array\") return [];\n      return null;\n    },\n    fetchSelectItems() {\n      if (!this.options.httpLib)\n        return this.$emit(\"error\", \"No http lib found to perform ajax request\");\n      let url = this.fullSchema[\"x-fromUrl\"].replace(\"{q}\", this.q || \"\");\n      for (const key of this.fromUrlKeys) {\n        // URL parameters are incomplete\n        if (this.fromUrlParams[key] === undefined) return;\n        else url = url.replace(`{${key}}`, this.fromUrlParams[key]);\n      }\n      this.loading = true;\n      this.options.httpLib\n        .get(url)\n        .then(res => {\n          const body = res.data || res.body;\n          const items = this.fullSchema[\"x-itemsProp\"]\n            ? body[this.fullSchema[\"x-itemsProp\"]]\n            : body;\n          if (!Array.isArray(items))\n            throw new Error(`Result of http fetch ${url} is not an array`);\n          this.rawSelectItems = items;\n          this.loading = false;\n        })\n        .catch(err => {\n          this.$emit(\"error\", err.message);\n          this.loading = false;\n        });\n    },\n    cleanUpExtraProperties() {\n      // cleanup extra properties\n      if (\n        this.fullSchema.type === \"object\" &&\n        this.fullSchema.properties &&\n        Object.keys(this.fullSchema.properties).length &&\n        this.modelWrapper[this.modelKey]\n      ) {\n        Object.keys(this.modelWrapper[this.modelKey]).forEach(key => {\n          if (!this.fullSchema.properties.find(p => p.key === key)) {\n            delete this.modelWrapper[this.modelKey][key];\n          }\n        });\n      }\n    },\n    applySubModels() {\n      Object.keys(this.subModels).forEach(subModel => {\n        Object.keys(this.subModels[subModel]).forEach(key => {\n          if (\n            this.modelWrapper[this.modelKey][key] !==\n            this.subModels[subModel][key]\n          ) {\n            this.$set(\n              this.modelWrapper[this.modelKey],\n              key,\n              this.subModels[subModel][key]\n            );\n          }\n        });\n      });\n    },\n    initFromSchema() {\n      let model = this.modelWrapper[this.modelKey];\n\n      // Manage default values\n      if (model === undefined) {\n        model = this.defaultValue(this.fullSchema);\n        if (this.fullSchema.default !== undefined)\n          model = JSON.parse(JSON.stringify(this.fullSchema.default));\n      }\n      // const always wins\n      if (this.fullSchema.const !== undefined) model = this.fullSchema.const;\n\n      // color pickers do not like null values\n      if (\n        this.fullSchema.type === \"string\" &&\n        this.fullSchema.format === \"hexcolor\"\n      )\n        model = model || \"\";\n\n      // Case of a select based on ajax query\n      if (this.fromUrl) this.fetchSelectItems();\n      // Case of select based on an enum\n      if (\n        (this.fullSchema.type === \"array\" && this.fullSchema.items.enum) ||\n        this.fullSchema.enum\n      ) {\n        this.rawSelectItems =\n          this.fullSchema.type === \"array\"\n            ? this.fullSchema.items.enum\n            : this.fullSchema.enum;\n      }\n      // Case of select based on a oneof on simple types\n      if (this.oneOfSelect) {\n        this.rawSelectItems = (this.fullSchema.type === \"array\"\n          ? this.fullSchema.items\n          : this.fullSchema\n        ).oneOf.map(item => ({\n          ...item,\n          [this.itemKey]: item.const || (item.enum && item.enum[0]),\n          [this.itemTitle]: item.title\n        }));\n      }\n      // Case of an auto-complete field already defined\n      if (\n        this.fromUrlWithQuery &&\n        model &&\n        model[this.itemTitle] !== undefined\n      ) {\n        this.q = model[this.itemTitle];\n      }\n      // Case of a select based on an array somewhere in the data\n      if (this.fullSchema[\"x-fromData\"]) {\n        this.$watch(\n          \"modelRoot.\" + this.fullSchema[\"x-fromData\"],\n          val => {\n            this.rawSelectItems = val;\n          },\n          { immediate: true }\n        );\n      }\n      // Watch the dynamic parts of the URL used to fill the select field\n      if (this.fromUrlKeys) {\n        this.fromUrlKeys.forEach(key => {\n          if (key.startsWith(\"context.\")) {\n            this.$watch(\n              \"options.\" + key,\n              val => {\n                this.fromUrlParams[key] = val;\n                this.fetchSelectItems();\n              },\n              { immediate: true }\n            );\n          } else {\n            this.$watch(\n              \"modelRoot.\" + key,\n              val => {\n                this.fromUrlParams[key] = val;\n                this.fetchSelectItems();\n              },\n              { immediate: true }\n            );\n          }\n        });\n      }\n\n      // Init subModels for allOf subschemas\n      if (this.fullSchema.type === \"object\" && this.fullSchema.allOf) {\n        this.fullSchema.allOf.forEach((allOf, i) => {\n          this.$set(\n            this.subModels,\n            \"allOf-\" + i,\n            JSON.parse(JSON.stringify(model))\n          );\n        });\n      }\n\n      // Case of a sub type selection based on a oneOf\n      this.currentOneOf = null;\n      if (\n        this.fullSchema.type === \"object\" &&\n        this.fullSchema.oneOf &&\n        !this.currentOneOf &&\n        this.oneOfConstProp\n      ) {\n        if (model && model[this.oneOfConstProp.key]) {\n          this.currentOneOf = this.fullSchema.oneOf.find(\n            item =>\n              item.properties[this.oneOfConstProp.key].const ===\n              model[this.oneOfConstProp.key]\n          );\n        } else if (this.fullSchema.default) {\n          this.currentOneOf = this.fullSchema.oneOf.find(\n            item =>\n              item.properties[this.oneOfConstProp.key].const ===\n              this.fullSchema.default[this.oneOfConstProp.key]\n          );\n        }\n      }\n\n      // Init subModel for current oneOf\n      if (this.currentOneOf) {\n        this.$set(\n          this.subModels,\n          \"currentOneOf\",\n          JSON.parse(JSON.stringify(model))\n        );\n      } else {\n        this.$set(this.subModels, \"currentOneOf\", {});\n      }\n\n      // Cleanup arrays of empty items\n      if (this.fullSchema.type === \"array\") {\n        model = model.filter(item => ![undefined, null].includes(item));\n      }\n\n      this.$set(this.modelWrapper, this.modelKey, model);\n    }\n  }\n};\n</script>\n\n<style lang=\"css\">\n.vjsf-property .array-card .v-card__text {\n  padding: 6px 16px 0 16px;\n}\n.vjsf-property .array-card .v-card__actions {\n  padding: 0 16px 6px 16px;\n}\n\n.vjsf-property .v-input--selection-controls {\n  margin-top: 0;\n}\n\n.vjsf-tooltip p:last-child {\n  margin-bottom: 0;\n}\n\n.vjsf-property .color-picker-trigger {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  border: 2px solid #ccc;\n}\n\n.vjsf-property .color-picker-trigger-empty {\n  background: linear-gradient(\n    to top right,\n    transparent 0,\n    transparent calc(50% - 2.4px),\n    #de080a 50%,\n    transparent calc(50% + 2.4px),\n    transparent\n  );\n}\n</style>\n"],"sourceRoot":"src/components/other/dynamicForms/components"}]}