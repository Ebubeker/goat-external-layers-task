{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/IconPicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/IconPicker.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mask } from \"vue-the-mask\";\nimport ApiService from \"../../services/api.service\";\nimport { mapFields } from \"vuex-map-fields\";\nimport { mapMutations, mapGetters } from \"vuex\";\nimport {\n  solidFontAwesomeProDefs,\n  fontAwesome6Categories\n} from \"../../utils/FontAwesomev6ProOnlySolid\";\nimport { SET_POI_ICONS } from \"../../store/mutations.type\";\nimport { debounce } from \"../../utils/Helpers\";\nexport default {\n  directives: { mask },\n  props: {\n    visible: { type: Boolean, required: true },\n    selectedIcon: { type: Object },\n    color: { type: String, default: \"#2BB381\" }\n  },\n  data: () => ({\n    isBusy: false,\n    isRestoring: false,\n    // Pagination\n    page: 1,\n    pageSize: 100,\n    listCount: 0,\n    historyList: [],\n    //--\n    newIcon: {},\n    iconColor: \"\",\n    mask: \"!#XXXXXXXX\",\n    iconColorMenu: false,\n    filters: { name: \"\", category: \"all\" },\n    filteredIcons: [],\n    iconCategories: [\"all\", \"custom(p4b)\"],\n    allIcons: []\n  }),\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n        }\n      }\n    },\n\n    swatchStyle() {\n      const { iconColor, iconColorMenu } = this;\n      return {\n        backgroundColor: iconColor,\n        cursor: \"pointer\",\n        height: \"30px\",\n        width: \"30px\",\n        borderRadius: iconColorMenu ? \"50%\" : \"4px\",\n        transition: \"border-radius 200ms ease-in-out\"\n      };\n    },\n    pages() {\n      let _this = this;\n      if (_this.pageSize == null || _this.listCount == null) return 0;\n      return Math.ceil(_this.listCount / _this.pageSize);\n    },\n    ...mapFields(\"app\", {\n      appConfig: \"appConfig\"\n    }),\n    ...mapGetters(\"poisaois\", {\n      poisAoisLayer: \"poisAoisLayer\"\n    })\n  },\n  methods: {\n    ...mapMutations(\"app\", {\n      setPoiIcons: SET_POI_ICONS\n    }),\n    updateIcon() {\n      const iconCategory = this.selectedIcon.value;\n      const payload = {};\n      payload[iconCategory] = {\n        icon: this.newIcon.icon ? this.newIcon.icon : this.selectedIcon.icon,\n        color: [this.iconColor]\n      };\n      this.isBusy = true;\n      ApiService.post(`customizations/user/insert/poi`, payload)\n        .then(res => {\n          if (res.data) {\n            this.appConfig = res.data;\n            this.setPoiIcons(res.data);\n            this.poisAoisLayer.changed();\n          }\n        })\n        .finally(() => {\n          this.isBusy = false;\n          this.show = false;\n        });\n    },\n    changeIconColor: debounce(function(color) {\n      this.iconColor = color;\n    }, 60),\n    restoreDefault() {\n      this.isRestoring = true;\n      ApiService.delete(\n        `customizations/user/reset-style/poi/${this.selectedIcon.value}`\n      )\n        .then(res => {\n          if (res.data) {\n            this.appConfig = res.data;\n            this.setPoiIcons(res.data);\n            this.poisAoisLayer.changed();\n          }\n        })\n        .finally(() => {\n          this.isRestoring = false;\n          this.show = false;\n        });\n    },\n    selectIcon(icon) {\n      this.newIcon = {\n        icon: icon.icon,\n        color: this.iconColor\n      };\n    },\n    selectColor(color) {\n      this.newIcon = {\n        icon: this.newIcon.icon ? this.newIcon.icon : this.selectedIcon.icon,\n        color: color\n      };\n      this.iconColor = color;\n    },\n    filterIcons() {\n      const filterKeys = Object.keys(this.filters);\n      if (!this.filters.name && this.filters.category == \"all\") {\n        this.filteredIcons = this.allIcons;\n      }\n      filterKeys.forEach(key => {\n        if (this.filters[key] === null) {\n          this.filters[key] = \"\";\n        }\n      });\n      this.filteredIcons = this.allIcons.filter(icon =>\n        icon.name.toLowerCase().includes(this.filters.name.toLowerCase())\n      );\n      if (this.filters.category != \"all\") {\n        this.filteredIcons = this.filteredIcons.filter(\n          icon => icon.category === this.filters.category\n        );\n      }\n      this.page = 1;\n      this.initPage();\n      this.updatePage(this.page);\n    },\n    initPage: function() {\n      let _this = this;\n      _this.listCount = _this.filteredIcons.length;\n      if (_this.listCount < _this.pageSize) {\n        _this.historyList = _this.filteredIcons;\n      } else {\n        _this.historyList = _this.filteredIcons.slice(0, _this.pageSize);\n      }\n    },\n    updatePage: function(pageIndex) {\n      let _this = this;\n      let _start = (pageIndex - 1) * _this.pageSize;\n      let _end = pageIndex * _this.pageSize;\n      _this.historyList = _this.filteredIcons.slice(_start, _end);\n      _this.page = pageIndex;\n    },\n    clear() {\n      this.filters.name = \"\";\n      this.filters.category = \"all\";\n      this.newIcon = {};\n      this.iconColor = \"\";\n      this.iconColorMenu = false;\n      this.page = 1;\n      this.pageSize = 100;\n      this.listCount = 0;\n      this.historyList = [];\n    },\n    cancel() {\n      this.clear();\n      this.show = false;\n    }\n  },\n  watch: {\n    visible() {\n      if (this.visible === true) {\n        this.clear();\n        this.iconColor = this.selectedIcon.color[0] || this.color;\n        this.filterIcons();\n      }\n    }\n  },\n  created() {\n    if (\n      window.FontAwesomeKitConfig &&\n      window.FontAwesomeKitConfig.iconUploads\n    ) {\n      const iconDefs = Object.keys(window.FontAwesomeKitConfig.iconUploads);\n      iconDefs.forEach(iconDef => {\n        this.allIcons.push({\n          icon: `fak fa-${iconDef}`,\n          category: \"custom(p4b)\",\n          name: \"\"\n        });\n      });\n\n      const solidIcons = Object.keys(solidFontAwesomeProDefs);\n      solidIcons.forEach(iconDef => {\n        this.allIcons.push({\n          icon: iconDef,\n          category: solidFontAwesomeProDefs[iconDef].category_id,\n          name: solidFontAwesomeProDefs[iconDef].label\n            ? solidFontAwesomeProDefs[iconDef].label\n            : \"\"\n        });\n      });\n\n      this.iconCategories = [...this.iconCategories, ...fontAwesome6Categories];\n    }\n  }\n};\n",{"version":3,"sources":["IconPicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"IconPicker.vue","sourceRoot":"src/components/other","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"show\"\n    v-if=\"selectedIcon\"\n    persistent\n    scrollable\n    max-width=\"830px\"\n  >\n    <v-card v-if=\"visible\">\n      <v-app-bar :color=\"color\" dark>\n        <v-app-bar-nav-icon\n          ><v-icon>fa-solid fa-icons</v-icon></v-app-bar-nav-icon\n        >\n        <v-toolbar-title>Change Icon</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-app-bar-nav-icon @click.stop=\"show = false\"\n          ><v-icon>close</v-icon></v-app-bar-nav-icon\n        >\n      </v-app-bar>\n      <v-row no-gutters class=\"mt-5 ml-2 mx-0 px-0\">\n        <v-col cols=\"12\" sm=\"4\"></v-col>\n        <v-col cols=\"12\" sm=\"4\" align=\"center\">\n          <v-row no-gutters align=\"center\" justify=\"center\">\n            <i\n              :class=\"\n                `${\n                  newIcon.icon ? newIcon.icon : selectedIcon.icon\n                } fa-2x notranslate mx-2 theme--light grey--text`\n              \"\n              :style=\"\n                Array.isArray(selectedIcon.color) &&\n                selectedIcon.color.length > 1\n                  ? `--fa-primary-color: ${selectedIcon.color[0]};--fa-secondary-color: ${selectedIcon.color[1]};width:40px;`\n                  : `color: ${\n                      iconColor ? iconColor : selectedIcon.color\n                    } !important;width:40px;`\n              \"\n            >\n            </i>\n            <h3 class=\"mt-1\">\n              {{\n                $te(`pois.${selectedIcon.value}`)\n                  ? $t(`pois.${selectedIcon.value}`)\n                  : selectedIcon.value\n              }}\n            </h3>\n          </v-row>\n        </v-col>\n        <v-col cols=\"12\" sm=\"4\" align=\"end\" class=\"pr-4\">\n          <v-tooltip top>\n            <template v-slot:activator=\"{ on }\">\n              <v-btn\n                v-on=\"on\"\n                @click=\"restoreDefault()\"\n                color=\"white\"\n                class=\"mr-2 mb-2 \"\n                fab\n                small\n                :loading=\"isRestoring\"\n                depressed\n              >\n                <i\n                  :class=\"\n                    `fas fa-undo fa-2x notranslate mx-2 theme--light grey--text`\n                  \"\n                ></i>\n              </v-btn>\n            </template>\n            Restore Default\n          </v-tooltip>\n        </v-col>\n      </v-row>\n      <v-divider class=\"my-2 mt-4 mx-4\"></v-divider>\n      <v-row justify=\"center\" class=\"mt-1 mx-0 px-0\">\n        <v-text-field\n          style=\"max-width:150px;\"\n          v-model=\"iconColor\"\n          v-mask=\"mask\"\n          hide-details\n          class=\"mx-5 mb-2 pa-0\"\n          solo\n        >\n          <template v-slot:append>\n            <v-menu\n              v-model=\"iconColorMenu\"\n              top\n              nudge-bottom=\"105\"\n              nudge-left=\"16\"\n              :close-on-content-click=\"false\"\n            >\n              <template v-slot:activator=\"{ on }\">\n                <div :style=\"swatchStyle\" v-on=\"on\" />\n              </template>\n              <v-card>\n                <v-card-text class=\"pa-0\">\n                  <v-color-picker\n                    @input=\"changeIconColor\"\n                    :value=\"iconColor\"\n                    flat\n                  />\n                </v-card-text>\n              </v-card>\n            </v-menu>\n          </template>\n        </v-text-field>\n      </v-row>\n      <v-divider class=\"mx-4 mt-1\"></v-divider>\n      <v-row class=\"mx-4 px-0\">\n        <v-col cols=\"4\">\n          <v-select\n            :items=\"iconCategories\"\n            v-model=\"filters.category\"\n            label=\"Categories\"\n            @change=\"filterIcons\"\n          >\n            <template slot=\"selection\" slot-scope=\"{ item }\">\n              {{\n                $te(`fa6Categories.${item}`)\n                  ? $t(`fa6Categories.${item}`)\n                  : item\n              }}\n            </template>\n            <template slot=\"item\" slot-scope=\"{ item }\">\n              {{\n                $te(`fa6Categories.${item}`)\n                  ? $t(`fa6Categories.${item}`)\n                  : item\n              }}\n            </template>\n          </v-select>\n        </v-col>\n        <v-col cols=\"8\">\n          <v-text-field\n            class=\"mt-4 mx-6\"\n            v-model=\"filters.name\"\n            placeholder=\"Search icon\"\n            prepend-icon=\"search\"\n            type=\"text\"\n            onautocomplete=\"off\"\n            @input=\"filterIcons\"\n            dense\n            clearable\n          />\n        </v-col>\n      </v-row>\n      <vue-scroll>\n        <v-container class=\"pb-0\">\n          <vue-scroll>\n            <v-col cols=\"12\">\n              <span :key=\"i\" v-for=\"(icon, i) in historyList\">\n                <v-tooltip :disabled=\"!icon.name\" top>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                      v-on=\"on\"\n                      @click=\"selectIcon(icon)\"\n                      color=\"white\"\n                      class=\"mr-2 mb-2 \"\n                      fab\n                      small\n                      depressed\n                    >\n                      <i\n                        :class=\"\n                          `${icon.icon} fa-2x notranslate mx-2 theme--light grey--text`\n                        \"\n                      ></i>\n                    </v-btn>\n                  </template>\n                  {{ icon.name }}\n                </v-tooltip>\n              </span>\n            </v-col>\n          </vue-scroll>\n        </v-container>\n      </vue-scroll>\n      <v-card-actions class=\"pt-0 elevation-3\">\n        <v-pagination\n          v-if=\"filteredIcons.length > 100\"\n          circle\n          :total-visible=\"7\"\n          :color=\"color\"\n          class=\"pagination pl-10 ml-10 mt-1\"\n          v-model=\"page\"\n          :length=\"pages\"\n          @input=\"updatePage\"\n        ></v-pagination>\n        <v-spacer></v-spacer>\n        <v-btn color=\"grey\" text @click.native=\"cancel\">{{\n          $t(\"buttonLabels.cancel\")\n        }}</v-btn>\n        <v-btn\n          color=\"primary darken-1\"\n          :loading=\"isBusy\"\n          text\n          @click.native=\"updateIcon\"\n          >{{ $t(\"buttonLabels.save\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mask } from \"vue-the-mask\";\nimport ApiService from \"../../services/api.service\";\nimport { mapFields } from \"vuex-map-fields\";\nimport { mapMutations, mapGetters } from \"vuex\";\nimport {\n  solidFontAwesomeProDefs,\n  fontAwesome6Categories\n} from \"../../utils/FontAwesomev6ProOnlySolid\";\nimport { SET_POI_ICONS } from \"../../store/mutations.type\";\nimport { debounce } from \"../../utils/Helpers\";\nexport default {\n  directives: { mask },\n  props: {\n    visible: { type: Boolean, required: true },\n    selectedIcon: { type: Object },\n    color: { type: String, default: \"#2BB381\" }\n  },\n  data: () => ({\n    isBusy: false,\n    isRestoring: false,\n    // Pagination\n    page: 1,\n    pageSize: 100,\n    listCount: 0,\n    historyList: [],\n    //--\n    newIcon: {},\n    iconColor: \"\",\n    mask: \"!#XXXXXXXX\",\n    iconColorMenu: false,\n    filters: { name: \"\", category: \"all\" },\n    filteredIcons: [],\n    iconCategories: [\"all\", \"custom(p4b)\"],\n    allIcons: []\n  }),\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n        }\n      }\n    },\n\n    swatchStyle() {\n      const { iconColor, iconColorMenu } = this;\n      return {\n        backgroundColor: iconColor,\n        cursor: \"pointer\",\n        height: \"30px\",\n        width: \"30px\",\n        borderRadius: iconColorMenu ? \"50%\" : \"4px\",\n        transition: \"border-radius 200ms ease-in-out\"\n      };\n    },\n    pages() {\n      let _this = this;\n      if (_this.pageSize == null || _this.listCount == null) return 0;\n      return Math.ceil(_this.listCount / _this.pageSize);\n    },\n    ...mapFields(\"app\", {\n      appConfig: \"appConfig\"\n    }),\n    ...mapGetters(\"poisaois\", {\n      poisAoisLayer: \"poisAoisLayer\"\n    })\n  },\n  methods: {\n    ...mapMutations(\"app\", {\n      setPoiIcons: SET_POI_ICONS\n    }),\n    updateIcon() {\n      const iconCategory = this.selectedIcon.value;\n      const payload = {};\n      payload[iconCategory] = {\n        icon: this.newIcon.icon ? this.newIcon.icon : this.selectedIcon.icon,\n        color: [this.iconColor]\n      };\n      this.isBusy = true;\n      ApiService.post(`customizations/user/insert/poi`, payload)\n        .then(res => {\n          if (res.data) {\n            this.appConfig = res.data;\n            this.setPoiIcons(res.data);\n            this.poisAoisLayer.changed();\n          }\n        })\n        .finally(() => {\n          this.isBusy = false;\n          this.show = false;\n        });\n    },\n    changeIconColor: debounce(function(color) {\n      this.iconColor = color;\n    }, 60),\n    restoreDefault() {\n      this.isRestoring = true;\n      ApiService.delete(\n        `customizations/user/reset-style/poi/${this.selectedIcon.value}`\n      )\n        .then(res => {\n          if (res.data) {\n            this.appConfig = res.data;\n            this.setPoiIcons(res.data);\n            this.poisAoisLayer.changed();\n          }\n        })\n        .finally(() => {\n          this.isRestoring = false;\n          this.show = false;\n        });\n    },\n    selectIcon(icon) {\n      this.newIcon = {\n        icon: icon.icon,\n        color: this.iconColor\n      };\n    },\n    selectColor(color) {\n      this.newIcon = {\n        icon: this.newIcon.icon ? this.newIcon.icon : this.selectedIcon.icon,\n        color: color\n      };\n      this.iconColor = color;\n    },\n    filterIcons() {\n      const filterKeys = Object.keys(this.filters);\n      if (!this.filters.name && this.filters.category == \"all\") {\n        this.filteredIcons = this.allIcons;\n      }\n      filterKeys.forEach(key => {\n        if (this.filters[key] === null) {\n          this.filters[key] = \"\";\n        }\n      });\n      this.filteredIcons = this.allIcons.filter(icon =>\n        icon.name.toLowerCase().includes(this.filters.name.toLowerCase())\n      );\n      if (this.filters.category != \"all\") {\n        this.filteredIcons = this.filteredIcons.filter(\n          icon => icon.category === this.filters.category\n        );\n      }\n      this.page = 1;\n      this.initPage();\n      this.updatePage(this.page);\n    },\n    initPage: function() {\n      let _this = this;\n      _this.listCount = _this.filteredIcons.length;\n      if (_this.listCount < _this.pageSize) {\n        _this.historyList = _this.filteredIcons;\n      } else {\n        _this.historyList = _this.filteredIcons.slice(0, _this.pageSize);\n      }\n    },\n    updatePage: function(pageIndex) {\n      let _this = this;\n      let _start = (pageIndex - 1) * _this.pageSize;\n      let _end = pageIndex * _this.pageSize;\n      _this.historyList = _this.filteredIcons.slice(_start, _end);\n      _this.page = pageIndex;\n    },\n    clear() {\n      this.filters.name = \"\";\n      this.filters.category = \"all\";\n      this.newIcon = {};\n      this.iconColor = \"\";\n      this.iconColorMenu = false;\n      this.page = 1;\n      this.pageSize = 100;\n      this.listCount = 0;\n      this.historyList = [];\n    },\n    cancel() {\n      this.clear();\n      this.show = false;\n    }\n  },\n  watch: {\n    visible() {\n      if (this.visible === true) {\n        this.clear();\n        this.iconColor = this.selectedIcon.color[0] || this.color;\n        this.filterIcons();\n      }\n    }\n  },\n  created() {\n    if (\n      window.FontAwesomeKitConfig &&\n      window.FontAwesomeKitConfig.iconUploads\n    ) {\n      const iconDefs = Object.keys(window.FontAwesomeKitConfig.iconUploads);\n      iconDefs.forEach(iconDef => {\n        this.allIcons.push({\n          icon: `fak fa-${iconDef}`,\n          category: \"custom(p4b)\",\n          name: \"\"\n        });\n      });\n\n      const solidIcons = Object.keys(solidFontAwesomeProDefs);\n      solidIcons.forEach(iconDef => {\n        this.allIcons.push({\n          icon: iconDef,\n          category: solidFontAwesomeProDefs[iconDef].category_id,\n          name: solidFontAwesomeProDefs[iconDef].label\n            ? solidFontAwesomeProDefs[iconDef].label\n            : \"\"\n        });\n      });\n\n      this.iconCategories = [...this.iconCategories, ...fontAwesome6Categories];\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}