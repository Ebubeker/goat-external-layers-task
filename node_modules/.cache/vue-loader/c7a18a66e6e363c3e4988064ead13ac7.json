{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/Map.vue?vue&type=template&id=517fdd72&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/Map.vue","mtime":1657784243494},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657636583285},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["\n<div id=\"ol-map-container\">\n  <!-- Map Controls -->\n  <div style=\"position:absolute;left:20px;top:10px;\">\n    <search-map\n      :viewbox=\"\n        transformExtent(studyArea[0].get('bounds'), 'EPSG:3857', 'EPSG:4326')\n      \"\n      class=\"mb-2\"\n      :map=\"map\"\n      v-show=\"!miniViewOlMap\"\n      :color=\"appColor.primary\"\n    />\n    <full-screen\n      class=\"mb-2\"\n      v-show=\"!miniViewOlMap\"\n      :color=\"appColor.primary\"\n    />\n    <measure class=\"mb-2\" v-show=\"!miniViewOlMap\" :color=\"appColor.primary\" />\n    <!-- toggle-streetview -->\n    <v-tooltip right>\n      <template v-slot:activator=\"{ on }\">\n        <v-btn\n          style=\"z-index: 1;\"\n          fab\n          dark\n          x-small\n          v-show=\"!miniViewOlMap\"\n          :color=\"appColor.primary\"\n          @click=\"showMiniViewer\"\n          :loading=\"isMapillaryBtnDisabled\"\n          v-on=\"on\"\n        >\n          <v-icon dark>streetview</v-icon>\n        </v-btn>\n      </template>\n      <span>{{ $t(`map.tooltips.toggleStreetView`) }}</span>\n    </v-tooltip>\n  </div>\n\n  <progress-status />\n  <background-switcher v-show=\"!miniViewOlMap\" />\n  <!-- Popup overlay  -->\n  <overlay-popup\n    :color=\"appColor.primary\"\n    :title=\"getPopupTitle()\"\n    v-show=\"popup.isVisible && miniViewOlMap === false\"\n    ref=\"popup\"\n  >\n    <v-btn icon>\n      <v-icon>close</v-icon>\n    </v-btn>\n    <template v-slot:close>\n      <template v-if=\"getInfoResult.length > 1\">\n        <span\n          >({{ popup.currentLayerIndex + 1 }} of\n          {{ getInfoResult.length }})</span\n        >\n        <v-icon\n          :disabled=\"popup.currentLayerIndex === 0\"\n          style=\"cursor:pointer;\"\n          @click=\"previousGetInfoLayer()\"\n          >chevron_left</v-icon\n        >\n        <v-icon\n          :disabled=\"popup.currentLayerIndex === getInfoResult.length - 1\"\n          style=\"cursor:pointer;\"\n          @click=\"nextGetInfoLayer()\"\n          >chevron_right</v-icon\n        >\n      </template>\n      <v-btn @click=\"closePopup()\" icon>\n        <v-icon>close</v-icon>\n      </v-btn>\n    </template>\n    <template v-slot:body>\n      <a\n        v-if=\"currentInfoFeature && currentInfoFeature.get('osm_id')\"\n        style=\"text-decoration:none;\"\n        :href=\"getOsmHrefLink()\"\n        target=\"_blank\"\n        title=\"\"\n      >\n        <i class=\"fa fa-edit\"></i> {{ $t(\"map.popup.editWithOsm\") }}</a\n      >\n\n      <div\n        style=\"max-height:800px;overflow:hidden;\"\n        v-if=\"getInfoResult[popup.currentLayerIndex]\"\n      >\n        <vue-scroll>\n          <v-simple-table\n            v-if=\"\n              getInfoResult[popup.currentLayerIndex].get('layerName') !==\n                'footpath_visualization'\n            \"\n            dense\n            class=\"pr-2\"\n          >\n            <template v-slot:default>\n              <tbody>\n                <tr v-for=\"item in currentInfo\" :key=\"item.property\">\n                  <td>{{ item.property }}</td>\n                  <td>{{ item.value }}</td>\n                </tr>\n              </tbody>\n            </template>\n          </v-simple-table>\n          <div v-else>\n            <indicators-chart\n              class=\"mr-4\"\n              :feature=\"getInfoResult[popup.currentLayerIndex]\"\n            ></indicators-chart>\n          </div>\n        </vue-scroll>\n      </div>\n    </template>\n  </overlay-popup>\n  <!-- Info Snackbar for not visible layers. -->\n  <v-snackbar\n    :color=\"appColor.primary\"\n    top\n    :timeout=\"visibilityLayerSnackbar.timeout\"\n    v-model=\"visibilityLayerSnackbar.state\"\n  >\n    <v-icon color=\"white\" class=\"mr-3\">\n      info\n    </v-icon>\n    <span v-html=\"visibilityLayerSnackbar.message\"></span>\n    <v-btn text @click=\"visibilityLayerSnackbar.state = false\">\n      <v-icon>close</v-icon>\n    </v-btn>\n  </v-snackbar>\n\n  <!-- Info snackbar when editing a layer -->\n  <v-snackbar\n    :color=\"selectedEditLayer ? scenarioLayerEditModeColor : appColor.primary\"\n    v-if=\"activeScenario\"\n    :timeout=\"0\"\n    style=\"font-size:16px;\"\n    :value=\"activeScenario ? true : false\"\n  >\n    <v-select\n      :style=\"\n        selectedEditLayer\n          ? `border-right: 1px solid grey;width: 200px;`\n          : 'width: 150px;'\n      \"\n      dark\n      hide-details\n      :class=\"{\n        'mx-3 mt-0 pt-0': true,\n        'pr-4': !!selectedEditLayer\n      }\"\n      :items=\"calculationMode.values\"\n      v-model=\"calculationMode.active\"\n    >\n      <template slot=\"selection\" slot-scope=\"{ item }\">\n        {{\n          $te(`isochrones.options.${item}`)\n            ? $t(`isochrones.options.${item}`).toUpperCase()\n            : item.toUpperCase()\n        }}\n      </template>\n      <template slot=\"item\" slot-scope=\"{ item }\">\n        {{\n          $te(`isochrones.options.${item}`)\n            ? $t(`isochrones.options.${item}`).toUpperCase()\n            : item.toUpperCase()\n        }}\n      </template>\n    </v-select>\n    <span v-if=\"selectedEditLayer\" class=\"h2\"\n      >{{\n        $te(`map.snackbarMessages.scenarioEditMode`)\n          ? $t(`map.snackbarMessages.scenarioEditMode`).toUpperCase()\n          : \"EDIT MODE\"\n      }}\n    </span>\n    <v-btn\n      v-if=\"selectedEditLayer\"\n      color=\"error\"\n      text\n      @click=\"selectedEditLayer = null\"\n    >\n      {{ $te(`buttonLabels.exit`) ? $t(`buttonLabels.exit`) : \"Exit\" }}\n    </v-btn>\n  </v-snackbar>\n  <v-snackbar\n    :color=\"appColor.primary\"\n    v-if=\"isRecomputingHeatmap\"\n    :timeout=\"0\"\n    top\n    center\n    style=\"font-size:14px;\"\n    :value=\"isRecomputingHeatmap\"\n  >\n    <span\n      >{{\n        $te(`heatmap.recomputingHeatmaps`)\n          ? $t(`heatmap.recomputingHeatmaps`)\n          : \"Recomputing Heatmaps... \"\n      }}\n    </span>\n    <v-progress-circular indeterminate color=\"white\"></v-progress-circular>\n  </v-snackbar>\n</div>\n",null]}