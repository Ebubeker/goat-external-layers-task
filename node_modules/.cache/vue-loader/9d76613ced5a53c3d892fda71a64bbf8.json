{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Language.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Language.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport i18n from \"@/plugins/i18n\";\nimport { EventBus } from \"../../EventBus\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  props: [\"visible\"],\n\n  data() {\n    return {\n      fab: false,\n      units: \"kilometers\",\n      languages: [\n        { flag: \"gb\", language: \"en\", title: \"English\" },\n        { flag: \"de\", language: \"de\", title: \"Deutsch\" }\n      ],\n      interactionType: \"languageChange\"\n    };\n  },\n  methods: {\n    changeLocale(locale) {\n      i18n.locale = locale;\n      //Close other interactions.\n      EventBus.$emit(\"ol-interaction-activated\", this.interactionType);\n      if (this.contextmenu) {\n        this.contextmenu.close();\n      }\n      EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n    }\n  },\n  computed: {\n    ...mapGetters(\"map\", {\n      contextmenu: \"contextmenu\"\n    }),\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    }),\n    notActiveLanguages() {\n      const notActiveLanguages = this.languages.filter(value => {\n        return value.language !== this.$i18n.locale;\n      });\n      return notActiveLanguages;\n    },\n    activeLanguage() {\n      let activeLanguage = this.languages.filter(value => {\n        return value.language === this.$i18n.locale;\n      });\n      if (activeLanguage.length === 0) {\n        activeLanguage = this.languages.filter(\n          value => value.language === \"en\"\n        );\n      }\n      return activeLanguage;\n    },\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n          EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n        }\n      }\n    }\n  },\n  mounted() {\n    const currentLang = this.$i18n.locale;\n\n    this.languages.forEach((l, index) => {\n      if (l.language === currentLang) {\n        this.selectedLanguage = index;\n      }\n    });\n  }\n};\n",{"version":3,"sources":["Language.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Language.vue","sourceRoot":"src/components/core","sourcesContent":["<template>\n  <v-speed-dial\n    v-model=\"fab\"\n    direction=\"top\"\n    class=\"mb-2\"\n    transition=\"slide-y-reverse-transition\"\n  >\n    <template v-slot:activator>\n      <v-tooltip :disabled=\"fab === true\" left>\n        <template v-slot:activator=\"{ on }\">\n          <v-btn v-on=\"on\" small class=\"elevation-0 ma-0 pa-0\">\n            <country-flag\n              :country=\"activeLanguage[0].flag || $i18n.locale\"\n              size=\"normal\"\n            />\n          </v-btn>\n        </template>\n        <span>Change language</span>\n      </v-tooltip>\n    </template>\n\n    <div>\n      <v-btn\n        class=\"ma-0 pa-0\"\n        text\n        v-for=\"entry in notActiveLanguages\"\n        @click=\"changeLocale(entry.language)\"\n        :key=\"entry.title\"\n      >\n        <country-flag :country=\"entry.flag\" size=\"normal\" />\n      </v-btn>\n    </div>\n  </v-speed-dial>\n</template>\n<script>\nimport i18n from \"@/plugins/i18n\";\nimport { EventBus } from \"../../EventBus\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  props: [\"visible\"],\n\n  data() {\n    return {\n      fab: false,\n      units: \"kilometers\",\n      languages: [\n        { flag: \"gb\", language: \"en\", title: \"English\" },\n        { flag: \"de\", language: \"de\", title: \"Deutsch\" }\n      ],\n      interactionType: \"languageChange\"\n    };\n  },\n  methods: {\n    changeLocale(locale) {\n      i18n.locale = locale;\n      //Close other interactions.\n      EventBus.$emit(\"ol-interaction-activated\", this.interactionType);\n      if (this.contextmenu) {\n        this.contextmenu.close();\n      }\n      EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n    }\n  },\n  computed: {\n    ...mapGetters(\"map\", {\n      contextmenu: \"contextmenu\"\n    }),\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    }),\n    notActiveLanguages() {\n      const notActiveLanguages = this.languages.filter(value => {\n        return value.language !== this.$i18n.locale;\n      });\n      return notActiveLanguages;\n    },\n    activeLanguage() {\n      let activeLanguage = this.languages.filter(value => {\n        return value.language === this.$i18n.locale;\n      });\n      if (activeLanguage.length === 0) {\n        activeLanguage = this.languages.filter(\n          value => value.language === \"en\"\n        );\n      }\n      return activeLanguage;\n    },\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n          EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n        }\n      }\n    }\n  },\n  mounted() {\n    const currentLang = this.$i18n.locale;\n\n    this.languages.forEach((l, index) => {\n      if (l.language === currentLang) {\n        this.selectedLanguage = index;\n      }\n    });\n  }\n};\n</script>\n"]}]}