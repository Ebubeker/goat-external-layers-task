{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/controls/Fullscreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/controls/Fullscreen.vue","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport screenfull from \"../../../../utils/ScreenFull\";\n\nexport default {\n  name: \"full-screen\",\n  props: {\n    color: { type: String, default: \"#2BB381\" }\n  },\n  data: () => ({\n    isFullscreen: false\n  }),\n  methods: {\n    /**\n     * Switch to/from fullscreen mode.\n     * Must be triggered by mouse event\n     */\n    toggleFullScreen() {\n      if (screenfull.isEnabled) {\n        screenfull.toggle();\n      }\n    }\n  },\n\n  mounted() {\n    screenfull.on(\"change\", () => {\n      this.isFullscreen = screenfull.isFullscreen;\n    });\n  }\n};\n",{"version":3,"sources":["Fullscreen.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Fullscreen.vue","sourceRoot":"src/components/viewer/ol/controls","sourcesContent":["<template>\n  <div>\n    <v-tooltip right>\n      <template v-slot:activator=\"{ on }\">\n        <v-btn\n          class=\"zoom-buttons\"\n          fab\n          dark\n          x-small\n          :color=\"color\"\n          @click=\"toggleFullScreen\"\n          v-on=\"on\"\n        >\n          <v-icon medium>{{\n            isFullscreen ? \"fas fa-compress\" : \"fas fa-expand\"\n          }}</v-icon>\n        </v-btn>\n      </template>\n\n      <span>{{\n        $t(`map.tooltips.${isFullscreen ? \"exitFullScreen\" : \"openFullScreen\"}`)\n      }}</span>\n    </v-tooltip>\n  </div>\n</template>\n<script>\nimport screenfull from \"../../../../utils/ScreenFull\";\n\nexport default {\n  name: \"full-screen\",\n  props: {\n    color: { type: String, default: \"#2BB381\" }\n  },\n  data: () => ({\n    isFullscreen: false\n  }),\n  methods: {\n    /**\n     * Switch to/from fullscreen mode.\n     * Must be triggered by mouse event\n     */\n    toggleFullScreen() {\n      if (screenfull.isEnabled) {\n        screenfull.toggle();\n      }\n    }\n  },\n\n  mounted() {\n    screenfull.on(\"change\", () => {\n      this.isFullscreen = screenfull.isFullscreen;\n    });\n  }\n};\n</script>\n<style lang=\"css\" scoped>\n.zoom-buttons {\n  z-index: 1;\n}\n</style>\n"]}]}