{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/layerTree/LayerTree.vue?vue&type=template&id=47c84fb2&scoped=true&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/layerTree/LayerTree.vue","mtime":1658127411980},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657636583285},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["\n<v-flex xs12 sm8 md4>\n  <v-divider></v-divider>\n  <vue-scroll>\n    <v-tabs-items v-model=\"layerTabIndex\">\n      <v-tab-item :eager=\"true\">\n        <v-expansion-panels accordion multiple>\n          <v-expansion-panel\n            v-for=\"(layerGroup, i) in layerGroupsArr\"\n            :key=\"i\"\n            expand\n          >\n            <v-expansion-panel-header\n              class=\"elevation-2\"\n              expand-icon=\"\"\n              v-slot=\"{ open }\"\n            >\n              <v-layout row wrap align-center>\n                <v-flex xs1>\n                  <v-icon small>{{\n                    getLayerGroupIcon(layerGroup.name)\n                  }}</v-icon>\n                </v-flex>\n                <v-flex xs10 class=\"light-text\" style=\"font-size:medium;\">\n                  <div>\n                    <b>{{ translate(\"layerGroup\", layerGroup.name) }}</b>\n                  </div>\n                </v-flex>\n                <v-flex xs1>\n                  <v-icon v-html=\"open ? 'remove' : 'add'\"></v-icon>\n                </v-flex>\n              </v-layout>\n            </v-expansion-panel-header>\n            <v-expansion-panel-content>\n              <!-- LAYERS -->\n              <v-expansion-panels readonly>\n                <v-expansion-panel\n                  v-for=\"(layer, i) in layerGroup.children\"\n                  :key=\"i\"\n                  class=\"layer-row\"\n                  :class=\"{\n                    'expansion-panel__container--active':\n                      layer.get('showOptions') === true\n                  }\"\n                >\n                  <v-expansion-panel-header expand-icon=\"\" v-slot=\"{}\">\n                    <v-layout row class=\"pl-1\" wrap align-center>\n                      <v-flex class=\"checkbox\" xs1>\n                        <v-simple-checkbox\n                          :color=\"appColor.secondary\"\n                          :value=\"layer.getVisible()\"\n                          @input=\"\n                            toggleLayerVisibility(layer, layerGroup.children)\n                          \"\n                        ></v-simple-checkbox>\n                      </v-flex>\n                      <v-flex xs10 class=\"light-text\">\n                        <h4 class=\"pl-2\">\n                          {{ translate(\"layerName\", layer.get(\"name\")) }}\n                        </h4>\n                      </v-flex>\n                      <v-flex xs1>\n                        <v-icon\n                          v-show=\"\n                            layer.getVisible() &&\n                              layer.get('name') !== 'study_area'\n                          \"\n                          small\n                          style=\"width: 30px; height: 30px;\"\n                          v-html=\"\n                            layer.get('showOptions')\n                              ? 'fas fa-chevron-down'\n                              : 'fas fa-chevron-up'\n                          \"\n                          :class=\"{\n                            'expansion-panel__container--active': layer.get(\n                              'showOptions'\n                            )\n                          }\"\n                          @click.stop=\"toggleLayerOptions(layer)\"\n                        ></v-icon>\n                      </v-flex>\n                    </v-layout>\n                  </v-expansion-panel-header>\n                  <v-card\n                    class=\"pt-2\"\n                    v-show=\"\n                      layer.getVisible() &&\n                        layer.get('showOptions') === true &&\n                        layer.get('name') !== 'study_area'\n                    \"\n                    style=\"background-color: white;\"\n                    transition=\"slide-y-reverse-transition\"\n                  >\n                    <InLegend :layer=\"layer\"></InLegend>\n                    <v-layout row style=\"width:100%;padding-left: 10px;\">\n                      <v-flex\n                        class=\"xs2\"\n                        style=\"text-align:center;\"\n                        v-if=\"\n                          [\n                            'VECTORTILE',\n                            'VECTOR',\n                            'MVT',\n                            'GEOBUF',\n                            'WMTS',\n                            'WMS'\n                          ].includes(layer.get('type').toUpperCase())\n                        \"\n                      >\n                        <v-icon\n                          v-ripple\n                          style=\"color:#B0B0B0;margin-top:3px;cursor:pointer\"\n                          dark\n                          @click=\"openStyleDialog(layer)\"\n                        >\n                          fas fa-cog\n                        </v-icon>\n                      </v-flex>\n                      <v-flex\n                        :class=\"{\n                          xs10:\n                            [\n                              'VECTORTILE',\n                              'VECTOR',\n                              'MVT',\n                              'GEOBUF',\n                              'WMTS',\n                              'WMS'\n                            ].includes(layer.get('type').toUpperCase()) ==\n                            true,\n                          xs12: false\n                        }\"\n                      >\n                        <v-slider\n                          :value=\"layer.getOpacity()\"\n                          class=\"mx-5\"\n                          step=\"0.05\"\n                          min=\"0\"\n                          max=\"1\"\n                          @input=\"changeLayerOpacity($event, layer)\"\n                          :label=\"$t('layerTree.settings.transparency')\"\n                          :color=\"appColor.secondary\"\n                        ></v-slider>\n                      </v-flex>\n                    </v-layout>\n                  </v-card>\n                </v-expansion-panel>\n              </v-expansion-panels>\n              <!-- ---- -->\n            </v-expansion-panel-content>\n          </v-expansion-panel>\n        </v-expansion-panels>\n        <v-layout class=\"mt-5\" column align-center>\n          <ImportExternalLayers @getLayerInfo=\"layerInfoSubmited\" />\n        </v-layout>\n      </v-tab-item>\n      <v-tab-item :eager=\"true\">\n        <layer-order\n          :map=\"map\"\n          :translate=\"translate\"\n          :toggleLayerOptions=\"toggleLayerOptions\"\n          :changeLayerOpacity=\"changeLayerOpacity\"\n        ></layer-order>\n      </v-tab-item>\n    </v-tabs-items>\n  </vue-scroll>\n  <span v-if=\"styleDialogStatus\">\n    <style-dialog\n      :item=\"currentItem\"\n      :translate=\"translate\"\n      :key=\"styleDialogKey\"\n      :styleDialogStatus=\"styleDialogStatus\"\n    >\n    </style-dialog>\n  </span>\n</v-flex>\n",null]}