{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/SideDrawer.vue?vue&type=template&id=38065fd8&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/SideDrawer.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657636583285},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["\n<div id=\"app-tools\">\n  <!-- App Bar Container -->\n  <v-navigation-drawer\n    id=\"app-toolbar-content\"\n    v-model=\"container\"\n    app\n    persistent\n    stateless\n    value=\"true\"\n    right\n    :permanent=\"container === true\"\n    width=\"350\"\n    hide-overlay\n    class=\"white left-shadow\"\n  >\n    <vue-scroll>\n      <v-layout\n        justify-space-between\n        column\n        fill-height\n        style=\"overflow-y: auto;padding-right:5px;\"\n      >\n        <keep-alive>\n          <component v-bind:is=\"activeUpComponent\"></component>\n        </keep-alive>\n        <v-icon @click=\"hide\" class=\"close-icon\">close</v-icon>\n      </v-layout>\n    </vue-scroll>\n  </v-navigation-drawer>\n  <!-- App Bar -->\n  <v-navigation-drawer\n    id=\"app-toolbar\"\n    value=\"true\"\n    app\n    persistent\n    permanent\n    right\n    hide-overlay\n    :class=\"{ 'left-shadow': container === false }\"\n    width=\"50\"\n  >\n    <!-- TOP BUTTONS -->\n    <v-layout justify-space-between column fill-height>\n      <v-row no-gutters style=\"height:35%;\" align-top>\n        <v-list>\n          <template v-for=\"(item, index) in topItems\">\n            <v-tooltip left :key=\"index\">\n              <template v-slot:activator=\"{ on }\">\n                <v-list-item\n                  :class=\"item.class\"\n                  @click=\"toggleComponent(item.componentToShow)\"\n                  v-on=\"on\"\n                  :style=\"getComponentButtonStyle(item)\"\n                >\n                  <v-list-item-action>\n                    <v-icon\n                      dense\n                      :color=\"\n                        activeUpComponent === item.componentToShow\n                          ? 'white'\n                          : 'rgba(0, 0, 0, 0.54)'\n                      \"\n                      light\n                      v-html=\"item.icon\"\n                    ></v-icon>\n                  </v-list-item-action>\n\n                  <v-list-item-content>\n                    <v-list-item-title v-html=\"item.text\"></v-list-item-title>\n                  </v-list-item-content>\n                </v-list-item>\n              </template>\n              <span>{{ item.text }}</span>\n            </v-tooltip>\n          </template>\n        </v-list>\n      </v-row>\n\n      <!-- MIDDLE BUTTONS -->\n      <v-row no-gutters style=\"height:55%;\" align-center>\n        <v-list>\n          <template v-for=\"(item, index) in middleItems\">\n            <v-tooltip left :key=\"index\">\n              <template v-slot:activator=\"{ on }\">\n                <v-list-item\n                  @click=\"toggleComponent(item.componentToShow)\"\n                  v-on=\"on\"\n                  :style=\"[\n                    activeUpComponent === item.componentToShow\n                      ? { backgroundColor: appColor.primary }\n                      : { backgroundColor: '' }\n                  ]\"\n                >\n                  <v-list-item-action>\n                    <v-icon\n                      dense\n                      :color=\"\n                        activeUpComponent === item.componentToShow\n                          ? 'white'\n                          : 'rgba(0, 0, 0, 0.54)'\n                      \"\n                      light\n                      v-html=\"item.icon\"\n                    ></v-icon>\n                  </v-list-item-action>\n\n                  <v-list-item-content>\n                    <v-list-item-title v-html=\"item.text\"></v-list-item-title>\n                  </v-list-item-content>\n                </v-list-item>\n              </template>\n              <span>{{ item.text }}</span>\n            </v-tooltip>\n          </template>\n        </v-list>\n      </v-row>\n      <!-- END BUTTONS -->\n      <v-row no-gutters style=\"height:10%;\">\n        <!-- BOTTOM ITEMS -->\n        <template v-for=\"(item, index) in bottomItems\">\n          <v-tooltip left :key=\"index\">\n            <template v-slot:activator=\"{ on }\">\n              <v-list-item\n                style=\"padding: 0 12px;\"\n                @click=\"toggleDialog(item.componentToShow)\"\n                v-on=\"on\"\n              >\n                <v-list-item-action>\n                  <v-icon\n                    light\n                    v-html=\"item.icon\"\n                    color=\"rgba(0, 0, 0, 0.54)\"\n                  ></v-icon>\n                </v-list-item-action>\n                <v-list-item-content>\n                  <v-list-item-title v-html=\"item.text\"></v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n            </template>\n            <span>{{ item.text }}</span>\n          </v-tooltip>\n        </template>\n      </v-row>\n    </v-layout>\n  </v-navigation-drawer>\n  <confirm ref=\"confirm\"></confirm>\n\n  <component\n    :visible=\"showDialog\"\n    @close=\"showDialog = false\"\n    v-bind:is=\"activeBottomComponent\"\n  ></component>\n  <!-- <app-about :visible=\"showDialog\" @close=\"showDialog = false\" /> -->\n</div>\n",null]}