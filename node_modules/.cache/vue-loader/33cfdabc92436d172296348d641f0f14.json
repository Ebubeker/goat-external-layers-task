{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/views/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/views/Main.vue","mtime":1657636289867},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { EventBus } from \"../EventBus.js\";\nimport appSidebar from \"../components/core/SideDrawer\";\nimport leftPanel from \"../components/core/LeftPanel\";\nimport Snackbar from \"../components/other/Snackbar\";\nimport Viewer from \"../components/viewer/viewer\";\nimport \"@/globalComponents\";\nimport {\n  GET_USER,\n  GET_USER_CUSTOM_DATA,\n  GET_APP_CONFIG,\n  GET_STUDY_AREA,\n  GET_STUDY_AREAS_LIST,\n  GET_OPENAPI_CONFIG,\n  GET_SCENARIOS,\n  TEST_TOKEN\n} from \"../store/actions.type\";\nimport { mapGetters, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"wg-app\",\n  components: {\n    Snackbar,\n    appSidebar,\n    \"left-panel\": leftPanel,\n    \"app-viewer\": Viewer\n  },\n  data() {\n    return {};\n  },\n  created() {\n    this.$store.dispatch(`auth/${TEST_TOKEN}`);\n    this.$store.dispatch(`auth/${GET_USER}`).then(response => {\n      if (response && response.language_preference) {\n        this.$i18n.locale = response.language_preference;\n      }\n    });\n    this.$store.dispatch(`app/${GET_APP_CONFIG}`).then(response => {\n      this.setCloneVectorStyles(response);\n    });\n    this.$store.dispatch(`app/${GET_USER_CUSTOM_DATA}`);\n    this.$store.dispatch(`map/${GET_STUDY_AREA}`);\n    this.$store.dispatch(`map/${GET_STUDY_AREAS_LIST}`);\n    this.$store.dispatch(`scenarios/${GET_SCENARIOS}`);\n    this.$store.dispatch(`app/${GET_OPENAPI_CONFIG}`);\n  },\n  computed: {\n    ...mapGetters(\"app\", {\n      appConfig: \"appConfig\",\n      appColor: \"appColor\"\n    }),\n    ...mapGetters(\"map\", {\n      studyArea: \"studyArea\"\n    })\n  },\n  methods: {\n    ...mapMutations(\"map\", {\n      setCloneVectorStyles: \"SET_CLONE_VECTOR_STYLES\"\n    })\n  },\n  mounted() {\n    EventBus.$emit(\"app-mounted\");\n  }\n};\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"pa-0 ma-0\">\n    <v-app\n      v-if=\"appConfig && studyArea\"\n      id=\"wg-app\"\n      v-cloak\n      data-app\n      :class=\"{ 'wg-app': true }\"\n    >\n      <left-panel />\n      <v-content>\n        <v-container\n          style=\"height: 100vh; max-height: 100%;\"\n          fluid\n          fill-height\n          class=\"pa-0\"\n        >\n          <vue-scroll>\n            <v-row style=\"width:100%;\" justify=\"center\" align=\"center\">\n              <app-viewer />\n              <snackbar />\n            </v-row>\n          </vue-scroll>\n        </v-container>\n      </v-content>\n      <app-sidebar />\n    </v-app>\n    <div class=\"loading\">\n      <v-progress-circular\n        :width=\"7\"\n        :size=\"100\"\n        color=\"#2BB381\"\n        indeterminate\n      ></v-progress-circular>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { EventBus } from \"../EventBus.js\";\nimport appSidebar from \"../components/core/SideDrawer\";\nimport leftPanel from \"../components/core/LeftPanel\";\nimport Snackbar from \"../components/other/Snackbar\";\nimport Viewer from \"../components/viewer/viewer\";\nimport \"@/globalComponents\";\nimport {\n  GET_USER,\n  GET_USER_CUSTOM_DATA,\n  GET_APP_CONFIG,\n  GET_STUDY_AREA,\n  GET_STUDY_AREAS_LIST,\n  GET_OPENAPI_CONFIG,\n  GET_SCENARIOS,\n  TEST_TOKEN\n} from \"../store/actions.type\";\nimport { mapGetters, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"wg-app\",\n  components: {\n    Snackbar,\n    appSidebar,\n    \"left-panel\": leftPanel,\n    \"app-viewer\": Viewer\n  },\n  data() {\n    return {};\n  },\n  created() {\n    this.$store.dispatch(`auth/${TEST_TOKEN}`);\n    this.$store.dispatch(`auth/${GET_USER}`).then(response => {\n      if (response && response.language_preference) {\n        this.$i18n.locale = response.language_preference;\n      }\n    });\n    this.$store.dispatch(`app/${GET_APP_CONFIG}`).then(response => {\n      this.setCloneVectorStyles(response);\n    });\n    this.$store.dispatch(`app/${GET_USER_CUSTOM_DATA}`);\n    this.$store.dispatch(`map/${GET_STUDY_AREA}`);\n    this.$store.dispatch(`map/${GET_STUDY_AREAS_LIST}`);\n    this.$store.dispatch(`scenarios/${GET_SCENARIOS}`);\n    this.$store.dispatch(`app/${GET_OPENAPI_CONFIG}`);\n  },\n  computed: {\n    ...mapGetters(\"app\", {\n      appConfig: \"appConfig\",\n      appColor: \"appColor\"\n    }),\n    ...mapGetters(\"map\", {\n      studyArea: \"studyArea\"\n    })\n  },\n  methods: {\n    ...mapMutations(\"map\", {\n      setCloneVectorStyles: \"SET_CLONE_VECTOR_STYLES\"\n    })\n  },\n  mounted() {\n    EventBus.$emit(\"app-mounted\");\n  }\n};\n</script>\n"]}]}