{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/heatmaps/Heatmaps.vue?vue&type=template&id=c4830462&scoped=true&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/heatmaps/Heatmaps.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657636583285},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["\n<v-flex xs12 sm8 md4>\n  <vue-scroll>\n    <template>\n      <!-- HEATMAP LAYERS -->\n      <v-expansion-panels accordion multiple v-model=\"heatmapPanel\">\n        <v-expansion-panel\n          v-for=\"(layerGroupValue, layerGroupKey) in heatmapGroup\"\n          :key=\"layerGroupKey\"\n          expand\n        >\n          <v-expansion-panel-header\n            class=\"elevation-2\"\n            expand-icon=\"\"\n            v-slot=\"{ open }\"\n          >\n            <v-layout row wrap align-center>\n              <v-flex xs1>\n                <img\n                  height=\"20\"\n                  width=\"20\"\n                  class=\"mr-3\"\n                  src=\"img/layer-style-icons/hexagon.svg\"\n                />\n              </v-flex>\n              <v-flex xs10 class=\"light-text\" style=\"font-size:medium;\">\n                <div>\n                  <b>{{ translate(\"layerGroup\", layerGroupKey) }}</b>\n                </div>\n              </v-flex>\n              <v-flex xs1>\n                <v-icon v-html=\"open ? 'remove' : 'add'\"></v-icon>\n              </v-flex>\n            </v-layout>\n          </v-expansion-panel-header>\n          <v-expansion-panel-content>\n            <!-- LAYERS -->\n            <v-expansion-panels readonly>\n              <v-expansion-panel\n                v-for=\"(layer, i) in layerGroupValue\"\n                :key=\"i\"\n                :disabled=\"isHeatmapDisabled(layer)\"\n                class=\"layer-row\"\n                :style=\"{\n                  backgroundColor: isHeatmapDisabled(layer)\n                    ? '#ECECEC'\n                    : '#ffffff'\n                }\"\n                :class=\"{\n                  'expansion-panel__container--active':\n                    layer.get('showOptions') === true\n                }\"\n              >\n                <v-expansion-panel-header expand-icon=\"\" v-slot=\"{}\">\n                  <v-layout row class=\"pl-1\" wrap align-center>\n                    <v-flex class=\"checkbox\" xs1>\n                      <v-checkbox\n                        :color=\"appColor.secondary\"\n                        :input-value=\"layer.getVisible()\"\n                        @change=\"\n                          toggleLayerVisibility(layer, layerGroupValue)\n                        \"\n                      ></v-checkbox>\n                    </v-flex>\n                    <v-flex xs10 class=\"light-text\">\n                      <h4 class=\"pl-2\">\n                        {{ translate(\"layerName\", layer.get(\"name\")) }}\n                      </h4>\n                    </v-flex>\n                    <v-flex xs1>\n                      <v-icon\n                        v-show=\"layer.getVisible()\"\n                        small\n                        style=\"width: 30px; height: 30px;\"\n                        v-html=\"\n                          layer.get('showOptions')\n                            ? 'fas fa-chevron-down'\n                            : 'fas fa-chevron-up'\n                        \"\n                        :class=\"{\n                          'expansion-panel__container--active': layer.get(\n                            'showOptions'\n                          )\n                        }\"\n                        @click.stop=\"toggleHeatmapOptions(layer)\"\n                      ></v-icon>\n                    </v-flex>\n                  </v-layout>\n                </v-expansion-panel-header>\n                <!-- --- -->\n                <!-- LAYER LEGEND AND SETTINGS  -->\n                <v-card\n                  class=\"pt-2\"\n                  v-show=\"layer.get('showOptions') === true\"\n                  style=\"background-color: white;\"\n                  transition=\"slide-y-reverse-transition\"\n                >\n                  <InLegend :layer=\"layer\"></InLegend>\n                  <v-layout row style=\"width:100%;padding-left: 10px;\">\n                    <v-flex\n                      class=\"xs2\"\n                      style=\"text-align:center;\"\n                      v-if=\"\n                        ['VECTORTILE', 'VECTOR', 'MVT', 'GEOBUF'].includes(\n                          layer.get('type').toUpperCase()\n                        )\n                      \"\n                    >\n                      <v-icon\n                        v-ripple\n                        style=\"color:#B0B0B0;margin-top:3px;cursor:pointer\"\n                        dark\n                        @click=\"openStyleDialog(layer)\"\n                      >\n                        fas fa-cog\n                      </v-icon>\n                    </v-flex>\n                    <v-flex\n                      :class=\"{\n                        xs10:\n                          ['VECTORTILE', 'VECTOR', 'MVT', 'GEOBUF'].includes(\n                            layer.get('type').toUpperCase()\n                          ) == true,\n                        xs12: false\n                      }\"\n                    >\n                      <v-slider\n                        :value=\"layer.getOpacity()\"\n                        class=\"mx-5\"\n                        step=\"0.05\"\n                        min=\"0\"\n                        max=\"1\"\n                        @input=\"changeLayerOpacity($event, layer)\"\n                        :label=\"$t('layerTree.settings.transparency')\"\n                        :color=\"appColor.secondary\"\n                      ></v-slider>\n                    </v-flex>\n                  </v-layout>\n                </v-card>\n                <!-- --- -->\n              </v-expansion-panel>\n            </v-expansion-panels>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </template>\n    <v-card-actions v-if=\"unCalculatedDataUploadIds.length > 0\">\n      <v-spacer></v-spacer>\n      <v-btn\n        :loading=\"isRecomputingHeatmap\"\n        class=\"white--text\"\n        @click=\"recomputeHeatmaps\"\n        :color=\"appColor.primary\"\n      >\n        <v-icon left>fas fa-refresh</v-icon\n        >{{ $t(\"heatmaps.recomputeHeatmap\") }}</v-btn\n      >\n    </v-card-actions>\n  </vue-scroll>\n  <span v-if=\"styleDialogStatus\">\n    <StyleDialog\n      :item=\"currentItem\"\n      :translate=\"translate\"\n      :key=\"styleDialogKey\"\n      :styleDialogStatus=\"styleDialogStatus\"\n    ></StyleDialog>\n  </span>\n</v-flex>\n",null]}