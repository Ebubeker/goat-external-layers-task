{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/Map.vue?vue&type=template&id=517fdd72&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/ol/Map.vue","mtime":1657784243494},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657636583285},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"ol-map-container\" } },\n    [\n      _c(\n        \"div\",\n        { staticStyle: { position: \"absolute\", left: \"20px\", top: \"10px\" } },\n        [\n          _c(\"search-map\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: !_vm.miniViewOlMap,\n                expression: \"!miniViewOlMap\"\n              }\n            ],\n            staticClass: \"mb-2\",\n            attrs: {\n              viewbox: _vm.transformExtent(\n                _vm.studyArea[0].get(\"bounds\"),\n                \"EPSG:3857\",\n                \"EPSG:4326\"\n              ),\n              map: _vm.map,\n              color: _vm.appColor.primary\n            }\n          }),\n          _c(\"full-screen\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: !_vm.miniViewOlMap,\n                expression: \"!miniViewOlMap\"\n              }\n            ],\n            staticClass: \"mb-2\",\n            attrs: { color: _vm.appColor.primary }\n          }),\n          _c(\"measure\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: !_vm.miniViewOlMap,\n                expression: \"!miniViewOlMap\"\n              }\n            ],\n            staticClass: \"mb-2\",\n            attrs: { color: _vm.appColor.primary }\n          }),\n          _c(\n            \"v-tooltip\",\n            {\n              attrs: { right: \"\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"activator\",\n                  fn: function(ref) {\n                    var on = ref.on\n                    return [\n                      _c(\n                        \"v-btn\",\n                        _vm._g(\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: !_vm.miniViewOlMap,\n                                expression: \"!miniViewOlMap\"\n                              }\n                            ],\n                            staticStyle: { \"z-index\": \"1\" },\n                            attrs: {\n                              fab: \"\",\n                              dark: \"\",\n                              \"x-small\": \"\",\n                              color: _vm.appColor.primary,\n                              loading: _vm.isMapillaryBtnDisabled\n                            },\n                            on: { click: _vm.showMiniViewer }\n                          },\n                          on\n                        ),\n                        [\n                          _c(\"v-icon\", { attrs: { dark: \"\" } }, [\n                            _vm._v(\"streetview\")\n                          ])\n                        ],\n                        1\n                      )\n                    ]\n                  }\n                }\n              ])\n            },\n            [\n              _c(\"span\", [\n                _vm._v(_vm._s(_vm.$t(\"map.tooltips.toggleStreetView\")))\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\"progress-status\"),\n      _c(\"background-switcher\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: !_vm.miniViewOlMap,\n            expression: \"!miniViewOlMap\"\n          }\n        ]\n      }),\n      _c(\n        \"overlay-popup\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.popup.isVisible && _vm.miniViewOlMap === false,\n              expression: \"popup.isVisible && miniViewOlMap === false\"\n            }\n          ],\n          ref: \"popup\",\n          attrs: { color: _vm.appColor.primary, title: _vm.getPopupTitle() },\n          scopedSlots: _vm._u([\n            {\n              key: \"close\",\n              fn: function() {\n                return [\n                  _vm.getInfoResult.length > 1\n                    ? [\n                        _c(\"span\", [\n                          _vm._v(\n                            \"(\" +\n                              _vm._s(_vm.popup.currentLayerIndex + 1) +\n                              \" of\\n          \" +\n                              _vm._s(_vm.getInfoResult.length) +\n                              \")\"\n                          )\n                        ]),\n                        _c(\n                          \"v-icon\",\n                          {\n                            staticStyle: { cursor: \"pointer\" },\n                            attrs: {\n                              disabled: _vm.popup.currentLayerIndex === 0\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.previousGetInfoLayer()\n                              }\n                            }\n                          },\n                          [_vm._v(\"chevron_left\")]\n                        ),\n                        _c(\n                          \"v-icon\",\n                          {\n                            staticStyle: { cursor: \"pointer\" },\n                            attrs: {\n                              disabled:\n                                _vm.popup.currentLayerIndex ===\n                                _vm.getInfoResult.length - 1\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.nextGetInfoLayer()\n                              }\n                            }\n                          },\n                          [_vm._v(\"chevron_right\")]\n                        )\n                      ]\n                    : _vm._e(),\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { icon: \"\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.closePopup()\n                        }\n                      }\n                    },\n                    [_c(\"v-icon\", [_vm._v(\"close\")])],\n                    1\n                  )\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"body\",\n              fn: function() {\n                return [\n                  _vm.currentInfoFeature && _vm.currentInfoFeature.get(\"osm_id\")\n                    ? _c(\n                        \"a\",\n                        {\n                          staticStyle: { \"text-decoration\": \"none\" },\n                          attrs: {\n                            href: _vm.getOsmHrefLink(),\n                            target: \"_blank\",\n                            title: \"\"\n                          }\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fa fa-edit\" }),\n                          _vm._v(\" \" + _vm._s(_vm.$t(\"map.popup.editWithOsm\")))\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm.getInfoResult[_vm.popup.currentLayerIndex]\n                    ? _c(\n                        \"div\",\n                        {\n                          staticStyle: {\n                            \"max-height\": \"800px\",\n                            overflow: \"hidden\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"vue-scroll\",\n                            [\n                              _vm.getInfoResult[\n                                _vm.popup.currentLayerIndex\n                              ].get(\"layerName\") !== \"footpath_visualization\"\n                                ? _c(\"v-simple-table\", {\n                                    staticClass: \"pr-2\",\n                                    attrs: { dense: \"\" },\n                                    scopedSlots: _vm._u(\n                                      [\n                                        {\n                                          key: \"default\",\n                                          fn: function() {\n                                            return [\n                                              _c(\n                                                \"tbody\",\n                                                _vm._l(\n                                                  _vm.currentInfo,\n                                                  function(item) {\n                                                    return _c(\n                                                      \"tr\",\n                                                      { key: item.property },\n                                                      [\n                                                        _c(\"td\", [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              item.property\n                                                            )\n                                                          )\n                                                        ]),\n                                                        _c(\"td\", [\n                                                          _vm._v(\n                                                            _vm._s(item.value)\n                                                          )\n                                                        ])\n                                                      ]\n                                                    )\n                                                  }\n                                                ),\n                                                0\n                                              )\n                                            ]\n                                          },\n                                          proxy: true\n                                        }\n                                      ],\n                                      null,\n                                      false,\n                                      1749296831\n                                    )\n                                  })\n                                : _c(\n                                    \"div\",\n                                    [\n                                      _c(\"indicators-chart\", {\n                                        staticClass: \"mr-4\",\n                                        attrs: {\n                                          feature:\n                                            _vm.getInfoResult[\n                                              _vm.popup.currentLayerIndex\n                                            ]\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    : _vm._e()\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _c(\n            \"v-btn\",\n            { attrs: { icon: \"\" } },\n            [_c(\"v-icon\", [_vm._v(\"close\")])],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: {\n            color: _vm.appColor.primary,\n            top: \"\",\n            timeout: _vm.visibilityLayerSnackbar.timeout\n          },\n          model: {\n            value: _vm.visibilityLayerSnackbar.state,\n            callback: function($$v) {\n              _vm.$set(_vm.visibilityLayerSnackbar, \"state\", $$v)\n            },\n            expression: \"visibilityLayerSnackbar.state\"\n          }\n        },\n        [\n          _c(\"v-icon\", { staticClass: \"mr-3\", attrs: { color: \"white\" } }, [\n            _vm._v(\"\\n      info\\n    \")\n          ]),\n          _c(\"span\", {\n            domProps: { innerHTML: _vm._s(_vm.visibilityLayerSnackbar.message) }\n          }),\n          _c(\n            \"v-btn\",\n            {\n              attrs: { text: \"\" },\n              on: {\n                click: function($event) {\n                  _vm.visibilityLayerSnackbar.state = false\n                }\n              }\n            },\n            [_c(\"v-icon\", [_vm._v(\"close\")])],\n            1\n          )\n        ],\n        1\n      ),\n      _vm.activeScenario\n        ? _c(\n            \"v-snackbar\",\n            {\n              staticStyle: { \"font-size\": \"16px\" },\n              attrs: {\n                color: _vm.selectedEditLayer\n                  ? _vm.scenarioLayerEditModeColor\n                  : _vm.appColor.primary,\n                timeout: 0,\n                value: _vm.activeScenario ? true : false\n              }\n            },\n            [\n              _c(\"v-select\", {\n                class: {\n                  \"mx-3 mt-0 pt-0\": true,\n                  \"pr-4\": !!_vm.selectedEditLayer\n                },\n                style: _vm.selectedEditLayer\n                  ? \"border-right: 1px solid grey;width: 200px;\"\n                  : \"width: 150px;\",\n                attrs: {\n                  dark: \"\",\n                  \"hide-details\": \"\",\n                  items: _vm.calculationMode.values\n                },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"selection\",\n                      fn: function(ref) {\n                        var item = ref.item\n                        return [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(\n                                _vm.$te(\"isochrones.options.\" + item)\n                                  ? _vm\n                                      .$t(\"isochrones.options.\" + item)\n                                      .toUpperCase()\n                                  : item.toUpperCase()\n                              ) +\n                              \"\\n      \"\n                          )\n                        ]\n                      }\n                    },\n                    {\n                      key: \"item\",\n                      fn: function(ref) {\n                        var item = ref.item\n                        return [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(\n                                _vm.$te(\"isochrones.options.\" + item)\n                                  ? _vm\n                                      .$t(\"isochrones.options.\" + item)\n                                      .toUpperCase()\n                                  : item.toUpperCase()\n                              ) +\n                              \"\\n      \"\n                          )\n                        ]\n                      }\n                    }\n                  ],\n                  null,\n                  false,\n                  2517038780\n                ),\n                model: {\n                  value: _vm.calculationMode.active,\n                  callback: function($$v) {\n                    _vm.$set(_vm.calculationMode, \"active\", $$v)\n                  },\n                  expression: \"calculationMode.active\"\n                }\n              }),\n              _vm.selectedEditLayer\n                ? _c(\"span\", { staticClass: \"h2\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.$te(\"map.snackbarMessages.scenarioEditMode\")\n                          ? _vm\n                              .$t(\"map.snackbarMessages.scenarioEditMode\")\n                              .toUpperCase()\n                          : \"EDIT MODE\"\n                      ) + \"\\n    \"\n                    )\n                  ])\n                : _vm._e(),\n              _vm.selectedEditLayer\n                ? _c(\n                    \"v-btn\",\n                    {\n                      attrs: { color: \"error\", text: \"\" },\n                      on: {\n                        click: function($event) {\n                          _vm.selectedEditLayer = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n      \" +\n                          _vm._s(\n                            _vm.$te(\"buttonLabels.exit\")\n                              ? _vm.$t(\"buttonLabels.exit\")\n                              : \"Exit\"\n                          ) +\n                          \"\\n    \"\n                      )\n                    ]\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.isRecomputingHeatmap\n        ? _c(\n            \"v-snackbar\",\n            {\n              staticStyle: { \"font-size\": \"14px\" },\n              attrs: {\n                color: _vm.appColor.primary,\n                timeout: 0,\n                top: \"\",\n                center: \"\",\n                value: _vm.isRecomputingHeatmap\n              }\n            },\n            [\n              _c(\"span\", [\n                _vm._v(\n                  _vm._s(\n                    _vm.$te(\"heatmap.recomputingHeatmaps\")\n                      ? _vm.$t(\"heatmap.recomputingHeatmaps\")\n                      : \"Recomputing Heatmaps... \"\n                  ) + \"\\n    \"\n                )\n              ]),\n              _c(\"v-progress-circular\", {\n                attrs: { indeterminate: \"\", color: \"white\" }\n              })\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}