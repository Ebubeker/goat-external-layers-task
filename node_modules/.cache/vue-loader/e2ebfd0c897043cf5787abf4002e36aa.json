{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Confirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Confirm.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  data: () => ({\n    dialog: false,\n    resolve: null,\n    reject: null,\n    message: null,\n    title: null,\n    options: {\n      color: \"primary\",\n      width: 290,\n      zIndex: 200,\n      icon: \"delete\",\n      showYes: true,\n      showNo: true,\n      yesText: \"\", // The value will be overwritted\n      noText: \"\" // The value will be overwritted\n    }\n  }),\n  methods: {\n    open(title, message, options) {\n      this.dialog = true;\n      this.title = title;\n      this.message = message;\n      this.options = Object.assign(this.options, options);\n      return new Promise((resolve, reject) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      });\n    },\n    agree() {\n      this.resolve(true);\n      this.dialog = false;\n    },\n    cancel() {\n      this.resolve(false);\n      this.dialog = false;\n    }\n  },\n  computed: {\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    })\n  }\n};\n/**\n * Vuetify Confirm Dialog component\n *\n * Insert component where you want to use it:\n * <confirm ref=\"confirm\"></confirm>\n *\n * Call it:\n * this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' }).then((confirm) => {})\n * Or use await:\n * if (await this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' })) {\n *   // yes\n * }\n * else {\n *   // cancel\n * }\n *\n * Alternatively you can place it in main App component and access it globally via this.$root.$confirm\n * <template>\n *   <v-app>\n *     ...\n *     <confirm ref=\"confirm\"></confirm>\n *   </v-app>\n * </template>\n *\n * mounted() {\n *   this.$root.$confirm = this.$refs.confirm.open\n * }\n */\n",{"version":3,"sources":["Confirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Confirm.vue","sourceRoot":"src/components/core","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialog\"\n    :max-width=\"options.width\"\n    @keydown.esc=\"cancel\"\n    v-bind:style=\"{ zIndex: options.zIndex }\"\n  >\n    <v-card>\n      <v-app-bar dark :color=\"appColor.primary\" dense flat>\n        <v-app-bar-nav-icon\n          ><v-icon>{{ options.icon }}</v-icon></v-app-bar-nav-icon\n        >\n        <v-toolbar-title class=\"white--text\">{{ title }}</v-toolbar-title>\n      </v-app-bar>\n      <v-card-text\n        class=\"body-1 font-weight-medium mt-3 mb-0 pb-0\"\n        v-show=\"!!message\"\n        >{{ message }}</v-card-text\n      >\n      <v-card-actions class=\"pt-0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          v-show=\"options.showYes\"\n          color=\"primary darken-1\"\n          text\n          @click.native=\"agree\"\n          >{{ options.yesText || $t(\"buttonLabels.yes\") }}</v-btn\n        >\n        <v-btn\n          v-show=\"options.showNo\"\n          color=\"grey\"\n          text\n          @click.native=\"cancel\"\n          >{{ options.noText || $t(\"buttonLabels.cancel\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  data: () => ({\n    dialog: false,\n    resolve: null,\n    reject: null,\n    message: null,\n    title: null,\n    options: {\n      color: \"primary\",\n      width: 290,\n      zIndex: 200,\n      icon: \"delete\",\n      showYes: true,\n      showNo: true,\n      yesText: \"\", // The value will be overwritted\n      noText: \"\" // The value will be overwritted\n    }\n  }),\n  methods: {\n    open(title, message, options) {\n      this.dialog = true;\n      this.title = title;\n      this.message = message;\n      this.options = Object.assign(this.options, options);\n      return new Promise((resolve, reject) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      });\n    },\n    agree() {\n      this.resolve(true);\n      this.dialog = false;\n    },\n    cancel() {\n      this.resolve(false);\n      this.dialog = false;\n    }\n  },\n  computed: {\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    })\n  }\n};\n/**\n * Vuetify Confirm Dialog component\n *\n * Insert component where you want to use it:\n * <confirm ref=\"confirm\"></confirm>\n *\n * Call it:\n * this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' }).then((confirm) => {})\n * Or use await:\n * if (await this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' })) {\n *   // yes\n * }\n * else {\n *   // cancel\n * }\n *\n * Alternatively you can place it in main App component and access it globally via this.$root.$confirm\n * <template>\n *   <v-app>\n *     ...\n *     <confirm ref=\"confirm\"></confirm>\n *   </v-app>\n * </template>\n *\n * mounted() {\n *   this.$root.$confirm = this.$refs.confirm.open\n * }\n */\n</script>\n"]}]}