{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/UserDataUpload.vue?vue&type=style&index=0&id=43f8e026&lang=css&scoped=true&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/UserDataUpload.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/css-loader/index.js","mtime":1657636580953},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657636583241},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/postcss-loader/src/index.js","mtime":1657636582109},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.truncate {\n  max-width: 65px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n",{"version":3,"sources":["UserDataUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8SA;AACA;AACA;AACA;AACA;AACA","file":"UserDataUpload.vue","sourceRoot":"src/components/core","sourcesContent":["<template>\n  <v-flex xs12 sm8 md4>\n    <v-card flat>\n      <v-subheader class=\"mb-4\">\n        <span class=\"title\">{{ $t(\"appBar.dataUpload.title\") }}</span>\n      </v-subheader>\n      <v-card-text class=\"pt-0 pb-0 px-0 mx-0\">\n        <v-divider></v-divider>\n      </v-card-text>\n      <v-card-text class=\"pa-2\">\n        <div>\n          <v-tooltip top>\n            <template v-slot:activator=\"{ on }\">\n              <v-btn\n                :disabled=\"uploadedStorageSize > currentUser.storage\"\n                v-on=\"on\"\n                class=\"mt-n11 ml-2\"\n                :color=\"appColor.primary\"\n                @click=\"openUserDataUploadDialog\"\n                fab\n                small\n              >\n                <v-icon color=\"white\">add</v-icon>\n              </v-btn>\n            </template>\n            <span>{{ $t(\"appBar.dataUpload.uploadSet\") }}</span></v-tooltip\n          >\n        </div>\n        <v-alert\n          v-if=\"uploadedStorageSize > currentUser.storage\"\n          dense\n          outlined\n          type=\"error\"\n        >\n          {{ $t(\"appBar.dataUpload.availableStorageExceeded\") }}\n        </v-alert>\n      </v-card-text>\n      <v-card class=\"px-16 mx-4 py-0 mb-2 fill-height\" flat>\n        <p class=\"mt-2 mb-1 sub-header\">\n          {{ (uploadedStorageSize / 1024).toFixed(2)\n          }}{{ $t(\"userSettings.mbOf\") }}\n          {{ parseInt(currentUser.storage / 1024)\n          }}{{ $t(\"userSettings.mbUsed\") }}\n        </p>\n        <v-progress-linear\n          height=\"2\"\n          :color=\"appColor.secondary\"\n          :value=\"occupiedStoragePercentage\"\n          class=\"mb-6 mt-0 pt-0\"\n        ></v-progress-linear>\n        <v-hover v-slot=\"{ hover }\">\n          <v-btn\n            small\n            class=\"white--text\"\n            :color=\"hover ? 'error' : 'grey'\"\n            outlined\n            @click=\"deleteAllFiles\"\n          >\n            <v-icon left>delete</v-icon\n            >{{ $t(\"appBar.dataUpload.deleteAllFiles\") }}\n          </v-btn>\n        </v-hover>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"tableData\"\n          class=\"elevation-0 subtitle-1 mt-6\"\n          hide-default-footer\n          hide-default-header\n          light\n        >\n          <template v-slot:header=\"{ props: { headers } }\">\n            <thead>\n              <tr>\n                <th style=\"font-size:13px;\" :key=\"h.value\" v-for=\"h in headers\">\n                  <span>{{ h.text }}</span>\n                </th>\n              </tr>\n            </thead>\n          </template>\n          <template v-slot:item.category=\"{ item }\">\n            <v-tooltip top>\n              <template v-slot:activator=\"{ on }\">\n                <p v-on=\"on\" class=\"mb-0 pb-0 truncate\">{{ item.category }}</p>\n              </template>\n              <span>{{ item.category }}</span>\n            </v-tooltip>\n            <v-tooltip top>\n              <template v-slot:activator=\"{ on }\">\n                <p\n                  v-on=\"on\"\n                  class=\"mb-0 sub-header truncate\"\n                  style=\"font-size:12px;\"\n                >\n                  {{ item.group }}\n                </p>\n              </template>\n              <span>{{ item.group }}</span>\n            </v-tooltip>\n          </template>\n          <template v-slot:items=\"props\">\n            <td>{{ props.item.date }}</td>\n            <td>{{ props.item.size }}</td>\n          </template>\n          <template v-slot:item.delete=\"{ item }\">\n            <v-hover v-slot=\"{ hover }\">\n              <v-icon\n                :color=\"hover ? 'error' : ''\"\n                dense\n                @click=\"deleteItem(item)\"\n              >\n                delete\n              </v-icon>\n            </v-hover>\n          </template>\n          <template v-slot:item.status=\"{ item }\">\n            <v-switch\n              dense\n              :color=\"appColor.secondary\"\n              :input-value=\"item.status\"\n              hide-details\n              :disabled=\"isBusy\"\n              @change=\"toggleState(item)\"\n            ></v-switch>\n          </template>\n        </v-data-table>\n        <v-divider></v-divider>\n        <v-row style=\"width: 100%;\" class=\"mt-2\">\n          <!-- add link to file -->\n          <v-spacer></v-spacer>\n          <a\n            class=\"caption\"\n            style=\"text-decoration: none !important;\"\n            href=\"./static/template.geojson\"\n            download=\"template.geojson\"\n            >{{ $t(\"appBar.dataUpload.geojsonTemplate\") }}</a\n          >\n        </v-row>\n        <v-row style=\"width: 100%;\" class=\"mt-1\">\n          <!-- add link to file -->\n          <v-spacer></v-spacer>\n          <a\n            class=\"caption\"\n            style=\"text-decoration: none !important;\"\n            href=\"./static/template_shapefile.zip\"\n            download=\"template_shapefile.zip\"\n            >{{ $t(\"appBar.dataUpload.shapefileTemplate\") }}</a\n          >\n        </v-row>\n      </v-card>\n    </v-card>\n    <user-data-upload\n      :visible=\"showDataUploadDialog\"\n      @close=\"showDataUploadDialog = false\"\n    />\n    <confirm ref=\"confirm\"></confirm>\n  </v-flex>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport ApiService from \"../../services/api.service\";\n// import {saveAs} from 'file-saver';\nimport {\n  GET_APP_CONFIG,\n  GET_POIS_AOIS,\n  GET_USER_CUSTOM_DATA\n} from \"../../store/actions.type\";\nimport UserDataUploadDialog from \"./UserDataUploadDialog\";\n\nexport default {\n  components: {\n    \"user-data-upload\": UserDataUploadDialog\n  },\n  data: () => ({\n    showDataUploadDialog: false,\n    isBusy: false\n  }),\n  computed: {\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\",\n      uploadedData: \"uploadedData\",\n      poisConfig: \"poisConfig\",\n      occupiedStoragePercentage: \"occupiedStoragePercentage\",\n      uploadedStorageSize: \"uploadedStorageSize\"\n    }),\n    ...mapGetters(\"auth\", {\n      currentUser: \"currentUser\"\n    }),\n    tableData() {\n      return this.uploadedData.map(item => {\n        return {\n          id: item.id,\n          category: this.$te(`pois.${item.category}`)\n            ? this.$t(`pois.${item.category}`)\n            : item.category,\n          group:\n            this.poisConfig[item.category] &&\n            this.poisConfig[item.category].group &&\n            this.$te(`pois.${this.poisConfig[item.category].group}`)\n              ? this.$t(`pois.${this.poisConfig[item.category].group}`)\n              : \"\",\n          date: new Date(Date.parse(item.creation_date)).toLocaleDateString(),\n          size: (item.upload_size / 1024).toFixed(2) + \"MB\",\n          status: item.state\n        };\n      });\n    },\n    headers() {\n      return [\n        {\n          text: this.$t(\"appBar.dataUpload.table.category\"),\n          value: \"category\",\n          sortable: false,\n          width: \"40%\"\n        },\n        {\n          text: this.$t(\"appBar.dataUpload.table.date\"),\n          value: \"date\",\n          align: \"center\",\n          sortable: false,\n          width: \"15%\"\n        },\n        {\n          text: this.$t(\"appBar.dataUpload.table.size\"),\n          value: \"size\",\n          align: \"center\",\n          sortable: false,\n          width: \"15%\"\n        },\n        {\n          text: this.$t(\"appBar.dataUpload.table.delete\"),\n          value: \"delete\",\n          align: \"center\",\n          sortable: false,\n          width: \"15%\"\n        },\n        {\n          text: this.$t(\"appBar.dataUpload.table.status\"),\n          value: \"status\",\n          sortable: false,\n          width: \"15%\"\n        }\n      ];\n    }\n  },\n  methods: {\n    deleteItem(item) {\n      this.$refs.confirm\n        .open(\n          this.$t(\"appBar.dataUpload.deleteAllFiles\"),\n          this.$t(\"appBar.dataUpload.deleteAllFilesMessage\"),\n          { color: this.appColor.primary }\n        )\n        .then(confirm => {\n          if (confirm) {\n            ApiService.delete(`/custom-data/poi/${item.id}`).then(() => {\n              this.$store.dispatch(`app/${GET_USER_CUSTOM_DATA}`);\n              this.$store.dispatch(`app/${GET_APP_CONFIG}`);\n              this.$store.dispatch(`poisaois/${GET_POIS_AOIS}`);\n            });\n          }\n        });\n    },\n    deleteAllFiles() {\n      this.$refs.confirm\n        .open(\n          this.$t(\"appBar.dataUpload.deleteAllFiles\"),\n          this.$t(\"appBar.dataUpload.deleteAllFilesMessage\"),\n          { color: this.appColor.primary }\n        )\n        .then(confirm => {\n          if (confirm) {\n            ApiService.delete(`/custom-data/poi/all`).then(() => {\n              this.$store.dispatch(`app/${GET_USER_CUSTOM_DATA}`);\n              this.$store.dispatch(`app/${GET_APP_CONFIG}`);\n              this.$store.dispatch(`poisaois/${GET_POIS_AOIS}`);\n            });\n          }\n        });\n    },\n    openUserDataUploadDialog() {\n      this.showDataUploadDialog = true;\n    },\n    toggleState(item) {\n      this.isBusy = true;\n      ApiService.patch(`/custom-data/poi`, {\n        data_upload_id: item.id,\n        state: !item.status\n      })\n        .then(() => {\n          this.$store.dispatch(`app/${GET_USER_CUSTOM_DATA}`);\n          this.$store.dispatch(`app/${GET_APP_CONFIG}`);\n          this.$store.dispatch(`poisaois/${GET_POIS_AOIS}`);\n        })\n        .finally(() => {\n          this.isBusy = false;\n        });\n    }\n  }\n};\n</script>\n<style lang=\"css\" scoped>\n.truncate {\n  max-width: 65px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style>\n"]}]}