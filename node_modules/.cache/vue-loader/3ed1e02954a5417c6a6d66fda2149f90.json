{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js??ref--19-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/viewer.vue?vue&type=template&id=66a99d4f&scoped=true&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/viewer/viewer.vue","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657636583285},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.print.active === false,\n            expression: \"print.active === false\"\n          }\n        ]\n      },\n      [\n        _c(\"isochrone-thematic-data\", {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: !_vm.miniViewOlMap,\n              expression: \"!miniViewOlMap\"\n            }\n          ]\n        }),\n        _vm.miniViewerVisible\n          ? _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: !_vm.isMapillaryBtnDisabled,\n                    expression: \"!isMapillaryBtnDisabled\"\n                  }\n                ],\n                staticClass: \"elevation-4\",\n                class: _vm.miniViewOlMap ? \"fullscreen\" : \"miniview\"\n              },\n              [\n                !_vm.miniViewOlMap\n                  ? _c(\n                      \"div\",\n                      {\n                        attrs: { id: \"close-miniview\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.closeMiniView()\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"v-icon\",\n                          { staticClass: \"close-icon\", attrs: { dark: \"\" } },\n                          [_vm._v(\"close\")]\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.miniViewOlMap\n                  ? _c(\n                      \"div\",\n                      {\n                        attrs: { id: \"switch-triangle\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.switchViews()\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"v-icon\",\n                          {\n                            staticClass: \"swap-icon\",\n                            attrs: { large: \"\", dark: \"\" }\n                          },\n                          [_vm._v(\"swap_horiz\")]\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.miniViewOlMap\n                  ? _c(\n                      \"div\",\n                      {\n                        attrs: { id: \"mapillaryAttribution\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.open()\n                          }\n                        }\n                      },\n                      [_vm._m(0)]\n                    )\n                  : _vm._e(),\n                _vm.miniViewerVisible\n                  ? _c(\"app-mapillary\", {\n                      ref: \"mapillary\",\n                      staticClass: \"fullscreen\",\n                      attrs: {\n                        accessToken: _vm.mapillaryAccessToken,\n                        baseLayerExtent: _vm.studyArea[0].get(\"bounds\")\n                      }\n                    })\n                  : _vm._e()\n              ],\n              1\n            )\n          : _vm._e(),\n        _c(\n          \"div\",\n          { class: _vm.miniViewOlMap ? \"miniview\" : \"fullscreen\" },\n          [\n            _vm.miniViewOlMap\n              ? _c(\n                  \"div\",\n                  {\n                    attrs: { id: \"close-miniview\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.closeMiniView()\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"v-icon\",\n                      { staticClass: \"close-icon\", attrs: { dark: \"\" } },\n                      [_vm._v(\"close\")]\n                    )\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm.miniViewOlMap\n              ? _c(\n                  \"div\",\n                  {\n                    attrs: { id: \"switch-triangle\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.switchViews()\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"v-icon\",\n                      {\n                        staticClass: \"swap-icon\",\n                        attrs: { large: \"\", dark: \"\" }\n                      },\n                      [_vm._v(\"swap_horiz\")]\n                    )\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _c(\"app-ol-map\", {\n              ref: \"olmap\",\n              staticClass: \"fullscreen\",\n              attrs: { miniViewOlMap: _vm.miniViewOlMap }\n            })\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.print.active === true,\n            expression: \"print.active === true\"\n          }\n        ]\n      },\n      [_c(\"print-viewer\")],\n      1\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"a\",\n      {\n        staticClass: \"AttributionIconContainer\",\n        attrs: { href: \"https://www.mapillary.com\", target: \"_blank\" }\n      },\n      [_c(\"div\", { staticClass: \"AttributionMapillaryLogo\" })]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}