{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/Settings.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport i18n from \"@/plugins/i18n\";\nimport { EventBus } from \"../../EventBus\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  props: [\"visible\"],\n  data() {\n    return {\n      selectedLanguage: 0,\n      units: \"kilometers\",\n      languages: [\n        { flag: \"gb\", language: \"en\", title: \"English\" },\n        { flag: \"de\", language: \"de\", title: \"Deutsch\" }\n      ],\n      interactionType: \"languageChange\"\n    };\n  },\n  methods: {\n    changeLocale(locale) {\n      i18n.locale = locale;\n      //Close other interactions.\n      EventBus.$emit(\"ol-interaction-activated\", this.interactionType);\n      EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n    }\n  },\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n          EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n        }\n      }\n    },\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    })\n  },\n  mounted() {\n    const currentLang = this.$i18n.locale;\n\n    this.languages.forEach((l, index) => {\n      if (l.language === currentLang) {\n        this.selectedLanguage = index;\n      }\n    });\n  }\n};\n",{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/components/core","sourcesContent":["<template>\n  <v-dialog v-model=\"show\" scrollable max-width=\"500px\">\n    <v-card flat>\n      <v-app-bar :color=\"appColor.primary\" dark>\n        <v-app-bar-nav-icon><v-icon>fas fa-flag</v-icon></v-app-bar-nav-icon>\n        <v-toolbar-title>{{ $t(\"appBar.settings.title\") }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-app-bar-nav-icon @click.stop=\"show = false\"\n          ><v-icon>close</v-icon></v-app-bar-nav-icon\n        >\n      </v-app-bar>\n      <vue-scroll>\n        <!-- App Language Settings -->\n        <v-subheader\n          ><h3>{{ $t(\"appBar.settings.language\") }}</h3></v-subheader\n        >\n        <v-card-text class=\"pr-16 pl-16 pt-0 pb-0 mb-2\">\n          <v-divider></v-divider>\n        </v-card-text>\n        <v-card-text>\n          <div class=\"\">\n            <span>\n              <v-btn-toggle v-model=\"selectedLanguage\" mandatory>\n                <v-flex class=\"mx-2\">\n                  <v-btn\n                    text\n                    v-for=\"entry in languages\"\n                    :key=\"entry.title\"\n                    @click=\"changeLocale(entry.language)\"\n                  >\n                    <!-- <flag :iso=\"entry.flag\" v-bind:squared=\"false\" /> -->\n                    <span class=\"pl-2\">{{ entry.title }}</span>\n                  </v-btn>\n                </v-flex>\n              </v-btn-toggle>\n            </span>\n          </div>\n        </v-card-text>\n      </vue-scroll>\n    </v-card>\n  </v-dialog>\n</template>\n<script>\nimport i18n from \"@/plugins/i18n\";\nimport { EventBus } from \"../../EventBus\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  props: [\"visible\"],\n  data() {\n    return {\n      selectedLanguage: 0,\n      units: \"kilometers\",\n      languages: [\n        { flag: \"gb\", language: \"en\", title: \"English\" },\n        { flag: \"de\", language: \"de\", title: \"Deutsch\" }\n      ],\n      interactionType: \"languageChange\"\n    };\n  },\n  methods: {\n    changeLocale(locale) {\n      i18n.locale = locale;\n      //Close other interactions.\n      EventBus.$emit(\"ol-interaction-activated\", this.interactionType);\n      EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n    }\n  },\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n          EventBus.$emit(\"ol-interaction-stoped\", this.interactionType);\n        }\n      }\n    },\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    })\n  },\n  mounted() {\n    const currentLang = this.$i18n.locale;\n\n    this.languages.forEach((l, index) => {\n      if (l.language === currentLang) {\n        this.selectedLanguage = index;\n      }\n    });\n  }\n};\n</script>\n"]}]}