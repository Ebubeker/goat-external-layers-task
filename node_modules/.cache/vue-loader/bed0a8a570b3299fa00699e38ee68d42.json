{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/SideDrawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/SideDrawer.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Utilities\n\nimport UserSettings from \"./UserSettings\";\nimport UserDataUpload from \"./UserDataUpload\";\nimport Settings from \"./Settings\";\nimport About from \"./About\";\nimport Print from \"../print/Print\";\nimport Filter from \"../layers/filter/Filter\";\nimport Edit from \"../layers/edit/Edit\";\nimport Language from \"./Language\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"app-sidebar\",\n  components: {\n    \"user-settings\": UserSettings,\n    \"user-data-upload\": UserDataUpload,\n    \"map-print\": Print,\n    \"map-filter\": Filter,\n    \"map-edit\": Edit,\n    \"app-settings\": Settings,\n    \"app-about\": About,\n    language: Language\n  },\n  data: () => ({\n    container: false,\n    activeUpComponent: \"\",\n    activeBottomComponent: \"\",\n    responsive: false,\n    showDialog: false\n  }),\n  computed: {\n    topItems() {\n      return [\n        {\n          icon: \"fas fa-circle-user\",\n          text: this.$t(\"appBar.buttons.user-settings\"),\n          componentToShow: \"user-settings\"\n        },\n        {\n          icon: \"fas fa-cloud\",\n          text: this.$t(\"appBar.buttons.user-data-upload\"),\n          componentToShow: \"user-data-upload\",\n          class: \"pl-3\"\n        }\n      ];\n    },\n    middleItems() {\n      return [\n        {\n          icon: \"fas fa-filter\",\n          text: this.$t(\"appBar.buttons.filter\"),\n          componentToShow: \"map-filter\"\n        },\n        {\n          icon: \"fas fa-edit\",\n          text: this.$t(\"appBar.buttons.edit\"),\n          componentToShow: \"map-edit\"\n        },\n        {\n          icon: \"fas fa-print\",\n          text: this.$t(\"appBar.buttons.print\"),\n          componentToShow: \"map-print\"\n        }\n      ];\n    },\n    bottomItems() {\n      return [\n        {\n          icon: \"fas fa-info-circle\",\n          text: this.$t(\"appBar.buttons.about\"),\n          componentToShow: \"app-about\"\n        }\n      ];\n    },\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\",\n      isRecomputingHeatmap: \"isRecomputingHeatmap\"\n    }),\n    ...mapGetters(\"map\", {\n      selectedLayer: \"selectedEditLayer\"\n    })\n  },\n  methods: {\n    toggleComponent(component) {\n      if (\n        (component === \"user-data-upload\" && this.selectedLayer) ||\n        this.isRecomputingHeatmap\n      ) {\n        return;\n      }\n      if (component === this.activeUpComponent) {\n        this.hide();\n      } else {\n        this.container = true;\n        this.activeUpComponent = component;\n      }\n    },\n    getComponentButtonStyle(item) {\n      let style = \"\";\n      if (this.activeUpComponent === item.componentToShow) {\n        style += \"background-color: \" + this.appColor.primary + \";\";\n      }\n      if (\n        (item.componentToShow === \"user-data-upload\" && this.selectedLayer) ||\n        this.isRecomputingHeatmap\n      ) {\n        style += \"cursor: not-allowed;\";\n      }\n      return style;\n    },\n\n    toggleDialog(component) {\n      this.activeBottomComponent = component;\n      this.showDialog = true;\n    },\n    hide() {\n      this.container = false;\n      this.activeUpComponent = \"\";\n      this.activeBottomComponent = \"\";\n      this.showDialog = false;\n    }\n  },\n  watch: {\n    isRecomputingHeatmap() {\n      if (\n        this.activeUpComponent === \"user-data-upload\" &&\n        this.isRecomputingHeatmap\n      ) {\n        this.hide();\n      }\n    }\n  }\n};\n",{"version":3,"sources":["SideDrawer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideDrawer.vue","sourceRoot":"src/components/core","sourcesContent":["<template>\n  <div id=\"app-tools\">\n    <!-- App Bar Container -->\n    <v-navigation-drawer\n      id=\"app-toolbar-content\"\n      v-model=\"container\"\n      app\n      persistent\n      stateless\n      value=\"true\"\n      right\n      :permanent=\"container === true\"\n      width=\"350\"\n      hide-overlay\n      class=\"white left-shadow\"\n    >\n      <vue-scroll>\n        <v-layout\n          justify-space-between\n          column\n          fill-height\n          style=\"overflow-y: auto;padding-right:5px;\"\n        >\n          <keep-alive>\n            <component v-bind:is=\"activeUpComponent\"></component>\n          </keep-alive>\n          <v-icon @click=\"hide\" class=\"close-icon\">close</v-icon>\n        </v-layout>\n      </vue-scroll>\n    </v-navigation-drawer>\n    <!-- App Bar -->\n    <v-navigation-drawer\n      id=\"app-toolbar\"\n      value=\"true\"\n      app\n      persistent\n      permanent\n      right\n      hide-overlay\n      :class=\"{ 'left-shadow': container === false }\"\n      width=\"50\"\n    >\n      <!-- TOP BUTTONS -->\n      <v-layout justify-space-between column fill-height>\n        <v-row no-gutters style=\"height:35%;\" align-top>\n          <v-list>\n            <template v-for=\"(item, index) in topItems\">\n              <v-tooltip left :key=\"index\">\n                <template v-slot:activator=\"{ on }\">\n                  <v-list-item\n                    :class=\"item.class\"\n                    @click=\"toggleComponent(item.componentToShow)\"\n                    v-on=\"on\"\n                    :style=\"getComponentButtonStyle(item)\"\n                  >\n                    <v-list-item-action>\n                      <v-icon\n                        dense\n                        :color=\"\n                          activeUpComponent === item.componentToShow\n                            ? 'white'\n                            : 'rgba(0, 0, 0, 0.54)'\n                        \"\n                        light\n                        v-html=\"item.icon\"\n                      ></v-icon>\n                    </v-list-item-action>\n\n                    <v-list-item-content>\n                      <v-list-item-title v-html=\"item.text\"></v-list-item-title>\n                    </v-list-item-content>\n                  </v-list-item>\n                </template>\n                <span>{{ item.text }}</span>\n              </v-tooltip>\n            </template>\n          </v-list>\n        </v-row>\n\n        <!-- MIDDLE BUTTONS -->\n        <v-row no-gutters style=\"height:55%;\" align-center>\n          <v-list>\n            <template v-for=\"(item, index) in middleItems\">\n              <v-tooltip left :key=\"index\">\n                <template v-slot:activator=\"{ on }\">\n                  <v-list-item\n                    @click=\"toggleComponent(item.componentToShow)\"\n                    v-on=\"on\"\n                    :style=\"[\n                      activeUpComponent === item.componentToShow\n                        ? { backgroundColor: appColor.primary }\n                        : { backgroundColor: '' }\n                    ]\"\n                  >\n                    <v-list-item-action>\n                      <v-icon\n                        dense\n                        :color=\"\n                          activeUpComponent === item.componentToShow\n                            ? 'white'\n                            : 'rgba(0, 0, 0, 0.54)'\n                        \"\n                        light\n                        v-html=\"item.icon\"\n                      ></v-icon>\n                    </v-list-item-action>\n\n                    <v-list-item-content>\n                      <v-list-item-title v-html=\"item.text\"></v-list-item-title>\n                    </v-list-item-content>\n                  </v-list-item>\n                </template>\n                <span>{{ item.text }}</span>\n              </v-tooltip>\n            </template>\n          </v-list>\n        </v-row>\n        <!-- END BUTTONS -->\n        <v-row no-gutters style=\"height:10%;\">\n          <!-- BOTTOM ITEMS -->\n          <template v-for=\"(item, index) in bottomItems\">\n            <v-tooltip left :key=\"index\">\n              <template v-slot:activator=\"{ on }\">\n                <v-list-item\n                  style=\"padding: 0 12px;\"\n                  @click=\"toggleDialog(item.componentToShow)\"\n                  v-on=\"on\"\n                >\n                  <v-list-item-action>\n                    <v-icon\n                      light\n                      v-html=\"item.icon\"\n                      color=\"rgba(0, 0, 0, 0.54)\"\n                    ></v-icon>\n                  </v-list-item-action>\n                  <v-list-item-content>\n                    <v-list-item-title v-html=\"item.text\"></v-list-item-title>\n                  </v-list-item-content>\n                </v-list-item>\n              </template>\n              <span>{{ item.text }}</span>\n            </v-tooltip>\n          </template>\n        </v-row>\n      </v-layout>\n    </v-navigation-drawer>\n    <confirm ref=\"confirm\"></confirm>\n\n    <component\n      :visible=\"showDialog\"\n      @close=\"showDialog = false\"\n      v-bind:is=\"activeBottomComponent\"\n    ></component>\n    <!-- <app-about :visible=\"showDialog\" @close=\"showDialog = false\" /> -->\n  </div>\n</template>\n\n<script>\n// Utilities\n\nimport UserSettings from \"./UserSettings\";\nimport UserDataUpload from \"./UserDataUpload\";\nimport Settings from \"./Settings\";\nimport About from \"./About\";\nimport Print from \"../print/Print\";\nimport Filter from \"../layers/filter/Filter\";\nimport Edit from \"../layers/edit/Edit\";\nimport Language from \"./Language\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"app-sidebar\",\n  components: {\n    \"user-settings\": UserSettings,\n    \"user-data-upload\": UserDataUpload,\n    \"map-print\": Print,\n    \"map-filter\": Filter,\n    \"map-edit\": Edit,\n    \"app-settings\": Settings,\n    \"app-about\": About,\n    language: Language\n  },\n  data: () => ({\n    container: false,\n    activeUpComponent: \"\",\n    activeBottomComponent: \"\",\n    responsive: false,\n    showDialog: false\n  }),\n  computed: {\n    topItems() {\n      return [\n        {\n          icon: \"fas fa-circle-user\",\n          text: this.$t(\"appBar.buttons.user-settings\"),\n          componentToShow: \"user-settings\"\n        },\n        {\n          icon: \"fas fa-cloud\",\n          text: this.$t(\"appBar.buttons.user-data-upload\"),\n          componentToShow: \"user-data-upload\",\n          class: \"pl-3\"\n        }\n      ];\n    },\n    middleItems() {\n      return [\n        {\n          icon: \"fas fa-filter\",\n          text: this.$t(\"appBar.buttons.filter\"),\n          componentToShow: \"map-filter\"\n        },\n        {\n          icon: \"fas fa-edit\",\n          text: this.$t(\"appBar.buttons.edit\"),\n          componentToShow: \"map-edit\"\n        },\n        {\n          icon: \"fas fa-print\",\n          text: this.$t(\"appBar.buttons.print\"),\n          componentToShow: \"map-print\"\n        }\n      ];\n    },\n    bottomItems() {\n      return [\n        {\n          icon: \"fas fa-info-circle\",\n          text: this.$t(\"appBar.buttons.about\"),\n          componentToShow: \"app-about\"\n        }\n      ];\n    },\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\",\n      isRecomputingHeatmap: \"isRecomputingHeatmap\"\n    }),\n    ...mapGetters(\"map\", {\n      selectedLayer: \"selectedEditLayer\"\n    })\n  },\n  methods: {\n    toggleComponent(component) {\n      if (\n        (component === \"user-data-upload\" && this.selectedLayer) ||\n        this.isRecomputingHeatmap\n      ) {\n        return;\n      }\n      if (component === this.activeUpComponent) {\n        this.hide();\n      } else {\n        this.container = true;\n        this.activeUpComponent = component;\n      }\n    },\n    getComponentButtonStyle(item) {\n      let style = \"\";\n      if (this.activeUpComponent === item.componentToShow) {\n        style += \"background-color: \" + this.appColor.primary + \";\";\n      }\n      if (\n        (item.componentToShow === \"user-data-upload\" && this.selectedLayer) ||\n        this.isRecomputingHeatmap\n      ) {\n        style += \"cursor: not-allowed;\";\n      }\n      return style;\n    },\n\n    toggleDialog(component) {\n      this.activeBottomComponent = component;\n      this.showDialog = true;\n    },\n    hide() {\n      this.container = false;\n      this.activeUpComponent = \"\";\n      this.activeBottomComponent = \"\";\n      this.showDialog = false;\n    }\n  },\n  watch: {\n    isRecomputingHeatmap() {\n      if (\n        this.activeUpComponent === \"user-data-upload\" &&\n        this.isRecomputingHeatmap\n      ) {\n        this.hide();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.activeIcon {\n  color: #30c2ff;\n}\n\n#app-toolbar {\n  .v-list__tile {\n    border-radius: 4px;\n    &--buy {\n      margin-top: auto;\n      margin-bottom: 17px;\n    }\n  }\n  .v-image__image--contain {\n    top: 9px;\n    height: 60%;\n  }\n  .search-input {\n    margin-bottom: 30px !important;\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n}\n\n#app-toolbar-content {\n  margin-right: 50px;\n  .close-icon {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n  }\n}\n\n.left-shadow {\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 20px;\n}\n</style>\n"]}]}