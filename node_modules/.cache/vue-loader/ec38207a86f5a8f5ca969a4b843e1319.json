{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/importLayers/ImportExternalLayers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/layers/importLayers/ImportExternalLayers.vue","mtime":1657791113634},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/babel-loader/lib/index.js","mtime":1657636581481},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n    url: \"\",\n    dialog: false,\n    error: \"\",\n    layerListToAdd: []\n  }),\n  methods: {\n    layerDataHandler() {\n      if (this.url !== \"\") {\n        this.error = \"\";\n        const data = {\n          layer_url: this.url\n        };\n        this.findAllAvailableLayers(data);\n        // this.dialog = false;\n        this.url = \"\";\n      } else {\n        this.error = \"Make sure to fill all the required fields\";\n      }\n    },\n    findAllAvailableLayers(data) {\n      fetch(data.layer_url)\n        .then(result => result.text())\n        .then(datares => {\n          let parser = new DOMParser(),\n            xmlDoc = parser.parseFromString(datares, \"text/xml\");\n          let names = [...xmlDoc.getElementsByTagName(\"Layer\")];\n          names.forEach((layerElement, idx) => {\n            if (idx !== 0) {\n              let layerPossibility = {\n                title: layerElement.getElementsByTagName(\"Title\")[0]\n                  .textContent,\n                name: layerElement.getElementsByTagName(\"Name\")[0].textContent,\n                url: data.layer_url.split(\"?\")[0] + \"?\"\n              };\n              this.layerListToAdd.push(layerPossibility);\n            }\n          });\n        });\n    }\n  }\n};\n",{"version":3,"sources":["ImportExternalLayers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImportExternalLayers.vue","sourceRoot":"src/components/layers/importLayers","sourcesContent":["<template>\n  <div class=\"text-center\">\n    <v-dialog v-model=\"dialog\" width=\"700\">\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-btn color=\"red lighten-2\" dark v-bind=\"attrs\" v-on=\"on\">\n          Click Me\n        </v-btn>\n      </template>\n\n      <v-card style=\"padding: 40px;\">\n        <v-card-text class=\"pa-0\">\n          <h1 class=\"mb-4\">Import a Layer</h1>\n          <v-alert v-if=\"error\" type=\"error\">{{ error }}</v-alert>\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n            <v-text-field\n              v-model=\"url\"\n              label=\"Source Url\"\n              required\n            ></v-text-field>\n          </v-form>\n          <div>\n            <p class=\"h6\">Results</p>\n            <v-card\n              v-for=\"(simpleLayer, idx) in layerListToAdd\"\n              :key=\"idx\"\n              class=\"mx-auto mb-2\"\n              style=\"display: flex\"\n            >\n              <v-card-text>\n                <div>{{ simpleLayer.title }}</div>\n                <p>{{ simpleLayer.url }}</p>\n              </v-card-text>\n              <v-card-actions>\n                <v-btn\n                  text\n                  @click=\"$emit('getLayerInfo', simpleLayer)\"\n                  color=\"deep-purple accent-4\"\n                >\n                  <v-icon small color=\"success\">fas fa-circle-plus</v-icon>\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </div>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"success\" text @click=\"layerDataHandler\">\n            Import Layers\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    url: \"\",\n    dialog: false,\n    error: \"\",\n    layerListToAdd: []\n  }),\n  methods: {\n    layerDataHandler() {\n      if (this.url !== \"\") {\n        this.error = \"\";\n        const data = {\n          layer_url: this.url\n        };\n        this.findAllAvailableLayers(data);\n        // this.dialog = false;\n        this.url = \"\";\n      } else {\n        this.error = \"Make sure to fill all the required fields\";\n      }\n    },\n    findAllAvailableLayers(data) {\n      fetch(data.layer_url)\n        .then(result => result.text())\n        .then(datares => {\n          let parser = new DOMParser(),\n            xmlDoc = parser.parseFromString(datares, \"text/xml\");\n          let names = [...xmlDoc.getElementsByTagName(\"Layer\")];\n          names.forEach((layerElement, idx) => {\n            if (idx !== 0) {\n              let layerPossibility = {\n                title: layerElement.getElementsByTagName(\"Title\")[0]\n                  .textContent,\n                name: layerElement.getElementsByTagName(\"Name\")[0].textContent,\n                url: data.layer_url.split(\"?\")[0] + \"?\"\n              };\n              this.layerListToAdd.push(layerPossibility);\n            }\n          });\n        });\n    }\n  }\n};\n</script>\n\n<style></style>\n"]}]}