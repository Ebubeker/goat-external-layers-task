{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/components/Property.vue?vue&type=template&id=4ef2c19e&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/other/dynamicForms/components/Property.vue","mtime":1657636289859},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1657636583285},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["\n<!-- Hide const ? Or make a readonly field -->\n<v-flex\n  v-if=\"\n    fullSchema &&\n      fullSchema.const === undefined &&\n      fullSchema['x-display'] !== 'hidden'\n  \"\n  :class=\"propertyClass\"\n  :style=\"fullSchema['x-style'] || ''\"\n>\n  <slot\n    :name=\"`prepend-${slotName}`\"\n    :fullKey=\"fullKey\"\n    :fullSchema=\"fullSchema\"\n    :modelWrapper=\"modelWrapper\"\n    :modelKey=\"modelKey\"\n    :model=\"modelWrapper[modelKey]\"\n    :required=\"required\"\n    :disabled=\"disabled\"\n    :rule=\"rules\"\n    :htmlDescription=\"htmlDescription\"\n  />\n  <slot\n    :name=\"slotName\"\n    :fullKey=\"fullKey\"\n    :fullSchema=\"fullSchema\"\n    :modelWrapper=\"modelWrapper\"\n    :modelKey=\"modelKey\"\n    :model=\"modelWrapper[modelKey]\"\n    :required=\"required\"\n    :disabled=\"disabled\"\n    :rule=\"rules\"\n    :htmlDescription=\"htmlDescription\"\n  >\n    <!-- Date picker -->\n    <v-menu\n      v-if=\"\n        fullSchema.type === 'string' &&\n          ['date', 'date-time'].includes(fullSchema.format)\n      \"\n      ref=\"menu\"\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      :nudge-right=\"40\"\n      :return-value.sync=\"modelWrapper[modelKey]\"\n      :disabled=\"disabled\"\n      transition=\"scale-transition\"\n      offset-y\n      full-width\n      min-width=\"290px\"\n    >\n      <template v-slot:activator=\"{ on }\">\n        <v-text-field\n          v-model=\"modelWrapper[modelKey]\"\n          :label=\"translateField(label)\"\n          :name=\"fullKey\"\n          :required=\"required\"\n          :rules=\"rules\"\n          :clearable=\"!required\"\n          :prepend-icon=\"options.icons.calendar\"\n          v-on=\"on\"\n        >\n          <tooltip\n            slot=\"append-outer\"\n            :options=\"options\"\n            :html-description=\"htmlDescription\"\n          />\n        </v-text-field>\n      </template>\n      <v-date-picker\n        v-model=\"modelWrapper[modelKey]\"\n        scrollable\n        landscape\n        :locale=\"options.locale\"\n      >\n        <v-spacer />\n        <v-btn\n          text\n          class=\"v-btn--flat\"\n          :style=\"oldFlat\"\n          @click=\"menu = false\"\n        >\n          Cancel\n        </v-btn>\n        <v-btn\n          text\n          class=\"v-btn--flat primary--text\"\n          @click=\"\n            $refs.menu.save(modelWrapper[modelKey]);\n            change();\n            input();\n          \"\n        >\n          OK\n        </v-btn>\n      </v-date-picker>\n    </v-menu>\n\n    <!-- Time picker -->\n    <v-menu\n      v-else-if=\"fullSchema.type === 'string' && fullSchema.format === 'time'\"\n      ref=\"menu\"\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      :nudge-right=\"40\"\n      :return-value.sync=\"modelWrapper[modelKey]\"\n      :disabled=\"disabled\"\n      transition=\"scale-transition\"\n      offset-y\n      full-width\n      min-width=\"290px\"\n    >\n      <template v-slot:activator=\"{ on }\">\n        <v-text-field\n          v-model=\"modelWrapper[modelKey]\"\n          :label=\"translateField(label)\"\n          :name=\"fullKey\"\n          :required=\"required\"\n          :rules=\"rules\"\n          :clearable=\"!required\"\n          :prepend-icon=\"options.icons.clock\"\n          readonly\n          v-on=\"on\"\n        >\n          <tooltip\n            slot=\"append-outer\"\n            :options=\"options\"\n            :html-description=\"htmlDescription\"\n          />\n        </v-text-field>\n      </template>\n      <v-time-picker v-model=\"modelWrapper[modelKey]\">\n        <v-spacer />\n        <v-btn\n          text\n          class=\"v-btn--flat\"\n          :style=\"oldFlat\"\n          @click=\"menu = false\"\n        >\n          Cancel\n        </v-btn>\n        <v-btn\n          text\n          class=\"v-btn--flat primary--text\"\n          @click=\"\n            $refs.menu.save(modelWrapper[modelKey]);\n            change();\n            input();\n          \"\n        >\n          OK\n        </v-btn>\n      </v-time-picker>\n    </v-menu>\n\n    <!-- Color picking -->\n    <template v-else-if=\"fullSchema.format === 'hexcolor'\">\n      <template v-if=\"fullSchema['x-display'] === 'color-picker'\">\n        <v-input\n          :name=\"fullKey\"\n          :label=\"translateField(label)\"\n          :required=\"required\"\n          :rules=\"rules\"\n          :disabled=\"disabled\"\n        >\n          <tooltip\n            slot=\"append\"\n            :options=\"options\"\n            :html-description=\"htmlDescription\"\n          />\n          &nbsp;&nbsp;\n          <v-menu\n            :close-on-content-click=\"false\"\n            :close-on-click=\"true\"\n            direction=\"bottom\"\n            offset-y\n          >\n            <template v-slot:activator=\"{ on }\">\n              <div\n                :style=\"`background-color: ${modelWrapper[modelKey]};`\"\n                :class=\"\n                  modelWrapper[modelKey]\n                    ? 'color-picker-trigger'\n                    : 'color-picker-trigger color-picker-trigger-empty'\n                \"\n                v-on=\"on\"\n              />\n            </template>\n            <color-picker\n              :value=\"modelWrapper[modelKey]\"\n              :preset-colors=\"options.colors.swatches\"\n              @input=\"\n                val => {\n                  modelWrapper[modelKey] = val.hex;\n                  input();\n                  change();\n                }\n              \"\n            />\n          </v-menu>\n        </v-input>\n      </template>\n      <v-input\n        v-else\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :required=\"required\"\n        :rules=\"rules\"\n        :disabled=\"disabled\"\n      >\n        <tooltip\n          slot=\"append\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n        &nbsp;&nbsp;\n        <swatches\n          v-model=\"modelWrapper[modelKey]\"\n          :disabled=\"disabled\"\n          :colors=\"options.colors\"\n          :trigger-style=\"{ width: '36px', height: '36px' }\"\n          shapes=\"circles\"\n          @input=\"\n            input();\n            change();\n          \"\n        />\n      </v-input>\n    </template>\n\n    <!-- auto-complete field on an ajax response with query -->\n    <v-autocomplete\n      v-else-if=\"fullSchema.isAutocomplete === true\"\n      v-model=\"modelWrapper[modelKey]\"\n      :items=\"translatedItems\"\n      :name=\"fullKey\"\n      :label=\"translateField(label)\"\n      :no-data-text=\"options.noDataMessage\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      :clearable=\"!required\"\n      @change=\"change\"\n      @input=\"input\"\n      item-text=\"text\"\n      item-value=\"value\"\n      autocomplete=\"off\"\n    >\n    </v-autocomplete>\n\n    <!-- Select field of objects based on an enum (array or not) -->\n    <template\n      v-else-if=\"\n        (fullSchema.type === 'array' &&\n          fullSchema.items.enum &&\n          fullSchema.items.type === 'object') ||\n          (fullSchema.enum && fullSchema.type === 'object')\n      \"\n    >\n      <v-select\n        v-model=\"modelWrapper[modelKey]\"\n        :items=\"selectItems\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :item-text=\"translateListValues\"\n        :required=\"required\"\n        :rules=\"rules\"\n        :disabled=\"disabled\"\n        :clearable=\"!required\"\n        :multiple=\"fullSchema.type === 'array'\"\n        :item-value=\"itemKey\"\n        :return-object=\"true\"\n        @change=\"change\"\n        @input=\"input\"\n        autocomplete=\"off\"\n      >\n      </v-select>\n    </template>\n\n    <!-- Select field of simple types based on an enum (array or simple value) -->\n    <template\n      v-else-if=\"\n        (fullSchema.type === 'array' && fullSchema.items.enum) ||\n          fullSchema.enum\n      \"\n    >\n      <v-select\n        v-model=\"modelWrapper[modelKey]\"\n        :items=\"selectItems\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :required=\"required\"\n        :rules=\"rules\"\n        :disabled=\"disabled\"\n        :clearable=\"!required\"\n        :multiple=\"fullSchema.type === 'array'\"\n        :item-text=\"translateListValues\"\n        @change=\"change\"\n        @input=\"input\"\n        autocomplete=\"off\"\n      >\n      </v-select>\n    </template>\n\n    <!-- Long text field in a textarea -->\n    <v-textarea\n      v-else-if=\"\n        fullSchema.type === 'string' &&\n          fullSchema.maxLength &&\n          fullSchema.maxLength > 1000 &&\n          fullSchema['x-display'] !== 'single-line'\n      \"\n      v-model=\"modelWrapper[modelKey]\"\n      :name=\"fullKey\"\n      :label=\"translateField(label)\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      filled\n      class=\"v-text-field--box v-text-field--enclosed\"\n      @change=\"change\"\n      @input=\"input\"\n    >\n      <tooltip\n        slot=\"append-outer\"\n        :options=\"options\"\n        :html-description=\"htmlDescription\"\n      />\n    </v-textarea>\n\n    <!-- text field displayed as password -->\n    <v-text-field\n      v-else-if=\"\n        fullSchema.type === 'string' && fullSchema['x-display'] === 'password'\n      \"\n      v-model=\"modelWrapper[modelKey]\"\n      :name=\"fullKey\"\n      :label=\"translateField(label)\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      type=\"password\"\n      @change=\"change\"\n      @input=\"input\"\n    >\n      <tooltip\n        slot=\"append-outer\"\n        :options=\"options\"\n        :html-description=\"htmlDescription\"\n      />\n    </v-text-field>\n\n    <!-- Simple text field -->\n    <v-text-field\n      autocomplete=\"off\"\n      v-else-if=\"\n        fullSchema.type === 'string' && fullSchema.key !== 'opening_hours'\n      \"\n      v-model=\"modelWrapper[modelKey]\"\n      :name=\"fullKey\"\n      :label=\"translateField(label)\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      @change=\"change\"\n      @input=\"input\"\n    >\n      <tooltip\n        slot=\"append-outer\"\n        :options=\"options\"\n        :html-description=\"htmlDescription\"\n      />\n    </v-text-field>\n\n    <!-- Opening Hours-->\n    <v-text-field\n      v-else-if=\"fullSchema.key === 'opening_hours'\"\n      v-model=\"modelWrapper[modelKey]\"\n      :name=\"fullKey\"\n      :label=\"translateField(label)\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      @change=\"change\"\n      @input=\"input\"\n      @click=\"openDialog('open_dialog')\"\n      prepend-icon=\"query_builder\"\n    >\n      <tooltip\n        slot=\"append-outer\"\n        :options=\"options\"\n        :html-description=\"htmlDescription\"\n      />\n    </v-text-field>\n    <!-- Number fields displayed in slider -->\n    <v-slider\n      v-else-if=\"\n        fullSchema['x-display'] === 'slider' &&\n          (fullSchema.type === 'number' || fullSchema.type === 'integer')\n      \"\n      v-model.number=\"modelWrapper[modelKey]\"\n      :name=\"fullKey\"\n      :label=\"translateField(label)\"\n      :min=\"fullSchema.minimum\"\n      :max=\"fullSchema.maximum\"\n      :step=\"\n        fullSchema['x-step'] || (fullSchema.type === 'integer' ? 1 : 0.01)\n      \"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      thumb-label\n      @change=\"change\"\n      @input=\"input\"\n    >\n      <tooltip\n        slot=\"append\"\n        :options=\"options\"\n        :html-description=\"htmlDescription\"\n      />\n    </v-slider>\n    <!-- Simple number fields -->\n    <v-text-field\n      v-else-if=\"\n        fullSchema.type === 'number' || fullSchema.type === 'integer'\n      \"\n      v-model.number=\"modelWrapper[modelKey]\"\n      :name=\"fullKey\"\n      :label=\"translateField(label)\"\n      :min=\"fullSchema.minimum\"\n      :max=\"fullSchema.maximum\"\n      :step=\"\n        fullSchema['x-step'] || (fullSchema.type === 'integer' ? 1 : 0.01)\n      \"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      type=\"number\"\n      @change=\"change\"\n      @input=\"input\"\n      autocomplete=\"off\"\n    >\n      <tooltip\n        slot=\"append-outer\"\n        :options=\"options\"\n        :html-description=\"htmlDescription\"\n      />\n    </v-text-field>\n\n    <!-- Simple boolean field -->\n    <v-checkbox\n      v-else-if=\"fullSchema.type === 'boolean'\"\n      v-model=\"modelWrapper[modelKey]\"\n      :label=\"translateField(label)\"\n      :name=\"fullKey\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :rules=\"rules\"\n      @change=\"change\"\n      @input=\"input\"\n    >\n      <tooltip\n        slot=\"append\"\n        :options=\"options\"\n        :html-description=\"htmlDescription\"\n      />\n    </v-checkbox>\n\n    <!-- Simple strings array -->\n    <template\n      v-else-if=\"\n        fullSchema.type === 'array' && fullSchema.items.type === 'string'\n      \"\n    >\n      <v-combobox\n        v-model=\"modelWrapper[modelKey]\"\n        :name=\"fullKey\"\n        :label=\"translateField(label)\"\n        :required=\"required\"\n        :rules=\"rules\"\n        :disabled=\"disabled\"\n        chips\n        multiple\n        append-icon=\"\"\n        @change=\"change\"\n        @input=\"input\"\n      >\n        <tooltip\n          slot=\"append-outer\"\n          :options=\"options\"\n          :html-description=\"htmlDescription\"\n        />\n        <template slot=\"selection\" slot-scope=\"data\">\n          <!-- @input is for vuetify1 and @click:close is for vuetify 2 -->\n          <v-chip\n            close\n            @input=\"\n              modelWrapper[modelKey].splice(data.index, 1);\n              change();\n              input();\n            \"\n            @click:close=\"\n              modelWrapper[modelKey].splice(data.index, 1);\n              change();\n              input();\n            \"\n          >\n            {{ data.item }}\n          </v-chip>\n        </template>\n      </v-combobox>\n    </template>\n\n    <!-- Object sub container with properties that may include a select based on a oneOf and subparts base on a allOf -->\n    <div v-else-if=\"fullSchema.type === 'object'\">\n      <v-subheader\n        v-if=\"fullSchema.title\"\n        :style=\"foldable ? 'cursor:pointer;' : ''\"\n        class=\"mt-2\"\n        @click=\"folded = !folded\"\n      >\n        {{ fullSchema.title }}\n        &nbsp;\n        <v-icon v-if=\"foldable && folded\">\n          {{ options.icons.dropdown }}\n        </v-icon>\n        <v-icon v-if=\"foldable && !folded\">\n          {{ options.icons.dropup }}\n        </v-icon>\n      </v-subheader>\n\n      <v-slide-y-transition>\n        <v-layout v-show=\"!foldable || !folded\" row wrap class=\"ma-0\">\n          <p v-if=\"fullSchema.description\" v-html=\"htmlDescription\" />\n          <property\n            v-for=\"childProp in fullSchema.properties\"\n            :key=\"childProp.key\"\n            :schema=\"childProp\"\n            :model-wrapper=\"modelWrapper[modelKey]\"\n            :model-root=\"modelRoot\"\n            :model-key=\"childProp.key\"\n            :parent-key=\"fullKey + '.'\"\n            :required=\"\n              !!(\n                fullSchema.required &&\n                fullSchema.required.includes(childProp.key)\n              )\n            \"\n            :options=\"options\"\n            @error=\"e => $emit('error', e)\"\n            @change=\"e => $emit('change', e)\"\n            @input=\"e => $emit('input', e)\"\n          >\n            <!-- propagate slots to children, see https://gist.github.com/Loilo/73c55ed04917ecf5d682ec70a2a1b8e2 -->\n            <slot v-for=\"(_, name) in $slots\" :slot=\"name\" :name=\"name\" />\n            <template\n              v-for=\"(_, name) in $scopedSlots\"\n              :slot=\"name\"\n              slot-scope=\"slotData\"\n            >\n              <slot :name=\"name\" v-bind=\"slotData\" />\n            </template>\n          </property>\n        </v-layout>\n      </v-slide-y-transition>\n    </div>\n\n    <!-- Tuples array sub container -->\n    <div\n      v-else-if=\"\n        fullSchema.type === 'array' && Array.isArray(fullSchema.items)\n      \"\n    >\n      <v-subheader\n        v-if=\"fullSchema.title\"\n        :style=\"foldable ? 'cursor:pointer;' : ''\"\n        class=\"mt-2\"\n        @click=\"folded = !folded\"\n      >\n        {{ fullSchema.title }}\n        &nbsp;\n        <v-icon v-if=\"foldable && folded\">\n          {{ options.icons.dropdown }}\n        </v-icon>\n        <v-icon v-if=\"foldable && !folded\">\n          {{ options.icons.dropup }}\n        </v-icon>\n      </v-subheader>\n      <v-slide-y-transition>\n        <div v-show=\"!foldable || !folded\">\n          <p v-if=\"fullSchema.description\" v-html=\"htmlDescription\" />\n          <property\n            v-for=\"(child, i) in fullSchema.items\"\n            :key=\"i\"\n            :schema=\"child\"\n            :model-wrapper=\"modelWrapper[modelKey]\"\n            :model-root=\"modelRoot\"\n            :model-key=\"i\"\n            :parent-key=\"fullKey + '.'\"\n            :options=\"options\"\n            @error=\"e => $emit('error', e)\"\n            @change=\"e => $emit('change', e)\"\n            @input=\"e => $emit('input', e)\"\n          >\n            <!-- propagate slots to children, see https://gist.github.com/Loilo/73c55ed04917ecf5d682ec70a2a1b8e2 -->\n            <slot v-for=\"(_, name) in $slots\" :slot=\"name\" :name=\"name\" />\n            <template\n              v-for=\"(_, name) in $scopedSlots\"\n              :slot=\"name\"\n              slot-scope=\"slotData\"\n            >\n              <slot :name=\"name\" v-bind=\"slotData\" />\n            </template>\n          </property>\n        </div>\n      </v-slide-y-transition>\n    </div>\n\n    <!-- Dynamic size array of complex types sub container -->\n    <div v-else-if=\"fullSchema.type === 'array'\">\n      <v-layout row class=\"mt-2 mb-1 pr-1\">\n        <v-subheader>{{ label }}</v-subheader>\n        <v-btn\n          v-if=\"!disabled && !(fromUrl || fullSchema.fromData)\"\n          fab\n          small\n          color=\"primary\"\n          @click=\"\n            modelWrapper[modelKey].push(\n              fullSchema.items.default || defaultValue(fullSchema.items)\n            );\n            change();\n            input();\n          \"\n        >\n          <v-icon>{{ options.icons.add }}</v-icon>\n        </v-btn>\n        <v-spacer />\n        <tooltip :options=\"options\" :html-description=\"htmlDescription\" />\n      </v-layout>\n\n      <v-container\n        v-if=\"modelWrapper[modelKey] && modelWrapper[modelKey].length\"\n        grid-list-md\n        class=\"pt-0 px-2\"\n      >\n        <v-layout row wrap class=\"ma-0\">\n          <draggable\n            v-model=\"modelWrapper[modelKey]\"\n            handle=\".handle\"\n            style=\"width: 100%;\"\n          >\n            <v-flex\n              v-for=\"(itemModel, i) in modelWrapper[modelKey]\"\n              :key=\"i\"\n              xs12\n            >\n              <v-card class=\"array-card\">\n                <v-card-title primary-title class=\"pa-0\">\n                  <v-btn\n                    v-if=\"!disabled && fullSchema['x-sortable'] !== false\"\n                    icon\n                    class=\"handle\"\n                  >\n                    <v-icon>{{ options.icons.reorder }}</v-icon>\n                  </v-btn>\n                  <span v-if=\"itemTitle && modelWrapper[modelKey][i]\">{{\n                    modelWrapper[modelKey][i][itemTitle]\n                  }}</span>\n                  <v-spacer />\n                  <v-btn\n                    v-if=\"!disabled && !(fromUrl || fullSchema.fromData)\"\n                    icon\n                    color=\"warning\"\n                    @click=\"\n                      modelWrapper[modelKey].splice(i, 1);\n                      change();\n                      input();\n                    \"\n                  >\n                    <v-icon>{{ options.icons.delete }}</v-icon>\n                  </v-btn>\n                </v-card-title>\n                <v-card-text>\n                  <property\n                    :schema=\"fullSchema.items\"\n                    :model-wrapper=\"modelWrapper[modelKey]\"\n                    :model-root=\"modelRoot\"\n                    :model-key=\"i\"\n                    :parent-key=\"`${fullKey}.`\"\n                    :options=\"options\"\n                    @error=\"e => $emit('error', e)\"\n                    @change=\"e => $emit('change', e)\"\n                    @input=\"e => $emit('input', e)\"\n                  >\n                    <!-- propagate slots to children, see https://gist.github.com/Loilo/73c55ed04917ecf5d682ec70a2a1b8e2 -->\n                    <slot\n                      v-for=\"(_, name) in $slots\"\n                      :slot=\"name\"\n                      :name=\"name\"\n                    />\n                    <template\n                      v-for=\"(_, name) in $scopedSlots\"\n                      :slot=\"name\"\n                      slot-scope=\"slotData\"\n                    >\n                      <slot :name=\"name\" v-bind=\"slotData\" />\n                    </template>\n                  </property>\n                </v-card-text>\n              </v-card>\n            </v-flex>\n          </draggable>\n        </v-layout>\n      </v-container>\n    </div>\n\n    <p v-else-if=\"options.debug\">\n      Unsupported type \"{{ fullSchema.type }}\" - {{ fullSchema }}\n    </p>\n  </slot>\n  <slot\n    :name=\"`append-${slotName}`\"\n    :fullKey=\"fullKey\"\n    :fullSchema=\"fullSchema\"\n    :modelWrapper=\"modelWrapper\"\n    :modelKey=\"modelKey\"\n    :model=\"modelWrapper[modelKey]\"\n    :required=\"required\"\n    :disabled=\"disabled\"\n    :rule=\"rules\"\n    :htmlDescription=\"htmlDescription\"\n  />\n</v-flex>\n",null]}