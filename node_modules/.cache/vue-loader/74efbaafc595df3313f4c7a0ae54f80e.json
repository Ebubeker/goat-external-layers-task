{"remainingRequest":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/ScenarioDialog.vue?vue&type=style&index=0&id=416b77a8&scoped=true&lang=css&","dependencies":[{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/src/components/core/ScenarioDialog.vue","mtime":1657636289855},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/css-loader/index.js","mtime":1657636580953},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657636583241},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/postcss-loader/src/index.js","mtime":1657636582109},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vuetify-loader/lib/loader.js","mtime":1657636582513},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/cache-loader/dist/cjs.js","mtime":1657636581841},{"path":"/home/ebubeker/Desktop/programming/work tasks/goat/app/client/node_modules/vue-loader/lib/index.js","mtime":1657636582549}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.v-card__text,\n.v-card__title {\n  word-break: normal !important;\n}\n",{"version":3,"sources":["ScenarioDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA","file":"ScenarioDialog.vue","sourceRoot":"src/components/core","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"show\"\n    max-width=\"400\"\n    @keydown.esc=\"scenarioDialog = false\"\n  >\n    <v-card>\n      <v-app-bar flat :color=\"appColor.primary\" dark height=\"50\">\n        <v-icon class=\"mr-3\">fas fa-bullseye</v-icon>\n        <v-toolbar-title>{{\n          scenarioId\n            ? $t(\"appBar.edit.editScenarioName\")\n            : $t(\"appBar.edit.createScenario\")\n        }}</v-toolbar-title>\n      </v-app-bar>\n      <v-card-text class=\"mt-5\">\n        <v-form\n          v-model=\"valid\"\n          @keyup.native.enter=\"\n            updateInsertScenario();\n            show = false;\n          \"\n          @submit.prevent=\"show = false\"\n          lazy-validation\n        >\n          <v-text-field\n            :rules=\"[rules.required, rules.counter]\"\n            v-model=\"scenarioName\"\n            :label=\"$t('appBar.edit.ScenarioName')\"\n            maxlength=\"50\"\n            lazy-validation\n          ></v-text-field>\n        </v-form>\n      </v-card-text>\n\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          color=\"primary darken-1\"\n          text\n          :disabled=\"!valid\"\n          @click.native=\"\n            updateInsertScenario();\n            show = false;\n          \"\n          >Ok</v-btn\n        >\n        <v-btn color=\"#dc143c\" text @click.native=\"show = false\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { mapFields } from \"vuex-map-fields\";\nimport { mapGetters } from \"vuex\";\nimport ApiService from \"../../services/api.service\";\nimport { GET_SCENARIOS } from \"../../store/actions.type\";\n\nexport default {\n  props: [\"visible\", \"scenarioId\"],\n  data: () => ({\n    valid: false,\n    scenarioName: \"\",\n    rules: {\n      required: value => !!value || \"Required.\",\n      counter: value => value.length < 50 || \"Max 50 characters\"\n    }\n  }),\n  computed: {\n    show: {\n      get() {\n        return this.visible;\n      },\n      set(value) {\n        if (!value) {\n          this.$emit(\"close\");\n        }\n      }\n    },\n    ...mapFields(\"scenarios\", {\n      scenarios: \"scenarios\",\n      activeScenario: \"activeScenario\"\n    }),\n    ...mapGetters(\"app\", {\n      appColor: \"appColor\"\n    })\n  },\n  methods: {\n    updateInsertScenario() {\n      const scenarioName = this.scenarioName;\n      const activeScenarioId = this.scenarioId;\n      const payload = {\n        scenario_name: scenarioName\n      };\n      let promise;\n      if (activeScenarioId) {\n        promise = ApiService.put(`/scenarios/${activeScenarioId}`, payload);\n      } else {\n        promise = ApiService.post(\"/scenarios\", payload);\n      }\n\n      promise\n        .then(response => {\n          if (response.status === 200) {\n            this.$store.dispatch(`scenarios/${GET_SCENARIOS}`);\n            let scenarioId = activeScenarioId || response.data.id;\n            scenarioId = parseInt(scenarioId);\n            this.activeScenario = scenarioId;\n          }\n        })\n        .catch(function(error) {\n          throw new Error(error);\n        });\n    }\n  },\n  watch: {\n    show() {\n      if (this.show === true) {\n        if (this.scenarioId) {\n          this.scenarios.forEach(scenario => {\n            if (scenario.id === this.scenarioId) {\n              this.scenarioName = scenario.scenario_name;\n            }\n          });\n        } else {\n          let id = this.scenarios.length;\n          if (id > 0) {\n            id += 1;\n            this.scenarioName = this.$t(\"appBar.edit.scenario\") + \" \" + id;\n          } else {\n            this.scenarioName = this.$t(\"appBar.edit.scenario\") + \" 1\";\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.v-card__text,\n.v-card__title {\n  word-break: normal !important;\n}\n</style>\n"]}]}